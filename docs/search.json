[
  {
    "objectID": "Patrick-Cherry-resume.html",
    "href": "Patrick-Cherry-resume.html",
    "title": "Aside",
    "section": "",
    "text": "pcherry [at] pm [dot] me\n upon request\n Senior Scientist | Genomics\n Twist Bioscience\n San Francisco, California\n pdcherry.github.io\n github.com/pdcherry\n linkedin.com/in/p-cherry\n\n\n\n\n\n\n\n\n\nLast updated on 2024-03-03.\nData-driven résumé made in R using pagedown."
  },
  {
    "objectID": "Patrick-Cherry-resume.html#contact",
    "href": "Patrick-Cherry-resume.html#contact",
    "title": "Aside",
    "section": "",
    "text": "pcherry [at] pm [dot] me\n upon request\n Senior Scientist | Genomics\n Twist Bioscience\n San Francisco, California\n pdcherry.github.io\n github.com/pdcherry\n linkedin.com/in/p-cherry"
  },
  {
    "objectID": "Patrick-Cherry-resume.html#disclaimer",
    "href": "Patrick-Cherry-resume.html#disclaimer",
    "title": "Aside",
    "section": "",
    "text": "Last updated on 2024-03-03.\nData-driven résumé made in R using pagedown."
  },
  {
    "objectID": "Patrick-Cherry-resume.html#patrick-cherry",
    "href": "Patrick-Cherry-resume.html#patrick-cherry",
    "title": "Aside",
    "section": "Patrick Cherry",
    "text": "Patrick Cherry\nPhD scientist skilled in bioinformatics, biological data science, data visualization, statistical modeling, next-generation sequencing (NGS), and tool-building. I’ve coded reproducible and rigorous pipelines for high-throughput experimental designs and genomic analyses, launched best-in-class oncology reference standards, and invented new molecular methods for DNA and microbe manipulation. Originally trained in Molecular Biology, I’m interested in taking my knowledge and practice of data science / bioinformatics to the next level, especially on spatial and single cell data analysis."
  },
  {
    "objectID": "Patrick-Cherry-resume.html#education",
    "href": "Patrick-Cherry-resume.html#education",
    "title": "Aside",
    "section": "Education",
    "text": "Education\n\nPhD\nUniversity of Colorado School of Medicine\nAurora/Denver, Colorado\n2019 - 2013\n\nPh.D. in Molecular Biology\nAdvisor: Jay Hesselberth, PhD.\nThesis: RNA Terminus chemistry affects the decay events that target HAC1 mRNA during the Unfolded Protein Response\n\n\n\nBA\nHendrix College\nConway, Arkansas\n2013 - 2009\n\nBiochemistry and Molecular Biology, with Distinction\nAdvisor: Andres Caro, PhD.\nSenior Capstone Project showing key stress response gene expression changes to oxidative stress in liver cells\nMinor in Mathematics; PI: Lars Seme; Project: Newton’s method as a fractal chaotic dynamical system"
  },
  {
    "objectID": "Patrick-Cherry-resume.html#industry-experience",
    "href": "Patrick-Cherry-resume.html#industry-experience",
    "title": "Aside",
    "section": "Industry Experience",
    "text": "Industry Experience\nI currently split my time between wet lab and computational activities. I have worked in a variety of roles ranging from HTP strain onboarding to genomics scientist. I like collaborative environments where I can learn from my peers and in turn teach others.\n\nSenior Scientist\nTwist Bioscience\nSouth San Francisco, California\nCurrent - 2022\n\nTech Lead of multiple reference control NPIs, custom OEMs, and commercial releases. Includes the Pan-cancer RNA Fusion Controls, Fragmentome Calibration Controls, CNV Controls, Pan-cancer cfDNA v2, and RNA-seq.\nMentored a direct report from Senior Research Associate to Scientist to serving as a Tech Lead on new product introductions\nOriginal research led to multiple outside presentations and applications for patent protection of product configuration and biochemical methods.\nCustom data analysis pipeline in R and Python demonstrated proof-of-concept design and QC success of the Pan-cancer RNA Fusion Controls; designed and implemented the production approach; used public databases and feedback from alpha testers to design configuration of fusions RNAs\nLed new technology evaluation of a new NGS platform with custom experiments and bioinformatic analyses in Python, R, and SQL to enable faster gene QC in Production. Also led ancillary experiments to speed up synthetic gene production. Coded, implemented, and distributed on company GitHub an internal package, twistcolorpal, that automatically adds Twist-brand colors to ggplot2 plots and sets up database connectors to SQL / Snowflake for parameterized dbplyr querying. Regularly use R, tidyverse, Python, Polars, AWS s3, Spark, PySpark, and Sparklyr, locally and on Databricks. Regularly implements and runs automated code tests with pytest and testthat.\n\n\n\nScientist\nTwist Bioscience\nSouth San Francisco, California\nCurrent - 2021\n\nTech Lead of Pan-Cancer Reference Standard, an ISO-13485 synthetic positive control with 458 unique variants among 84 cancer-associated genes at six QC’d VAFs, plus a WT control, which launched in Nov of 2021\nDesigned, implemented, & validated primer removal procedure for DNA standards that is compatible with methylation\nDevised and validated precise high-throughput DNA quantification process for accurate pooling. On-boarded droplet digital PCR (ddPCR) system into production; designed custom assays and evaluated pre-designed assays for use in production.\nLed multiple iterations of custom NGS analysis refined the QC approach and thresholds for ensuring a contamination-free production process; extensively used data visualization to communicate complex data to cross-functional collaboration teams.\nMade extensive use of UMI sequencing and created novel method to rigorously quantify library conversion efficiency to evaluate product and potential secondary sources\n\n\n\nScientist I\nZymergen, Inc.\nEmeryville, California\n2021 - 2019\n\nDesigned and implemented an automated high-throughput genotyping assay\nDesigned & carried out complex experiments on automation with and without LIMS sample tracking\nSupported a company-wide NGS core under high demand from diverse groups with complex needs using data-driven decision making and teaching\nUsed statistical methods to screen and optimize a genetic engineering protocol for newly-on-boarded microbe; delivered robust process while working on New Product Introduction team\nBuilt hundreds of plasmids using modern molecular cloning techniques like Gibson and Golden Gate"
  },
  {
    "objectID": "Patrick-Cherry-resume.html#research-experience",
    "href": "Patrick-Cherry-resume.html#research-experience",
    "title": "Aside",
    "section": "Research Experience",
    "text": "Research Experience\nI worked on a few projects during my PhD, and the RNA repair project led me to custom 5´-OH RNA-seq libraries, which inspired my fascination with transcriptomics and bioinformatics.\n\nDoctoral Research\nUniversity of Colorado School of Medicine\nAurora/Denver, Colorado\n2019 - 2014\n\nWrote, revised, & published two academic papers on RNA repair & yeast genetics\nEngineered and characterized genetic bypass of essential genes in budding yeast; on-boarded CRISPR/Cas9 for efficient and precise gene knock-in\nExpressed, purified, and used wild-type and mutant recombinant protein in E. coli to carry out an RNA modification enzymatic assay\nOptimized custom RNA-seq library protocol; independently planned, executed, troubleshooted RNA modification detection\nRoutinely conducted northern blotting, targeted depletion, primer extension, splinted ligation, and other esoteric DNA and RNA experiments"
  },
  {
    "objectID": "Patrick-Cherry-resume.html#intellectual-property",
    "href": "Patrick-Cherry-resume.html#intellectual-property",
    "title": "Aside",
    "section": "Intellectual Property",
    "text": "Intellectual Property\nWorking at Twist and Zymergen on new product research requires confidentiality, but public evidence of accomplishments often comes in patent applications. The Legal teams know me well for being a helpful expert in the process.\n\nMethylation-mediated adapter removal on nucleic acid sequences\nTwist Bioscience\nSouth San Francisco, California\n3/7/23\n\nUS 63/317,466\n\n\n\nExpansion of cfDNA for Libraries\nTwist Bioscience\nSouth San Francisco, California\n11/12/21\n\nUS Prov. Pat. Ref No 823.102\n\n\n\nLibraries for mutational analysis\nTwist Bioscience\nSouth San Francisco, California\n4/9/21\n\nUS Prov. Pat. Ref No 823.101\n\n\n\nMethod for counterselection in microorganisms\nZymergen, Inc.\nEmeryville, California\n3/25/21\n\nUS 2021_0087586 A1"
  },
  {
    "objectID": "Patrick-Cherry-resume.html#selected-publications",
    "href": "Patrick-Cherry-resume.html#selected-publications",
    "title": "Aside",
    "section": "Selected Publications",
    "text": "Selected Publications\nI communicate my results clearly, both in writing and in live presentations. I enjoy writing research papers, but my career has required more tech notes and app notes recently.\n\nTwist Pan-cancer synthetic reference materials technical guide\nTwist Bioscience\nSouth San Francisco, California\n12/21/21\n\nPatrick Cherry & Mike Bocek\n\n\n\nMultiple decay events target HAC1 mRNA during splicing to regulate the unfolded protein response\neLife\nN/A\n2019\n\nCherry, P., Peach, S., & Hesselberth, J.\n\n\n\nGenetic bypass of essential RNA repair enzymes in budding yeast\nRNA\nN/A\n2018\n\nCherry, P., White, L., York, K., & Hesselberth, J."
  },
  {
    "objectID": "Patrick-Cherry-resume.html#selected-presentations-talks",
    "href": "Patrick-Cherry-resume.html#selected-presentations-talks",
    "title": "Aside",
    "section": "Selected Presentations & Talks",
    "text": "Selected Presentations & Talks\nI give audience-centered presentations by adapting on the fly and over time to the venue and occasion. I like to transfer knowledge by giving methods/best practices talks whose slides can also serve as documentation.\n\nHigh sensitivity detection of specific ultra low-frequency somatic mutations for minimal residual disease (MRD) monitoring\nInternational Society of Liquid Biopsy Annual Congress\nMadrid, Spain\n11/19/23\n\n\nTwist pan-cancer synthetic RNA fusion control for assay development\nAmerican Association for Cancer Researchers\nOrlando, Florida\n4/16/23\n\n\nUse of synthetic CNV fragments to mimic copy number alterations for ctDNA reference standards\nAdvances in Genome Biology and Technology\nHollywood, Florida\n2/7/23\n\n\nTwist pan-cancer synthetic reference materials for cell-free DNA (cfDNA) assay development\nAmerican Association for Cancer Researchers\nNew Orleans, Louisiana\n4/12/22\n\n\nMolecular Methods Meet the Standards: Or how I learned to stop worrying and love UV-quantification\nTwist R&D Meeting\nSouth San Francisco, CA\n7/13/21\n\n\nR use at Zymergen\nZ-Tech Talk\nEmeryville, CA\n6/16/20\n\n\nData-driven troubleshooting of NGS experiments\nData Science Talk\nEmeryville, CA\n4/20/20"
  },
  {
    "objectID": "posts/2024_01_22-scRNA-seq.html",
    "href": "posts/2024_01_22-scRNA-seq.html",
    "title": "scRNA-seq Analysis: Messy Mouse Brain",
    "section": "",
    "text": "In this data analysis exercise, I analyze a mysterious 10x single-cell RNA-seq data file, which consists of a collection of single cells from an unknown tissue with unknown cell types. This is standard 10x mouse single cell RNA-seq data output and we are curious what type of tissue and cells these are.\n\n\n\nQuality control and filtering. Perform a basic QC of the data, explaining the rationale behind each step and the choice of parameters. How do the data look? What would you examine before moving forward to downstream analysis? Why?\nDimension reduction and visualization. How can we make sense of all this data? Perform dimensional reduction with any methods at your choice, explaining the rationale behind the choice and caveats of other potential dimensional reduction methods. Plot these out in a suitable visualization(s).\nMarker genes, clusters tissue, and cell types. Identify genes and gene-sets that define the tissue and are differentially expressed. What tissue are we looking at? How many cell types are present, and what kind?\n\nCell states can be very dynamic within the same cell type. For some of the most abundant cell types, feel free to dig deeper on any observed heterogeneity and the biological underpinning."
  },
  {
    "objectID": "posts/2024_01_22-scRNA-seq.html#introduction",
    "href": "posts/2024_01_22-scRNA-seq.html#introduction",
    "title": "scRNA-seq Analysis: Messy Mouse Brain",
    "section": "",
    "text": "In this data analysis exercise, I analyze a mysterious 10x single-cell RNA-seq data file, which consists of a collection of single cells from an unknown tissue with unknown cell types. This is standard 10x mouse single cell RNA-seq data output and we are curious what type of tissue and cells these are.\n\n\n\nQuality control and filtering. Perform a basic QC of the data, explaining the rationale behind each step and the choice of parameters. How do the data look? What would you examine before moving forward to downstream analysis? Why?\nDimension reduction and visualization. How can we make sense of all this data? Perform dimensional reduction with any methods at your choice, explaining the rationale behind the choice and caveats of other potential dimensional reduction methods. Plot these out in a suitable visualization(s).\nMarker genes, clusters tissue, and cell types. Identify genes and gene-sets that define the tissue and are differentially expressed. What tissue are we looking at? How many cell types are present, and what kind?\n\nCell states can be very dynamic within the same cell type. For some of the most abundant cell types, feel free to dig deeper on any observed heterogeneity and the biological underpinning."
  },
  {
    "objectID": "posts/2024_01_22-scRNA-seq.html#data-description",
    "href": "posts/2024_01_22-scRNA-seq.html#data-description",
    "title": "scRNA-seq Analysis: Messy Mouse Brain",
    "section": "Data description",
    "text": "Data description\n\ncounts: matrix matrix.mtx.gz\ncell barcodes: barcodes.tsv.gz\ngene features: features.tsv.gz"
  },
  {
    "objectID": "posts/2024_01_22-scRNA-seq.html#features",
    "href": "posts/2024_01_22-scRNA-seq.html#features",
    "title": "scRNA-seq Analysis: Messy Mouse Brain",
    "section": "Features",
    "text": "Features\n\nVlnPlot(koala, features = c(\"nCount_RNA\", \"nFeature_RNA\"), pt.size = .1) +\n  geom_hline(yintercept = 1100) +\n  geom_hline(yintercept = 2000, linetype = \"dashed\")\n\nWarning: Default search for \"data\" layer in \"RNA\" assay yielded no results;\nutilizing \"counts\" layer instead.\n\n\n\n\n\n\n\n\n\n\nkoala@meta.data$nCount_RNA %&gt;%\n  as_tibble() %&gt;%\n  ggplot(aes(x = \"koala\", y = value)) +\n  geom_violin(fill = \"pink\") + geom_jitter(size = 0.2, alpha = 0.5) +\n  labs(y = \"nCount_RNA\") +\n  theme_bw()\n\n\n\n\n\n\n\n\nThese are both skewed distributions, but RNA counts is more extremely skewed than features. Let’s see how they scatter:\n\nfeatures_by_counts_scatter_table &lt;- bind_rows(koala$nCount_RNA, koala$nFeature_RNA) %&gt;%\n  t() %&gt;%\n  as_tibble() %&gt;%\n  dplyr::rename(\"nCount_RNA\" = 1, \"nFeature_RNA\" = 2)\n\nfeatures_by_counts_scatter &lt;- FeatureScatter(\n  koala, feature1 = \"nCount_RNA\", feature2 = \"nFeature_RNA\") #+\n  # stat_smooth(formula = \"y ~ x*log(x)\", method = glm) +\n  # stat_smooth(formula = \"y ~ log(x)\", method = glm, color = \"yellow\") +\n  # geom_smooth(formula = y ~ (Vm * x)/(K + x),\n  #             #data = features_by_counts_scatter_table,\n  #             method = \"nls\", color = \"green\", se = FALSE,\n  #             method.args = list(start = c(K = 10000, Vm = 6000)))\n\nfeatures_by_counts_scatter\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfeatures_by_counts_scatter + scale_x_log10() + scale_y_log10()\n\n\n\n\n\n\n\n\nThe feature count appears to increase approximately logarithmicly with RNA count. The Pearson correlation is 0.95, but the non linearity indicates the relationship may be stronger than the correlation coefficient indicates. This observation is consistent with an RNA-seq experiment wherein there is a fixed number of potentially expressed RNAs and the number of detected transcripts begins to saturate the and approach the maximum number able to be detected.\nThe log-log transformed axis plot shows: - There are only a few cells/droplets with fewer than 300 RNA counts, which is great for an scRNA-seq experiment. - There is still some curve to the line, meaning the relationship is more trancendental (not simply a power-law, like polynomial)."
  },
  {
    "objectID": "posts/2024_01_22-scRNA-seq.html#filter-on-feature-count",
    "href": "posts/2024_01_22-scRNA-seq.html#filter-on-feature-count",
    "title": "scRNA-seq Analysis: Messy Mouse Brain",
    "section": "Filter on feature count",
    "text": "Filter on feature count\nI am going to keep droplets (“cells”) with 1100 features or fewer\n\nkoala_filtered &lt;- subset(koala, nFeature_RNA &lt;= 1100)\n\nLet’s quickly confirm that the filtering changed the number of features throughout the Seurat object by using Seurat size commands to query the number of observations in the pre-filter and post-filter Seurat objects:\n\nlength(koala$orig.ident); length(koala_filtered$orig.ident)\n\n[1] 4449\n\n\n[1] 1410\n\n\nThe feature count decreased from 4449 to 1410 upon filtering.\n(The orig.ident matrix within the Seurat object stores the cell metadata, and counting its number of entries can tell us number of unique observations.)\n\nhead(koala_filtered$orig.ident)\n\nATGGCTGTCGATTTGA-1 GGTACAAAGTTCCTGC-1 ATTCAACCATAGGCGA-1 TCTCCTCGTCAATACG-1 \n             koala              koala              koala              koala \nTTTCTCACAGCACCAT-1 TTCCTTGAGGATCACT-1 \n             koala              koala \nLevels: koala\n\n\n\nFeatures\n\nVlnPlot(koala_filtered, features = c(\"nCount_RNA\", \"nFeature_RNA\"), pt.size = .1)\n\nWarning: Default search for \"data\" layer in \"RNA\" assay yielded no results;\nutilizing \"counts\" layer instead.\n\n\n\n\n\n\n\n\n\nPost filtering, the RNA count plot looks more typical, with one major “peak” and a long tail. The features plot looks fairly evenly distributed because of the filtering cut off so close to the “peak” of the distribution, but I hypothesize it was necessary due to the hypothesized doublet peak right at 2000 features per droplet right near by.\n\nfeatures_by_counts_scatter_table &lt;- bind_rows(koala_filtered$nCount_RNA,\n                                              koala_filtered$nFeature_RNA) %&gt;%\n  t() %&gt;%\n  as_tibble() %&gt;%\n  dplyr::rename(\"nCount_RNA\" = 1, \"nFeature_RNA\" = 2)\n\nfeatures_by_counts_scatter &lt;- FeatureScatter(\n  koala_filtered, feature1 = \"nCount_RNA\", feature2 = \"nFeature_RNA\") #+\n  # stat_smooth(formula = \"y ~ x*log(x)\", method = glm) +\n  # stat_smooth(formula = \"y ~ log(x)\", method = glm, color = \"yellow\") +\n  # geom_smooth(formula = y ~ (Vm * x)/(K + x),\n  #             #data = features_by_counts_scatter_table,\n  #             method = \"nls\", color = \"green\", se = FALSE,\n  #             method.args = list(start = c(K = 10000, Vm = 6000)))\n\nfeatures_by_counts_scatter"
  },
  {
    "objectID": "posts/2024_01_22-scRNA-seq.html#normalization",
    "href": "posts/2024_01_22-scRNA-seq.html#normalization",
    "title": "scRNA-seq Analysis: Messy Mouse Brain",
    "section": "Normalization",
    "text": "Normalization\n\nkoala_norm &lt;- NormalizeData(koala_filtered)\n\nNormalizing layer: counts\n\n\nThe above is a log-normalization. This procedure divides each feature’s abundance by the sample mean for that cell and takes the natural log (log() in R).\n\nkoala_features &lt;- FindVariableFeatures(koala_norm, selection.method = \"vst\")\n\nFinding variable features for layer counts\n\n\nThe vst method is the default feature selection method, but I’m just making it explicit, because a later (cluster identification) package refers to this fact. The variance stabilizing transformation makes the variances (standard deviations) more uniform and stops them from being related to the mean value within a group, which facilitates downstream linear regression-based techniques (e.g. PCA)."
  },
  {
    "objectID": "posts/2024_01_22-scRNA-seq.html#feature-selection-by-pca",
    "href": "posts/2024_01_22-scRNA-seq.html#feature-selection-by-pca",
    "title": "scRNA-seq Analysis: Messy Mouse Brain",
    "section": "Feature Selection by PCA",
    "text": "Feature Selection by PCA\n\ntop_koala_features &lt;- head(VariableFeatures(koala_features), 10)\n\ntop_koala_features_plot &lt;- VariableFeaturePlot(koala_features) %&gt;%\n  LabelPoints(points = top_koala_features, repel = TRUE)\n\ntop_koala_features_plot\n\nWarning: Transformation introduced infinite values in continuous x-axis\n\n\n\n\n\n\n\n\n\n\ntop_koala_features\n\n [1] \"Nrxn1\"  \"Ank3\"   \"Nkain2\" \"Sntg1\"  \"Glul\"   \"Rspo3\"  \"Reln\"   \"Aoah\"  \n [9] \"Slc1a2\" \"Spp1\"  \n\n\nThe most highly expressed gene is MEG3 (maternally expressed 3), a maternally expressed, imprinted long non-coding RNA (lncRNA). This likely means the tissue analyzed here is an egg cell, recently fertilized egg, or young embryo."
  },
  {
    "objectID": "posts/2024_01_22-scRNA-seq.html#scale",
    "href": "posts/2024_01_22-scRNA-seq.html#scale",
    "title": "scRNA-seq Analysis: Messy Mouse Brain",
    "section": "Scale",
    "text": "Scale\nPre-process to center at 0 and make sd = 1 prior to PCA.\n\ngene_names &lt;- rownames(koala_features)\nkoala_features &lt;- ScaleData(koala_features, features = gene_names)\n\nCentering and scaling data matrix"
  },
  {
    "objectID": "posts/2024_01_22-scRNA-seq.html#run-pca",
    "href": "posts/2024_01_22-scRNA-seq.html#run-pca",
    "title": "scRNA-seq Analysis: Messy Mouse Brain",
    "section": "Run PCA",
    "text": "Run PCA\nLinear dimensionality reduction\nI’m going to go with all features and use the Elbow plot to determine which features are still important after this step.\n\nkoala_pca &lt;- RunPCA(koala_features, features = VariableFeatures(koala_features) )\n\n\nVisualize PCA Results\n\nprint(koala_pca[[\"pca\"]], dims = 1:4)\n\nPC_ 1 \nPositive:  Ptprb, Lrmda, Prkg1, Plekhg1, Cemip2, Plpp1, Rasal2, Meis2, Plxnc1, Adam23 \n       Sptbn1, Stox2, Ets1, Mrc1, F8, Fyn, Syne1, Hecw2, Slc9a9, Fbxl7 \nNegative:  Pck1, Ppara, Ttc39c, Gm29966, G6pc, Abcc2, Mlxipl, Errfi1, Egfr, Gfra1 \n       Ahsg, Neat1, Trf, Slc27a2, Fam214a, Slc38a3, Slc7a2, Dpyd, Hc, Alas1 \nPC_ 2 \nPositive:  Nrxn1, Reln, Rbms3, Dcn, Ntm, Bmp5, Lhfp, Abcc9, Arhgap24, Nkain2 \n       Pde3a, Tln2, Ngf, Sox5, Pde1a, Robo2, Hand2os1, Hgf, Ccbe1, Agtr1a \nNegative:  Ptprb, Rasal2, Cemip2, Plpp1, Adam23, Stox2, Fyn, Mrc1, Kdr, F8 \n       Prickle1, Dab2, Adgrf5, Cyyr1, Plcb4, Hecw2, Maf, Arhgap31, Nrp1, Cd55 \nPC_ 3 \nPositive:  Slc8a1, Elmo1, Ptprc, Runx1, Cd5l, Clec4f, Dock2, Adgb, Entpd1, Dock10 \n       Aoah, Gm26740, Bank1, Adgre1, Arhgap15, Ikzf1, E230029C05Rik, Epsti1, Adgre4, Cd163 \nNegative:  Ptprb, Plekhg1, Cemip2, Meis2, Tshz2, Prkg1, Pard3b, Plpp1, Adgrl2, Plxnc1 \n       Stox2, Rasal2, F8, Prickle1, Kdr, Hecw2, Fbxl7, Sptbn1, Adam23, Syne1 \nPC_ 4 \nPositive:  Gm2682, Skap1, Themis, Cd226, Satb1, Kcnq5, Ms4a4b, Grap2, Dock2, Arhgap15 \n       Bcl11b, Ripor2, Inpp4b, Ipcef1, Il7r, Atp8a2, Lef1, Camk4, Cyfip2, Ikzf3 \nNegative:  Clec4f, Slc8a1, Frmd4b, Aoah, Slc40a1, Cd5l, Tcf7l2, Kcnk13, Tbxas1, Adgb \n       Myo9a, Hdac9, Entpd1, Pde7b, Cd86, Adgre1, Lgmn, Ksr2, Zeb2, E230029C05Rik \n\n\nQuick print out all of the positive and negative features in the top four fitted principle components.\n\n(dim_reduc_plot &lt;- VizDimLoadings(koala_pca, dims = 1:4, reduction = \"pca\") &\n  theme(axis.text.y = element_text(size = 5)))\n\n\n\n\n\n\n\n\n\n(pc_1_2_scatterplot &lt;- DimPlot(koala_pca, reduction = \"pca\"))\n\n\n\n\n\n\n\n\n\nDimHeatmap(koala_pca, dims = 1:15)"
  },
  {
    "objectID": "posts/2024_01_22-scRNA-seq.html#determine-the-dimensionality-of-the-dataset",
    "href": "posts/2024_01_22-scRNA-seq.html#determine-the-dimensionality-of-the-dataset",
    "title": "scRNA-seq Analysis: Messy Mouse Brain",
    "section": "Determine the dimensionality of the dataset",
    "text": "Determine the dimensionality of the dataset\nUsing jackstraw\n\nkoala_js &lt;- JackStraw(koala_pca, num.replicate = 100)\n\n\nkoala_js_score &lt;- ScoreJackStraw(koala_js, dims = 1:20)\n\n\nJackStrawPlot(koala_js_score, dims = 1:20)\n\nWarning: Removed 28212 rows containing missing values (`geom_point()`).\n\n\n\n\n\n\n\n\n\n\nElbowPlot(koala_js_score)\n\n\n\n\n\n\n\n\nDeciding that the elbow occurs at 9 principle components, so should retain dimensions 1 to 10. However, due to the strange behavior of this dataset, I am going to run FindClusters() on all 20 principle components and see what happens. It may confirm my findings without intervention."
  },
  {
    "objectID": "posts/2024_01_22-scRNA-seq.html#identify-cluster-biomarkers",
    "href": "posts/2024_01_22-scRNA-seq.html#identify-cluster-biomarkers",
    "title": "scRNA-seq Analysis: Messy Mouse Brain",
    "section": "Identify cluster biomarkers",
    "text": "Identify cluster biomarkers\n\nCluster 3\n\nkoala_umap_cluster_4 &lt;- FindMarkers(koala_umap, ident.1 = 4, min.pct = 0.25)\nhead(koala_umap_cluster_4, n = 10)\n\n               p_val avg_log2FC pct.1 pct.2    p_val_adj\nmt-Co2  7.527182e-31  1.2245951 0.985 0.670 1.311687e-26\nMalat1  1.723282e-29 -0.7632667 1.000 0.999 3.002992e-25\nmt-Co1  5.977587e-27  1.1122765 0.971 0.790 1.041654e-22\nGm42418 3.151082e-26  0.5404391 1.000 1.000 5.491075e-22\nCamk1d  3.573460e-26  0.8369697 0.993 0.950 6.227112e-22\nCmss1   5.424007e-26  0.8626727 0.993 0.932 9.451874e-22\nApoe    6.872890e-26  1.2087947 0.919 0.635 1.197670e-21\nmt-Nd2  8.808615e-25  1.2449740 0.897 0.524 1.534989e-20\nStab2   1.176373e-24  0.8467994 0.875 0.327 2.049947e-20\nmt-Atp6 1.815371e-24  1.1416188 0.949 0.667 3.163465e-20\n\n# find all markers distinguishing cluster 5 from clusters 0 through 3\nkoala_umap_cluster_4_diff &lt;- FindMarkers(koala_umap, ident.1 = 4, ident.2 = 0:3, min.pct = 0.25)\nhead(koala_umap_cluster_4_diff, n = 10)\n\n               p_val avg_log2FC pct.1 pct.2    p_val_adj\nmt-Co2  9.312486e-27  1.1041138 0.985 0.678 1.622794e-22\nMalat1  2.704755e-26 -0.7462688 1.000 0.999 4.713307e-22\nGm42418 3.811073e-26  0.5477534 1.000 1.000 6.641176e-22\nCamk1d  1.292259e-25  0.8488007 0.993 0.945 2.251891e-21\nApoe    9.025020e-25  1.1895949 0.919 0.622 1.572700e-20\nCmss1   2.670717e-24  0.8297866 0.993 0.925 4.653991e-20\nmt-Co1  7.586908e-23  0.9905739 0.971 0.803 1.322095e-18\nLars2   1.597419e-22  0.8533974 1.000 0.832 2.783662e-18\nmt-Atp6 2.901863e-20  0.9995626 0.949 0.680 5.056787e-16\nmt-Nd2  3.537213e-20  1.0947916 0.897 0.557 6.163948e-16\n\n\n\n\nAll marker analysis\n\n# find markers for every cluster compared to all other cells, keep only the positive ones\nkoala_umap_markers &lt;- FindAllMarkers(koala_umap, only.pos = TRUE, min.pct = 0.25, logfc.threshold = 0.25)\n\nCalculating cluster 0\n\n\nCalculating cluster 1\n\n\nCalculating cluster 2\n\n\nCalculating cluster 3\n\n\nCalculating cluster 4\n\n\nCalculating cluster 5\n\n\nCalculating cluster 6\n\n\nCalculating cluster 7\n\n\nCalculating cluster 8\n\nkoala_umap_markers_10_per_cluster &lt;- koala_umap_markers %&gt;%\n  group_by(cluster) %&gt;%\n  slice_max(n = 10, order_by = avg_log2FC)\nkoala_umap_markers_10_per_cluster\n\n# A tibble: 90 × 7\n# Groups:   cluster [9]\n       p_val avg_log2FC pct.1 pct.2 p_val_adj cluster gene    \n       &lt;dbl&gt;      &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;     &lt;dbl&gt; &lt;fct&gt;   &lt;chr&gt;   \n 1 6.94e- 80       3.90 0.488 0.066 1.21e- 75 0       Bmp6    \n 2 2.11e- 46       3.86 0.281 0.03  3.68e- 42 0       Col13a1 \n 3 8.78e- 66       3.67 0.406 0.052 1.53e- 61 0       Galnt18 \n 4 1.10e-126       3.61 0.73  0.113 1.93e-122 0       Adam23  \n 5 2.37e- 48       3.60 0.313 0.04  4.13e- 44 0       Dnase1l3\n 6 5.07e- 46       3.56 0.294 0.035 8.83e- 42 0       Srgap1  \n 7 6.73e- 42       3.52 0.283 0.039 1.17e- 37 0       Clec4g  \n 8 6.99e-172       3.49 0.929 0.186 1.22e-167 0       Stab2   \n 9 4.34e- 77       3.40 0.488 0.069 7.57e- 73 0       Rasgrp3 \n10 4.35e- 46       3.34 0.322 0.048 7.59e- 42 0       Gm15675 \n# ℹ 80 more rows\n\n\n\nkoala_umap_markers_10_per_nest &lt;- koala_umap_markers_10_per_cluster %&gt;%\n  dplyr::select(gene) %&gt;%\n  nest() %&gt;%\n  mutate(data = as.list(map(data, ~.x[[1]] )))\n\nAdding missing grouping variables: `cluster`\n\n\n\n\nSet up function for all\n\ngo_query_fun &lt;- function(gene_name_vector){\n  go_result &lt;- gost(query = gene_name_vector,\n                    organism = \"mmusculus\", ordered_query = FALSE, \n                    multi_query = FALSE, significant = TRUE, exclude_iea = FALSE, \n                    measure_underrepresentation = FALSE, evcodes = FALSE, \n                    user_threshold = 0.05, correction_method = \"fdr\", \n                    domain_scope = \"annotated\", custom_bg = NULL, \n                    numeric_ns = \"\", sources = \"GO:MF\", as_short_link = FALSE)\n  \n  return(go_result)\n}\n\n\n\nRun the functon in df env\n\nkoala_umap_markers_10_per_nest_go_ano &lt;- koala_umap_markers_10_per_nest %&gt;% \n  mutate(\"go_table\" = map(data, go_query_fun))\n\nNo results to show\nPlease make sure that the organism is correct or set significant = FALSE\nNo results to show\nPlease make sure that the organism is correct or set significant = FALSE\n\n\n\nkoala_umap_markers_10_go_df &lt;- koala_umap_markers_10_per_nest_go_ano %&gt;%\n  unnest(go_table) %&gt;%\n  filter(row_number() %% 2 != 0) %&gt;%\n  unnest(go_table) %&gt;%\n  relocate(term_name, .after = cluster) %&gt;%\n  arrange(cluster, p_value) %&gt;%\n  select(!c(\"data\", \"query\", \"significant\"))\nhead(koala_umap_markers_10_go_df)\n\n# A tibble: 6 × 13\n# Groups:   cluster [1]\n  cluster term_name     p_value term_size query_size intersection_size precision\n  &lt;fct&gt;   &lt;chr&gt;           &lt;dbl&gt;     &lt;int&gt;      &lt;int&gt;             &lt;int&gt;     &lt;dbl&gt;\n1 0       virus corece…  0.0317         1         10                 1       0.1\n2 0       polysacchari…  0.0453        26         10                 1       0.1\n3 0       protein-lipi…  0.0453        30         10                 1       0.1\n4 0       lipoprotein …  0.0453        30         10                 1       0.1\n5 0       BMP receptor…  0.0453        14         10                 1       0.1\n6 0       transmembran…  0.0453        21         10                 1       0.1\n# ℹ 6 more variables: recall &lt;dbl&gt;, term_id &lt;chr&gt;, source &lt;chr&gt;,\n#   effective_domain_size &lt;int&gt;, source_order &lt;int&gt;, parents &lt;list&gt;\n\n\n\n\nAll marker analysis\nwithout requiring uniqueness\nLet’s run the analysis without requiring Variable genes be uniquely upregulated or downregulated in each cluster.\n\n# find markers for every cluster, keep only the positive ones\nkoala_umap_markers &lt;- FindAllMarkers(koala_umap, only.pos = FALSE, min.pct = 0.25, logfc.threshold = 0.25)\n\nCalculating cluster 0\n\n\nCalculating cluster 1\n\n\nCalculating cluster 2\n\n\nCalculating cluster 3\n\n\nCalculating cluster 4\n\n\nCalculating cluster 5\n\n\nCalculating cluster 6\n\n\nCalculating cluster 7\n\n\nCalculating cluster 8\n\nkoala_umap_markers_10_per_cluster &lt;- koala_umap_markers %&gt;%\n  group_by(cluster) %&gt;%\n  slice_max(n = 10, order_by = avg_log2FC)\nkoala_umap_markers_10_per_cluster\n\n# A tibble: 90 × 7\n# Groups:   cluster [9]\n       p_val avg_log2FC pct.1 pct.2 p_val_adj cluster gene    \n       &lt;dbl&gt;      &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;     &lt;dbl&gt; &lt;fct&gt;   &lt;chr&gt;   \n 1 6.94e- 80       3.90 0.488 0.066 1.21e- 75 0       Bmp6    \n 2 2.11e- 46       3.86 0.281 0.03  3.68e- 42 0       Col13a1 \n 3 8.78e- 66       3.67 0.406 0.052 1.53e- 61 0       Galnt18 \n 4 1.10e-126       3.61 0.73  0.113 1.93e-122 0       Adam23  \n 5 2.37e- 48       3.60 0.313 0.04  4.13e- 44 0       Dnase1l3\n 6 5.07e- 46       3.56 0.294 0.035 8.83e- 42 0       Srgap1  \n 7 6.73e- 42       3.52 0.283 0.039 1.17e- 37 0       Clec4g  \n 8 6.99e-172       3.49 0.929 0.186 1.22e-167 0       Stab2   \n 9 4.34e- 77       3.40 0.488 0.069 7.57e- 73 0       Rasgrp3 \n10 4.35e- 46       3.34 0.322 0.048 7.59e- 42 0       Gm15675 \n# ℹ 80 more rows\n\n\n\nkoala_umap_markers_10_per_nest &lt;- koala_umap_markers_10_per_cluster %&gt;%\n  dplyr::select(gene) %&gt;%\n  nest() %&gt;%\n  mutate(data = as.list(map(data, ~.x[[1]] )))\n\nAdding missing grouping variables: `cluster`\n\n\n\n\nRun the functon in df env\n\nkoala_umap_markers_10_per_nest_go_ano &lt;- koala_umap_markers_10_per_nest %&gt;% \n  mutate(\"go_table\" = map(data, go_query_fun))\n\nNo results to show\nPlease make sure that the organism is correct or set significant = FALSE\nNo results to show\nPlease make sure that the organism is correct or set significant = FALSE\n\n\n\nkoala_umap_2way_markers_10_go_df &lt;- koala_umap_markers_10_per_nest_go_ano %&gt;%\n  unnest(go_table) %&gt;%\n  filter(row_number() %% 2 != 0) %&gt;%\n  unnest(go_table) %&gt;%\n  relocate(term_name, .after = cluster) %&gt;%\n  arrange(cluster, desc(p_value))\nhead(koala_umap_markers_10_go_df)\n\n# A tibble: 6 × 13\n# Groups:   cluster [1]\n  cluster term_name     p_value term_size query_size intersection_size precision\n  &lt;fct&gt;   &lt;chr&gt;           &lt;dbl&gt;     &lt;int&gt;      &lt;int&gt;             &lt;int&gt;     &lt;dbl&gt;\n1 0       virus corece…  0.0317         1         10                 1       0.1\n2 0       polysacchari…  0.0453        26         10                 1       0.1\n3 0       protein-lipi…  0.0453        30         10                 1       0.1\n4 0       lipoprotein …  0.0453        30         10                 1       0.1\n5 0       BMP receptor…  0.0453        14         10                 1       0.1\n6 0       transmembran…  0.0453        21         10                 1       0.1\n# ℹ 6 more variables: recall &lt;dbl&gt;, term_id &lt;chr&gt;, source &lt;chr&gt;,\n#   effective_domain_size &lt;int&gt;, source_order &lt;int&gt;, parents &lt;list&gt;\n\n\n\nwrite_csv(koala_umap_2way_markers_10_go_df, \"koala_umap_2way_markers_10_go_bdf.csv\")\n\n\nkoala_umap_cluster_7 &lt;- FindMarkers(koala_umap, ident.1 = 7, min.pct = 0.25)\nhead(koala_umap_cluster_7, n = 10)[0]\n\ndata frame with 0 columns and 10 rows\n\n\n\n\nCluster 7\n\nkoala_umap_cluster_unique_7 &lt;- FindMarkers(koala_umap, ident.1 = 7, ident.2 = (1:8)[!(1:8) == 7], min.pct = 0.5)\nhead(as_tibble(koala_umap_cluster_unique_7, rownames = \"gene\"), n = 20)\n\n# A tibble: 20 × 6\n   gene        p_val avg_log2FC pct.1 pct.2 p_val_adj\n   &lt;chr&gt;       &lt;dbl&gt;      &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;     &lt;dbl&gt;\n 1 Mecom    2.22e-75       7.23 0.5   0.011  3.86e-71\n 2 Jam2     5.96e-62       4.89 0.587 0.029  1.04e-57\n 3 Heg1     4.21e-42       4.27 0.652 0.071  7.33e-38\n 4 Cyyr1    3.32e-41       4.26 0.674 0.08   5.78e-37\n 5 Pecam1   1.37e-38       4.35 0.587 0.061  2.39e-34\n 6 Ptprb    1.13e-35       2.97 0.891 0.181  1.96e-31\n 7 Plcb4    5.14e-32       3.71 0.543 0.063  8.96e-28\n 8 Meis2    9.37e-32       3.24 0.717 0.122  1.63e-27\n 9 Cdh13    1.61e-30       4.63 0.5   0.058  2.81e-26\n10 Prex2    7.70e-28       3.09 0.761 0.176  1.34e-23\n11 Cemip2   2.88e-27       3.52 0.674 0.126  5.02e-23\n12 Crim1    2.23e-26       3.40 0.652 0.129  3.88e-22\n13 Adgrf5   3.18e-25       3.29 0.522 0.076  5.54e-21\n14 Calcrl   9.21e-21       2.85 0.609 0.132  1.61e-16\n15 Arhgap31 8.63e-20       3.32 0.5   0.092  1.50e-15\n16 Il6st    3.91e-18       2.71 0.652 0.183  6.82e-14\n17 Eng      6.85e-18       2.88 0.5   0.099  1.19e-13\n18 Ptprm    1.08e-15       2.31 0.587 0.152  1.88e-11\n19 Plekhg1  2.40e-15       2.48 0.5   0.113  4.18e-11\n20 Arl15    6.65e-14       2.69 0.717 0.325  1.16e- 9\n\n\n## postsynaptic density protein 95 clustering 6 2 .00 &gt; 100 + 5.20E-06 8.18E-03 ## postsynaptic membrane organization 31 2 .01 &gt; 100 + 9.74E-05 3.00E-02 ## postsynaptic density organization 28 2 .01 &gt; 100 + 8.03E-05 2.81E-02 ## postsynaptic specialization organization 34 2 .02 &gt; 100 + 1.16E-04 3.45E-02 ## NMDA glutamate receptor clustering 6 2 .00 &gt; 100 + 5.20E-06 7.43E-03 ## neurotransmitter-gated ion channel clustering 15 2 .01 &gt; 100 + 2.52E-05 1.80E-02 ## positive regulation of synapse maturation 10 2 .00 &gt; 100 + 1.22E-05 1.38E-02 ## regulation of synapse maturation 23 2 .01 &gt; 100 + 5.54E-05 2.64E-02\nCluster 7 looks like it may be"
  },
  {
    "objectID": "posts/2024_01_22-scRNA-seq.html#using-garnett",
    "href": "posts/2024_01_22-scRNA-seq.html#using-garnett",
    "title": "scRNA-seq Analysis: Messy Mouse Brain",
    "section": "Using garnett",
    "text": "Using garnett\nGarnett is a semi-supervised method of cell-type assignment for single cell data that is compatible with Seurat objects. It consists of four components. First, Garnett defines a markup language for specifying cell types using the genes that they specifically express. The markup language is hierarchical in that a cell type can have subtypes (for example, CD4+ and CD8+ are subsets of T cells). Second, Garnett includes a parser that processes the markup file together with a single-cell dataset, identifying representative cells bearing markers that unambiguously identify them as one of the cell types defined in the file. Third, Garnett trains a classifier that recognizes additional cells as belonging to each cell type based on their similarity to representative cells, similar to an approach that our groups recently developed for annotating a single-cell mouse atlas of chromatin accessibility. Garnett does not require that cells be organized into clusters, but it can optionally extend classifications to additional cells using either its own internal clustering routines or those of other tools. Finally, Garnett provides a method for applying a classifier trained on one dataset to rapidly annotate additional datasets.\n\nClassifier\nGarnett’s directory of already-available classifiers indicates that one is available for Mouse Brain and spinal cord tissues, which I hypothesize is the primary content of this sample I am analyzed based on the gene ontology terms displayed and remarked upon in the previous section. The data are from Zeisel’s and Linnarrson’s et al. “Molecular Architecture of the Mouse Nervous System” and were trained and deposited by Pliner & Trapnell et al..\n\n\n# download.file(\"https://cole-trapnell-lab.github.io/garnett/classifiers/mmBrain_20191017.RDS\",\n#               \"mmBrain_20191017.RDS\")\ndownload.file(\"https://cole-trapnell-lab.github.io/garnett/marker_files/mmBrain_markers.txt\",\n              \"mmBrain_markers.txt\")\n\n\n\nPrepare scRNA-seq data for garnett\n\n# use Seurat to convert Seurat dimensionally reduced object to a CellDataSet object\nkoala_umap_cds &lt;- as.CellDataSet(koala_umap)\n\n# generate size factors for normalization later\nkoala_umap_cds &lt;- estimateSizeFactors(koala_umap_cds)\n\n\n\nPrepare trained classified from heirarchical marker gene file\n\nlibrary(org.Mm.eg.db)\n\nLoading required package: AnnotationDbi\n\n\nLoading required package: IRanges\n\n\nLoading required package: S4Vectors\n\n\n\nAttaching package: 'S4Vectors'\n\n\nThe following objects are masked from 'package:Matrix':\n\n    expand, unname\n\n\nThe following object is masked from 'package:tidyr':\n\n    expand\n\n\nThe following objects are masked from 'package:dplyr':\n\n    first, rename\n\n\nThe following object is masked from 'package:utils':\n\n    findMatches\n\n\nThe following objects are masked from 'package:base':\n\n    expand.grid, I, unname\n\n\n\nAttaching package: 'IRanges'\n\n\nThe following object is masked from 'package:sp':\n\n    %over%\n\n\nThe following object is masked from 'package:purrr':\n\n    reduce\n\n\nThe following objects are masked from 'package:dplyr':\n\n    collapse, desc, slice\n\n\n\nAttaching package: 'AnnotationDbi'\n\n\nThe following object is masked from 'package:dplyr':\n\n    select\n\n\n\n\nmarker_file_path &lt;- \"mmBrain_markers.txt\"\n\nmarker_check &lt;- check_markers(koala_umap_cds, marker_file_path,\n                              db = org.Mm.eg.db,\n                              cds_gene_id_type = \"SYMBOL\",\n                              marker_file_gene_id_type = \"SYMBOL\")\n\nThere are 144 cell type definitions\n\n\n\nmarker_cell_types_analysis &lt;- marker_check %&gt;%\n  mutate(\"n_type\" = n(), .by = c(\"cell_type\", \"parent\")) %&gt;%\n  mutate(\"n_cds\" = n(), .by = c(\"cell_type\", \"parent\", \"in_cds\")) %&gt;%\n  arrange(desc(n_type)) %&gt;%\n  dplyr::select(c(\"cell_type\", \"parent\", \"in_cds\", \"n_type\", \"n_cds\")) %&gt;%\n  distinct()\nmarker_cell_types_analysis\n\n                                                             cell_type\n1                                                              Neurons\n2                                                              Neurons\n3                    Cholinergic monoaminergic and peptidergic neurons\n4                    Cholinergic monoaminergic and peptidergic neurons\n5                                                             CNS glia\n6                                                             CNS glia\n7                                        Di- and mesencephalon neurons\n8                                        Di- and mesencephalon neurons\n9                                           Telencephalon interneurons\n10                                          Telencephalon interneurons\n11                               Cholinergic and monoaminergic neurons\n12                               Cholinergic and monoaminergic neurons\n13                                    Telencephalon projecting neurons\n14                                    Telencephalon projecting neurons\n15                                                Astroependymal cells\n16                                                Astroependymal cells\n17                                          Peripheral sensory neurons\n18                                          Peripheral sensory neurons\n19                               Telencephalon inhibitory interneurons\n20                               Telencephalon inhibitory interneurons\n21                            Di- and mesencephalon excitatory neurons\n22                            Di- and mesencephalon excitatory neurons\n23                                              Neural crest-like glia\n24                                              Neural crest-like glia\n25                                                 Peptidergic neurons\n26                                                 Peptidergic neurons\n27                                                    Oligodendrocytes\n28                                                    Oligodendrocytes\n29                                                      Vascular cells\n30                                                      Vascular cells\n31                         Telencephalon projecting excitatory neurons\n32                         Telencephalon projecting excitatory neurons\n33                            Di- and mesencephalon inhibitory neurons\n34                            Di- and mesencephalon inhibitory neurons\n35                                                          Astrocytes\n36                                                          Astrocytes\n37                          Peripheral sensory non-peptidergic neurons\n38                          Peripheral sensory non-peptidergic neurons\n39                                                     Enteric neurons\n40                                                     Enteric neurons\n41                                  Excitatory neurons cerebral cortex\n42                                  Excitatory neurons cerebral cortex\n43                                                 Spinal cord neurons\n44                                                 Spinal cord neurons\n45                         Telencephalon projecting inhibitory neurons\n46                         Telencephalon projecting inhibitory neurons\n47                                                        Enteric glia\n48                                                        Enteric glia\n49                                                     Immature neural\n50                                                     Immature neural\n51                              Peripheral sensory peptidergic neurons\n52                              Peripheral sensory peptidergic neurons\n53                                        Olfactory inhibitory neurons\n54                                        Olfactory inhibitory neurons\n55                                      Inhibitory neurons midbrain di\n56                                      Inhibitory neurons midbrain di\n57                                                Serotonergic neurons\n58                                                Serotonergic neurons\n59                                                        Immune cells\n60                                                        Immune cells\n61                                                 Sympathetic neurons\n62                                                 Sympathetic neurons\n63                                                   Hindbrain neurons\n64                                                   Hindbrain neurons\n65                                         Cholinergic enteric neurons\n66                                         Cholinergic enteric neurons\n67                                                  Cerebellum neurons\n68                                                  Cerebellum neurons\n69                                                           Microglia\n70                                                           Microglia\n71                                         Excitatory neurons midbrain\n72                                         Excitatory neurons midbrain\n73                                             Mature oligodendrocytes\n74                                             Mature oligodendrocytes\n75                                      Spinal cord excitatory neurons\n76                                      Spinal cord excitatory neurons\n77                                                     Ependymal cells\n78                                                     Ependymal cells\n79                                           Glutamatergic neuroblasts\n80                                           Glutamatergic neuroblasts\n81                                   Sympathetic noradrenergic neurons\n82                                   Sympathetic noradrenergic neurons\n83                                                           Pericytes\n84                                                           Pericytes\n85                            Peripheral sensory neurofilament neurons\n86                            Peripheral sensory neurofilament neurons\n87                                       Vascular leptomeningeal cells\n88                                       Vascular leptomeningeal cells\n89                                    Peptidergic neurons hypothalamus\n90                                    Peptidergic neurons hypothalamus\n91                                       Non-glutamatergic neuroblasts\n92                                       Non-glutamatergic neuroblasts\n93                                      Spinal cord inhibitory neurons\n94                                      Spinal cord inhibitory neurons\n95                     R-LM border Cck interneurons cortex/hippocampus\n96                                   Inhibitory neurons olfactory bulb\n97                                   Inhibitory neurons olfactory bulb\n98                                      Excitatory neurons spinal cord\n99                                    D1 medium spiny neurons striatum\n100                                   D1 medium spiny neurons striatum\n101                                    Myelin forming oligodendrocytes\n102                                    Myelin forming oligodendrocytes\n103                               Noradrenergic neurons of the medulla\n104                               Noradrenergic neurons of the medulla\n105                                          Nitrergic enteric neurons\n106                                          Nitrergic enteric neurons\n107                                  Excitatory neurons hindbrain hind\n108                                  Excitatory neurons hindbrain hind\n109                                              Neuroblasts olfactory\n110                                       Non-telencephalon astrocytes\n111                                       Non-telencephalon astrocytes\n112                                Inhibitory neurons spinal cord spin\n113                                                     Satellite glia\n114                                                     Satellite glia\n115                                      Newly formed oligodendrocytes\n116                                      Newly formed oligodendrocytes\n117                                      Dentate gyrus granule neurons\n118                                      Dentate gyrus granule neurons\n119 Sleep-active long-range projection interneurons cortex/hippocampus\n120 Sleep-active long-range projection interneurons cortex/hippocampus\n121                                    Inhibitory neurons hindbrain di\n122                                    Inhibitory neurons hindbrain di\n123                                       Vascular smooth muscle cells\n124                                       Vascular smooth muscle cells\n125                                    Excitatory neurons hypothalamus\n126                                                     Purkinje cells\n127                                                     Purkinje cells\n128                           Afferent nuclei of cranial nerves VI-XII\n129                           Afferent nuclei of cranial nerves VI-XII\n130                                           Perivascular macrophages\n131                                           Perivascular macrophages\n132                           Cholinergic neurons midbrain red nucleus\n133                                   Inhibitory neurons telencephalon\n134                     Non-border Cck interneurons cortex/hippocampus\n135                                  Central canal neurons spinal cord\n136                                           Choroid epithelial cells\n137                                    Enteric mesothelial fibroblasts\n138                           Dopaminergic neurons periaqueductal grey\n139                External plexiform layer interneuron olfactory bulb\n140                              Adrenergic cell groups of the medulla\n141                              Adrenergic cell groups of the medulla\n142                                        Excitatory neurons thalamus\n143                                        Excitatory neurons thalamus\n144              Interneuron-selective interneurons cortex/hippocampus\n145              Interneuron-selective interneurons cortex/hippocampus\n146                              Subcommissural organ hypendymal cells\n147                                           Telencephalon astrocytes\n148                                   D2 medium spiny neurons striatum\n149                                   D2 medium spiny neurons striatum\n150                                  Excitatory neurons hindbrain spin\n151                                      Granule neurons dentate gyrus\n152                                      Granule neurons dentate gyrus\n153                                    Sympathetic cholinergic neurons\n154                                    Sympathetic cholinergic neurons\n155                                   Committed oligodendrocytes cells\n156                                   Committed oligodendrocytes cells\n157                                        Olfactory ensheathing cells\n158                                        Olfactory ensheathing cells\n159                                       Excitatory neurons hindbrain\n160                                         Vascular endothelial cells\n161                               Inner horizontal cell olfactory bulb\n162                               Inner horizontal cell olfactory bulb\n163                         Subventricular zone radial glia-like cells\n164                         Subventricular zone radial glia-like cells\n165                                  Inhibitory neurons hindbrain hind\n166                                  Inhibitory neurons hindbrain hind\n167                                         Matrix D1 neurons striatum\n168                                                      Bergmann Glia\n169                 CGE-derived neurogliaform cells cortex/hippocampus\n170                                        Neuroblasts cerebellum glut\n171                                    Cajal-Retzius cells hippocampus\n172                               Dentate gyrus radial glia-like cells\n173              Glutamatergic projection neurons of the raphe nucleus\n174                                   Inhibitory neurons midbrain pept\n175                                  Granule neuroblasts dentate gyrus\n176                                      Cholinergic neurons hindbrain\n177                                       Patch D1/D2 neurons striatum\n178     Cholinergic neurons septal nucleus Meissnert and diagonal band\n179                                 Inhibitory neurons hypothalamus di\n180                                         Granule neurons cerebellum\n181                              Neuronal intermidate progenitor cells\n182                                               Olfactory astrocytes\n183                                         Neuroblasts olfactory bulb\n184                                   Oligodendrocytes precursor cells\n185                                        Inhibitory neurons thalamus\n186                                Inhibitory interneurons hippocampus\n187                             Granule neuroblasts dentate gyrus dent\n188                                        Inhibitory neurons midbrain\n189                                                      Schwann cells\n190                                             Neuroblasts cerebellum\n191                            Molecular layer interneurons cerebellum\n192                                           Neuroblast-like habenula\n193                              Oxytocin-producing cells hypothalamus\n194                                          Pmch neurons hypothalamus\n195                           Vasopressin-producing cells hypothalamus\n196         Ivy and MGE-derived neurogliaform cells cortex/hippocampus\n197                                                 Neuroblasts septum\n198                                     Inhibitory neurons spinal cord\n199                                 Excitatory neurons hippocampus CA1\n200                   Basket and bistratified cells cortex/hippocampus\n201                                 Excitatory neurons hippocampus CA3\n202                             Cholinergic interneurons telencephalon\n203                            Afferent nuclei of cranial nerves III-V\n204                                        Inhibitory neurons pallidum\n205                                   Inhibitory neurons thalamus tele\n206                                    Inhibitory neurons hypothalamus\n207             Dopaminergic periglomerular interneuron olfactory bulb\n208                     Hippocamposeptal projection cortex/hippocampus\n209                                       Trilaminar cells hippocampus\n210                              Dopaminergic neurons ventral midbrain\n211                             Granular layer interneurons cerebellum\n212                                      Axo-axonic cortex/hippocampus\n213                     Dorsal midbrain Myoc-expressing astrocyte-like\n214                                        Excitatory neurons amygdala\n215                              Orexin-producing neurons hypothalamus\n216                                  Inhibitory neurons septal nucleus\n217                                       Inhibitory neurons hindbrain\n218                                       Cholinergic neurons habenula\n                                               parent in_cds n_type n_cds\n1                                                root  FALSE    197   119\n2                                                root   TRUE    197    78\n3                                             Neurons  FALSE     42    26\n4                                             Neurons   TRUE     42    16\n5                                                root   TRUE     38    17\n6                                                root  FALSE     38    21\n7                                             Neurons  FALSE     31    19\n8                                             Neurons   TRUE     31    12\n9                                             Neurons  FALSE     28    18\n10                                            Neurons   TRUE     28    10\n11  Cholinergic monoaminergic and peptidergic neurons   TRUE     25    10\n12  Cholinergic monoaminergic and peptidergic neurons  FALSE     25    15\n13                                            Neurons  FALSE     25    14\n14                                            Neurons   TRUE     25    11\n15                                           CNS glia   TRUE     24    11\n16                                           CNS glia  FALSE     24    13\n17                                            Neurons  FALSE     23    14\n18                                            Neurons   TRUE     23     9\n19                         Telencephalon interneurons  FALSE     20    12\n20                         Telencephalon interneurons   TRUE     20     8\n21                      Di- and mesencephalon neurons  FALSE     18    14\n22                      Di- and mesencephalon neurons   TRUE     18     4\n23                                               root   TRUE     18    12\n24                                               root  FALSE     18     6\n25  Cholinergic monoaminergic and peptidergic neurons  FALSE     16    10\n26  Cholinergic monoaminergic and peptidergic neurons   TRUE     16     6\n27                                           CNS glia  FALSE     14     8\n28                                           CNS glia   TRUE     14     6\n29                                               root  FALSE     13     5\n30                                               root   TRUE     13     8\n31                   Telencephalon projecting neurons   TRUE     13     5\n32                   Telencephalon projecting neurons  FALSE     13     8\n33                      Di- and mesencephalon neurons   TRUE     13     8\n34                      Di- and mesencephalon neurons  FALSE     13     5\n35                               Astroependymal cells  FALSE     12     5\n36                               Astroependymal cells   TRUE     12     7\n37                         Peripheral sensory neurons  FALSE     11     9\n38                         Peripheral sensory neurons   TRUE     11     2\n39                                            Neurons  FALSE     10     7\n40                                            Neurons   TRUE     10     3\n41        Telencephalon projecting excitatory neurons   TRUE     10     4\n42        Telencephalon projecting excitatory neurons  FALSE     10     6\n43                                            Neurons  FALSE     10     5\n44                                            Neurons   TRUE     10     5\n45                   Telencephalon projecting neurons  FALSE      9     4\n46                   Telencephalon projecting neurons   TRUE      9     5\n47                             Neural crest-like glia  FALSE      9     3\n48                             Neural crest-like glia   TRUE      9     6\n49                                            Neurons  FALSE      9     5\n50                                            Neurons   TRUE      9     4\n51                         Peripheral sensory neurons  FALSE      8     3\n52                         Peripheral sensory neurons   TRUE      8     5\n53                         Telencephalon interneurons  FALSE      8     6\n54                         Telencephalon interneurons   TRUE      8     2\n55           Di- and mesencephalon inhibitory neurons  FALSE      8     3\n56           Di- and mesencephalon inhibitory neurons   TRUE      8     5\n57              Cholinergic and monoaminergic neurons   TRUE      8     5\n58              Cholinergic and monoaminergic neurons  FALSE      8     3\n59                                               root   TRUE      8     4\n60                                               root  FALSE      8     4\n61                                            Neurons  FALSE      7     3\n62                                            Neurons   TRUE      7     4\n63                                            Neurons  FALSE      7     5\n64                                            Neurons   TRUE      7     2\n65                                    Enteric neurons   TRUE      7     2\n66                                    Enteric neurons  FALSE      7     5\n67                                            Neurons  FALSE      7     5\n68                                            Neurons   TRUE      7     2\n69                                       Immune cells   TRUE      6     3\n70                                       Immune cells  FALSE      6     3\n71           Di- and mesencephalon excitatory neurons  FALSE      6     4\n72           Di- and mesencephalon excitatory neurons   TRUE      6     2\n73                                   Oligodendrocytes  FALSE      6     4\n74                                   Oligodendrocytes   TRUE      6     2\n75                                Spinal cord neurons  FALSE      5     3\n76                                Spinal cord neurons   TRUE      5     2\n77                               Astroependymal cells  FALSE      5     4\n78                               Astroependymal cells   TRUE      5     1\n79                                    Immature neural  FALSE      5     4\n80                                    Immature neural   TRUE      5     1\n81                                Sympathetic neurons   TRUE      5     3\n82                                Sympathetic neurons  FALSE      5     2\n83                                     Vascular cells  FALSE      4     1\n84                                     Vascular cells   TRUE      4     3\n85                         Peripheral sensory neurons  FALSE      4     2\n86                         Peripheral sensory neurons   TRUE      4     2\n87                                     Vascular cells   TRUE      4     3\n88                                     Vascular cells  FALSE      4     1\n89                                Peptidergic neurons  FALSE      4     3\n90                                Peptidergic neurons   TRUE      4     1\n91                                    Immature neural   TRUE      4     3\n92                                    Immature neural  FALSE      4     1\n93                                Spinal cord neurons   TRUE      4     1\n94                                Spinal cord neurons  FALSE      4     3\n95              Telencephalon inhibitory interneurons   TRUE      3     3\n96                       Olfactory inhibitory neurons   TRUE      3     1\n97                       Olfactory inhibitory neurons  FALSE      3     2\n98                     Spinal cord excitatory neurons  FALSE      3     3\n99        Telencephalon projecting inhibitory neurons   TRUE      3     2\n100       Telencephalon projecting inhibitory neurons  FALSE      3     1\n101                                  Oligodendrocytes   TRUE      3     1\n102                                  Oligodendrocytes  FALSE      3     2\n103             Cholinergic and monoaminergic neurons  FALSE      3     1\n104             Cholinergic and monoaminergic neurons   TRUE      3     2\n105                                   Enteric neurons  FALSE      3     2\n106                                   Enteric neurons   TRUE      3     1\n107                                 Hindbrain neurons  FALSE      3     2\n108                                 Hindbrain neurons   TRUE      3     1\n109                         Glutamatergic neuroblasts  FALSE      3     3\n110                                        Astrocytes  FALSE      3     1\n111                                        Astrocytes   TRUE      3     2\n112                    Spinal cord inhibitory neurons  FALSE      3     3\n113                            Neural crest-like glia  FALSE      3     2\n114                            Neural crest-like glia   TRUE      3     1\n115                                  Oligodendrocytes   TRUE      3     2\n116                                  Oligodendrocytes  FALSE      3     1\n117                  Telencephalon projecting neurons  FALSE      3     2\n118                  Telencephalon projecting neurons   TRUE      3     1\n119             Telencephalon inhibitory interneurons  FALSE      2     1\n120             Telencephalon inhibitory interneurons   TRUE      2     1\n121          Di- and mesencephalon inhibitory neurons   TRUE      2     1\n122          Di- and mesencephalon inhibitory neurons  FALSE      2     1\n123                                    Vascular cells  FALSE      2     1\n124                                    Vascular cells   TRUE      2     1\n125          Di- and mesencephalon excitatory neurons  FALSE      2     2\n126                                Cerebellum neurons  FALSE      2     1\n127                                Cerebellum neurons   TRUE      2     1\n128             Cholinergic and monoaminergic neurons  FALSE      2     1\n129             Cholinergic and monoaminergic neurons   TRUE      2     1\n130                                      Immune cells  FALSE      2     1\n131                                      Immune cells   TRUE      2     1\n132          Di- and mesencephalon excitatory neurons  FALSE      2     2\n133                               Peptidergic neurons  FALSE      2     2\n134             Telencephalon inhibitory interneurons  FALSE      2     2\n135                               Peptidergic neurons   TRUE      2     2\n136                              Astroependymal cells  FALSE      2     2\n137                            Neural crest-like glia   TRUE      2     2\n138             Cholinergic and monoaminergic neurons  FALSE      2     2\n139                      Olfactory inhibitory neurons  FALSE      2     2\n140             Cholinergic and monoaminergic neurons   TRUE      2     1\n141             Cholinergic and monoaminergic neurons  FALSE      2     1\n142          Di- and mesencephalon excitatory neurons   TRUE      2     1\n143          Di- and mesencephalon excitatory neurons  FALSE      2     1\n144             Telencephalon inhibitory interneurons   TRUE      2     1\n145             Telencephalon inhibitory interneurons  FALSE      2     1\n146                              Astroependymal cells   TRUE      2     2\n147                                        Astrocytes   TRUE      2     2\n148       Telencephalon projecting inhibitory neurons   TRUE      2     1\n149       Telencephalon projecting inhibitory neurons  FALSE      2     1\n150                    Spinal cord excitatory neurons   TRUE      2     2\n151                     Dentate gyrus granule neurons  FALSE      2     1\n152                     Dentate gyrus granule neurons   TRUE      2     1\n153                               Sympathetic neurons   TRUE      2     1\n154                               Sympathetic neurons  FALSE      2     1\n155                                  Oligodendrocytes  FALSE      2     1\n156                                  Oligodendrocytes   TRUE      2     1\n157                            Neural crest-like glia  FALSE      2     1\n158                            Neural crest-like glia   TRUE      2     1\n159          Di- and mesencephalon excitatory neurons  FALSE      2     2\n160                                    Vascular cells  FALSE      2     2\n161                      Olfactory inhibitory neurons  FALSE      2     1\n162                      Olfactory inhibitory neurons   TRUE      2     1\n163                              Astroependymal cells   TRUE      2     1\n164                              Astroependymal cells  FALSE      2     1\n165                                 Hindbrain neurons  FALSE      2     1\n166                                 Hindbrain neurons   TRUE      2     1\n167       Telencephalon projecting inhibitory neurons   TRUE      1     1\n168                                        Astrocytes   TRUE      1     1\n169             Telencephalon inhibitory interneurons  FALSE      1     1\n170                         Glutamatergic neuroblasts   TRUE      1     1\n171          Di- and mesencephalon excitatory neurons  FALSE      1     1\n172                              Astroependymal cells  FALSE      1     1\n173             Cholinergic and monoaminergic neurons  FALSE      1     1\n174                               Peptidergic neurons  FALSE      1     1\n175                     Non-glutamatergic neuroblasts  FALSE      1     1\n176                                 Hindbrain neurons  FALSE      1     1\n177       Telencephalon projecting inhibitory neurons   TRUE      1     1\n178             Cholinergic and monoaminergic neurons  FALSE      1     1\n179          Di- and mesencephalon inhibitory neurons   TRUE      1     1\n180                                Cerebellum neurons  FALSE      1     1\n181                     Non-glutamatergic neuroblasts   TRUE      1     1\n182                                        Astrocytes   TRUE      1     1\n183                     Non-glutamatergic neuroblasts   TRUE      1     1\n184                            Neural crest-like glia   TRUE      1     1\n185                               Peptidergic neurons   TRUE      1     1\n186             Telencephalon inhibitory interneurons   TRUE      1     1\n187                     Dentate gyrus granule neurons  FALSE      1     1\n188                                Cerebellum neurons  FALSE      1     1\n189                            Neural crest-like glia   TRUE      1     1\n190                                Cerebellum neurons  FALSE      1     1\n191                                Cerebellum neurons  FALSE      1     1\n192                     Non-glutamatergic neuroblasts   TRUE      1     1\n193                               Peptidergic neurons  FALSE      1     1\n194             Cholinergic and monoaminergic neurons  FALSE      1     1\n195                               Peptidergic neurons   TRUE      1     1\n196             Telencephalon inhibitory interneurons   TRUE      1     1\n197                         Glutamatergic neuroblasts  FALSE      1     1\n198                                 Hindbrain neurons  FALSE      1     1\n199       Telencephalon projecting excitatory neurons  FALSE      1     1\n200             Telencephalon inhibitory interneurons  FALSE      1     1\n201       Telencephalon projecting excitatory neurons  FALSE      1     1\n202             Cholinergic and monoaminergic neurons  FALSE      1     1\n203             Cholinergic and monoaminergic neurons  FALSE      1     1\n204          Di- and mesencephalon inhibitory neurons  FALSE      1     1\n205             Telencephalon inhibitory interneurons  FALSE      1     1\n206                               Peptidergic neurons  FALSE      1     1\n207                      Olfactory inhibitory neurons  FALSE      1     1\n208             Telencephalon inhibitory interneurons  FALSE      1     1\n209             Telencephalon inhibitory interneurons  FALSE      1     1\n210             Cholinergic and monoaminergic neurons  FALSE      1     1\n211                                Cerebellum neurons   TRUE      1     1\n212             Telencephalon inhibitory interneurons  FALSE      1     1\n213                                        Astrocytes  FALSE      1     1\n214       Telencephalon projecting excitatory neurons   TRUE      1     1\n215             Cholinergic and monoaminergic neurons  FALSE      1     1\n216                               Peptidergic neurons  FALSE      1     1\n217                    Spinal cord inhibitory neurons   TRUE      1     1\n218          Di- and mesencephalon excitatory neurons  FALSE      1     1\n\n\n\nwrite_csv(marker_check_analysis, \"mmBrain_markers_marker_check_analysis.csv\")\n\nMake a table showing percent of genes for each cell type sub-classification that are present so I can filter and subset the marker genes to decrease the complexity of the model.\n\nmarker_cell_types_prefilter &lt;- marker_cell_types_analysis %&gt;%\n  dplyr::select(!n_type) %&gt;%\n  pivot_wider(id_cols = c(\"cell_type\", \"parent\"), values_from = \"n_cds\",\n              names_from = \"in_cds\", names_glue = \"gene_present_{in_cds}\") %&gt;%\n  mutate(\"percent_genes_present\" = gene_present_TRUE / (gene_present_TRUE + gene_present_FALSE)) %&gt;%\n  relocate(gene_present_TRUE, percent_genes_present, .after = parent) %&gt;%\n  arrange(desc(gene_present_TRUE), desc(percent_genes_present))\nhead(marker_cell_types_prefilter)\n\n# A tibble: 6 × 5\n  cell_type    parent gene_present_TRUE percent_genes_present gene_present_FALSE\n  &lt;chr&gt;        &lt;chr&gt;              &lt;int&gt;                 &lt;dbl&gt;              &lt;int&gt;\n1 Neurons      root                  78                 0.396                119\n2 CNS glia     root                  17                 0.447                 21\n3 Cholinergic… Neuro…                16                 0.381                 26\n4 Neural cres… root                  12                 0.667                  6\n5 Di- and mes… Neuro…                12                 0.387                 19\n6 Astroependy… CNS g…                11                 0.458                 13\n\n\n\nmarker_cell_types_postfilter &lt;- marker_cell_types_prefilter %&gt;%\n  filter(parent == \"root\" | gene_present_TRUE &gt; 8 | percent_genes_present &gt; 0.49)\nhead(marker_cell_types_postfilter)\n\n# A tibble: 6 × 5\n  cell_type    parent gene_present_TRUE percent_genes_present gene_present_FALSE\n  &lt;chr&gt;        &lt;chr&gt;              &lt;int&gt;                 &lt;dbl&gt;              &lt;int&gt;\n1 Neurons      root                  78                 0.396                119\n2 CNS glia     root                  17                 0.447                 21\n3 Cholinergic… Neuro…                16                 0.381                 26\n4 Neural cres… root                  12                 0.667                  6\n5 Di- and mes… Neuro…                12                 0.387                 19\n6 Astroependy… CNS g…                11                 0.458                 13\n\n\n\nmarker_df_filtered &lt;- marker_check %&gt;%\n  # filter for cell_types retained by filter line in \"postfilter\"\n  semi_join(marker_cell_types_postfilter, by = \"cell_type\")\nhead(marker_df_filtered)\n\n  marker_gene            gene_id                                parent\n1       Crhbp ENSMUSG00000021680 Telencephalon inhibitory interneurons\n2       Tacr1 ENSMUSG00000030043 Telencephalon inhibitory interneurons\n3         Trh ENSMUSG00000005892                               Neurons\n4        Trdn ENSMUSG00000019787                               Neurons\n5      Nccrp1 ENSMUSG00000047586                               Neurons\n6        Dlx5 ENSMUSG00000029755                               Neurons\n                                                           cell_type in_cds\n1 Sleep-active long-range projection interneurons cortex/hippocampus  FALSE\n2 Sleep-active long-range projection interneurons cortex/hippocampus   TRUE\n3                                         Telencephalon interneurons  FALSE\n4                                         Telencephalon interneurons   TRUE\n5                                         Telencephalon interneurons  FALSE\n6                                         Telencephalon interneurons  FALSE\n  nominates total_nominated exclusion_dismisses inclusion_ambiguates\n1        NA              NA                  NA                   NA\n2         1               1                   1                    0\n3        NA              NA                  NA                   NA\n4         1             158                   1                    1\n5        NA              NA                  NA                   NA\n6        NA              NA                  NA                   NA\n        most_overlap ambiguity marker_score         summary\n1               &lt;NA&gt;        NA           NA      Not in CDS\n2               &lt;NA&gt;         0 1.000000e+02              Ok\n3               &lt;NA&gt;        NA           NA      Not in CDS\n4 Cerebellum neurons         1 6.266449e-03 High ambiguity?\n5               &lt;NA&gt;        NA           NA      Not in CDS\n6               &lt;NA&gt;        NA           NA      Not in CDS\n\nmarker_df_filtered_orphans &lt;- marker_df_filtered %&gt;%\n  anti_join(., ., by = c(\"cell_type\" = \"parent\"))\nhead(marker_df_filtered_orphans)\n\n  marker_gene            gene_id                                parent\n1       Crhbp ENSMUSG00000021680 Telencephalon inhibitory interneurons\n2       Tacr1 ENSMUSG00000030043 Telencephalon inhibitory interneurons\n3         Trh ENSMUSG00000005892                               Neurons\n4        Trdn ENSMUSG00000019787                               Neurons\n5      Nccrp1 ENSMUSG00000047586                               Neurons\n6        Dlx5 ENSMUSG00000029755                               Neurons\n                                                           cell_type in_cds\n1 Sleep-active long-range projection interneurons cortex/hippocampus  FALSE\n2 Sleep-active long-range projection interneurons cortex/hippocampus   TRUE\n3                                         Telencephalon interneurons  FALSE\n4                                         Telencephalon interneurons   TRUE\n5                                         Telencephalon interneurons  FALSE\n6                                         Telencephalon interneurons  FALSE\n  nominates total_nominated exclusion_dismisses inclusion_ambiguates\n1        NA              NA                  NA                   NA\n2         1               1                   1                    0\n3        NA              NA                  NA                   NA\n4         1             158                   1                    1\n5        NA              NA                  NA                   NA\n6        NA              NA                  NA                   NA\n        most_overlap ambiguity marker_score         summary\n1               &lt;NA&gt;        NA           NA      Not in CDS\n2               &lt;NA&gt;         0 1.000000e+02              Ok\n3               &lt;NA&gt;        NA           NA      Not in CDS\n4 Cerebellum neurons         1 6.266449e-03 High ambiguity?\n5               &lt;NA&gt;        NA           NA      Not in CDS\n6               &lt;NA&gt;        NA           NA      Not in CDS\n\nmarker_df_filtered_orph_rem &lt;-  anti_join(marker_df_filtered, marker_df_filtered_orphans, by = \"marker_gene\")\nhead(marker_df_filtered_orph_rem)\n\n  marker_gene            gene_id  parent                  cell_type in_cds\n1      Gm7271               &lt;NA&gt; Neurons Peripheral sensory neurons  FALSE\n2     Fam19a4               &lt;NA&gt; Neurons Peripheral sensory neurons  FALSE\n3        Tlx3 ENSMUSG00000040610 Neurons Peripheral sensory neurons  FALSE\n4      Mrgprd ENSMUSG00000051207 Neurons Peripheral sensory neurons  FALSE\n5        Otoa ENSMUSG00000034990 Neurons Peripheral sensory neurons   TRUE\n6     Mrgpra3 ENSMUSG00000078698 Neurons Peripheral sensory neurons  FALSE\n  nominates total_nominated exclusion_dismisses inclusion_ambiguates\n1        NA              NA                  NA                   NA\n2        NA              NA                  NA                   NA\n3        NA              NA                  NA                   NA\n4        NA              NA                  NA                   NA\n5         1             275                   0                    0\n6        NA              NA                  NA                   NA\n  most_overlap ambiguity marker_score    summary\n1         &lt;NA&gt;        NA           NA  Not in db\n2         &lt;NA&gt;        NA           NA  Not in db\n3         &lt;NA&gt;        NA           NA Not in CDS\n4         &lt;NA&gt;        NA           NA Not in CDS\n5         &lt;NA&gt;         0    0.3636364         Ok\n6         &lt;NA&gt;        NA           NA Not in CDS\n\n\nI also have to head off an error about parent cell types referred to in the parent field of other entries not being present by doing a recursive semi_join. See the error copied below: Error in check_markers(koala_umap_cds, marker_file_path, db = org.Mm.eg.db, : Subtype Telencephalon inhibitory interneurons is not defined in marker file.Subtype Cerebellum neurons is not defined in marker file.Subtype root is not defined in marker file.Subtype Di- and mesencephalon excitatory neurons is not defined in marker file.Subtype Dentate gyrus granule neurons is not defined in marker file.Subtype Oligodendrocytes is not defined in marker file.Subtype Immature neural is not defined in marker file.Subtype Olfactory inhibitory neurons is not defined in marker file.Subtype Hindbrain neurons is not defined in marker file.\n2023-05-29 14:36 PM Where I left off: Marker checks are writing to disk and are parsing. But missing parents (orphaned cell types) are still in the marker .txt specs, and I have misplaced the dataframes that actually contain the gene info.\n\nwrite new marker file to disk\nThe basic structure of the Garnett marker file is a series of entries, each describing elements of a cell type. After the cell name, each additional line will be a descriptor, which begins with a keyword, followed by a colon (‘:’). After the colon, a series of specifications can be added, separated by commas (‘,’). Descriptors may spill onto following lines so long as you do not split a specification across multiple lines (i.e. if breaking up a long descriptor across multiple lines, all but the last line should end with a comma). Each new descriptor should begin on a new line. A generic cell type entry looks like this:\n“’ &gt; cell type name descriptor: spec1, spec2, spec3, spec4 descriptor2: spec1 “’\n\n\ndefine new writer function\nThe joy of for loops\n\nwrite_garnett_marker_file &lt;- function(marker_df, filename){\n  \n  marker_df &lt;- marker_df %&gt;%\n  dplyr::select(cell_type, parent, marker_gene) %&gt;%\n  summarize(\"marker_gene\" = paste(marker_gene, collapse = \", \"),\n            .by = c(cell_type, parent))\n  \n  marker_file_lines = c()\n  for (rowNum in 1:nrow(marker_df)){\n    marker_file_lines = c(marker_file_lines, as.character(paste0(\"&gt;\", marker_df[rowNum, \"cell_type\"], sep = \"\")))\n    \n      if(is.na(marker_df[rowNum, \"parent\"])) {\n        \n      } else if(marker_df[rowNum, \"parent\"] == \"root\") {\n        \n      } else if(!is.na(marker_df[rowNum, \"parent\"])) {\n        marker_file_lines = c(marker_file_lines, as.character(paste(\"subtype of:\", marker_df[rowNum, \"parent\"], sep = \" \")))\n      }\n    \n    marker_file_lines = c(marker_file_lines, as.character(paste(\"expressed:\", marker_df[rowNum, \"marker_gene\"], sep = \" \")))\n    marker_file_lines = c(marker_file_lines, \"\")\n  }\n  \n  fileConn &lt;- file(filename)\n  writeLines(marker_file_lines, fileConn)\n  close(fileConn)\n}\n\n\nwrite_garnett_marker_file(marker_df_filtered_orph_rem, \"mmBrain_markers_filtered.txt\")\n\n\n\n\nPrepare trained classified from heirarchical marker gene file\n\nlibrary(org.Mm.eg.db)\n\nmarker_file_path &lt;- \"mmBrain_markers_filtered.txt\"\n\nmarker_check &lt;- check_markers(koala_umap_cds, marker_file_path,\n                              db = org.Mm.eg.db,\n                              cds_gene_id_type = \"SYMBOL\",\n                              marker_file_gene_id_type = \"SYMBOL\")\n\nThere are 13 cell type definitions\n\n\n\nmarker_check_plot &lt;- plot_markers(marker_check)\n\nThe marker plot is too large to be viewed in R or in the Rmarkdown output. (It errors). Please view “mmBrain_markers_check_plot.png” in the google drive filesystem. It is exported with manually-found dimensions that work for display and do not error.\n\nggsave(\"mmBrain_markers_check_plot.png\", marker_check_plot, width = 10, height = 20, limitsize = FALSE)\n\nBasically, this is a really big model.\n\n\nTrain the classifier\n\n# import previoously trained classifier\nmmBrain_classifier &lt;- readRDS(\"../../pdcherry_github_data/scRNAseq/2023_06_03-13_cell_def_mmBrain_classifier.Rds\")\n\n\n\nPerform garnett classify\n\nkoala_features_classified &lt;- classify_cells(koala_umap_cds, mmBrain_classifier,\n                                            db = org.Mm.eg.db,\n                                            cluster_extend = TRUE,\n                                            cds_gene_id_type = \"SYMBOL\")\n\nThis graph was created by an old(er) igraph version.\n  Call upgrade_graph() on it to use with the current igraph version\n  For now we convert it on the fly...\n\nkoala_features_classified\n\nCellDataSet (storageMode: environment)\nassayData: 17426 features, 1410 samples \n  element names: exprs \nprotocolData: none\nphenoData\n  sampleNames: ATGGCTGTCGATTTGA-1 GGTACAAAGTTCCTGC-1 ...\n    TCGCCCATCTAATTGG-1 (1410 total)\n  varLabels: orig.ident nCount_RNA ... cluster_ext_type (9 total)\n  varMetadata: labelDescription\nfeatureData\n  featureNames: Xkr4 Rp1 ... AC149090.1 (17426 total)\n  fvarLabels: vf_vst_counts_mean vf_vst_counts_variance ...\n    gene_short_name (9 total)\n  fvarMetadata: labelDescription\nexperimentData: use 'experimentData(object)'\nAnnotation:  \n\n\n\nsuppressPackageStartupMessages(library(tidyverse))\n\n\npData(koala_features_classified) %&gt;%\n  count(cell_type)\n\n                          cell_type   n\n1                        Astrocytes  89\n2              Astroependymal cells  33\n3                          CNS glia 111\n4     Di- and mesencephalon neurons  35\n5            Neural crest-like glia  34\n6                           Neurons  83\n7        Peripheral sensory neurons  57\n8  Telencephalon projecting neurons 126\n9                           Unknown 830\n10                   Vascular cells  12\n\n\n\npData(koala_features_classified) %&gt;%\n  count(cluster_ext_type)\n\n                   cluster_ext_type   n\n1                        Astrocytes 645\n2              Astroependymal cells  16\n3                          CNS glia  46\n4     Di- and mesencephalon neurons  22\n5            Neural crest-like glia  32\n6                           Neurons  35\n7        Peripheral sensory neurons  17\n8  Telencephalon projecting neurons  96\n9                           Unknown 490\n10                   Vascular cells  11\n\n\n\nkoala_features_classified_df &lt;- inner_join(\n  rownames_to_column(as.data.frame(pData(koala_features_classified))),\n  rownames_to_column(as.data.frame(koala_features_classified@reducedDimS)),\n  by = \"rowname\")\n\n\nclassified_umap_plot &lt;- ggplot(koala_features_classified_df) +\n  geom_point(aes(x = umap_1, y = umap_2, color = cluster_ext_type), alpha = 0.5) +\n  theme_bw() +\n  scale_color_viridis_d(option = \"H\")\nclassified_umap_plot\n\n\n\n\n\n\n\n\n\nclassified_umap_drop_unknowns_plot &lt;-\n  koala_features_classified_df %&gt;%\n  filter(cluster_ext_type != \"Unknown\") %&gt;%\n  ggplot() +\n  geom_point(aes(x = umap_1, y = umap_2, color = cluster_ext_type), alpha = 0.5) +\n  theme_bw() +\n  scale_color_viridis_d(option = \"H\")\nclassified_umap_drop_unknowns_plot\n\n\n\n\n\n\n\n\n\nclassified_umap_drop_unknowns_plot &lt;-\n  koala_features_classified_df %&gt;%\n  filter(cell_type != \"Unknown\") %&gt;%\n  ggplot() +\n  geom_point(aes(x = umap_1, y = umap_2, color = cell_type), alpha = 0.5) +\n  theme_bw() +\n  scale_color_viridis_d(option = \"H\")\nclassified_umap_drop_unknowns_plot"
  },
  {
    "objectID": "posts/2024_01_22-scRNA-seq.html#htp-go-anlaysis-for-all-10-clusters",
    "href": "posts/2024_01_22-scRNA-seq.html#htp-go-anlaysis-for-all-10-clusters",
    "title": "scRNA-seq Analysis: Messy Mouse Brain",
    "section": "HTP GO Anlaysis for all 10 clusters",
    "text": "HTP GO Anlaysis for all 10 clusters\n\nkoala_umap_markers_for_GO &lt;- koala_umap_markers %&gt;%\n  group_by(cluster) %&gt;% slice_max(n = 20, order_by = avg_log2FC)\nkoala_umap_markers_for_GO %&gt;% ungroup() %&gt;% dplyr::select(\"gene\") %&gt;% slice_tail(n = 167) %&gt;% dput()\n\nstructure(list(gene = c(\"Plpp1\", \"Kdr\", \"Flt4\", \"F8\", \"Fgd5\", \n\"Fcgr2b\", \"Adgrl4\", \"Gm35696\", \"Uroc1\", \"Cxcl1\", \"Tedc2\", \"Hal\", \n\"Grm8\", \"Gldc\", \"Hsd17b13\", \"Gcnt2\", \"BC024386\", \"Itih3\", \"Noct\", \n\"Ftcd\", \"Osgin1\", \"Amdhd1\", \"Gls2\", \"Ctcflos\", \"Gm50136\", \"Gramd1c\", \n\"Serpina10\", \"Vtn\", \"mt-Co1\", \"mt-Nd4\", \"Gm48099\", \"mt-Co2\", \n\"mt-Nd1\", \"mt-Cytb\", \"Serpina1c\", \"Il31ra\", \"Ces1c\", \"Lars2\", \n\"mt-Nd3\", \"mt-Atp6\", \"mt-Nd2\", \"Serpinf2\", \"Cmss1\", \"Cdk8\", \"Gm15564\", \n\"mt-Co3\", \"Serpina1e\", \"Nr1h5\", \"Mamdc2\", \"Arvcf\", \"Ngf\", \"Ank3\", \n\"Gpc6\", \"Pde3a\", \"Cacna2d1\", \"Bmp5\", \"Nrxn1\", \"Gucy1a1\", \"Fendrr\", \n\"Abcc9\", \"Ntm\", \"Reln\", \"Pde1a\", \"Col5a1\", \"Carmn\", \"Nkain2\", \n\"Lhfp\", \"Mup17\", \"mt-Cytb\", \"Il31ra\", \"mt-Atp8\", \"mt-Nd2\", \"mt-Nd4\", \n\"mt-Co2\", \"Apoe\", \"Ppfia2\", \"mt-Co3\", \"mt-Atp6\", \"Pgrmc1\", \"Plxnc1\", \n\"mt-Co1\", \"Dab2\", \"Erg\", \"mt-Nd5\", \"Chchd2\", \"Serpina3k\", \"Fcgr2b\", \n\"Cyp2c38\", \"Gm13775\", \"Lhpp\", \"Slc1a2\", \"Rnf43\", \"Prodh\", \"Atf3\", \n\"Glt1d1\", \"Cyp3a59\", \"Serpina6\", \"Glul\", \"Tox\", \"Slc16a10\", \"Klb\", \n\"Slc25a25\", \"Irs1\", \"Tenm3\", \"Kank1\", \"Nr0b2\", \"Hnf4aos\", \"Adgre4\", \n\"Fam129a\", \"Cd5l\", \"Adgb\", \"Bank1\", \"E230029C05Rik\", \"Clec4f\", \n\"Slc8a1\", \"Entpd1\", \"Abr\", \"Fyb\", \"Gm26740\", \"Hdac9\", \"Madd\", \n\"Unc93b1\", \"Elmo1\", \"Runx1\", \"Ctsc\", \"Slc40a1\", \"Cadm1\", \"Nuak1\", \n\"Wnt9b\", \"Vwf\", \"Dnm3\", \"Mecom\", \"Eln\", \"Thsd7a\", \"Rspo3\", \"Pgm5\", \n\"Unc13b\", \"Ptpn14\", \"Fbn1\", \"Zfp521\", \"Jam2\", \"Heg1\", \"Pecam1\", \n\"Plxna4\", \"March3\", \"Myo1d\", \"Tbc1d4\", \"Bcl11b\", \"Atp8a2\", \"Gm2682\", \n\"Themis\", \"Cd226\", \"Itk\", \"Skap1\", \"Ms4a4b\", \"Grap2\", \"Satb1\", \n\"Kcnq5\", \"Ptpn22\", \"Pde7a\", \"Arhgap15\", \"Dock2\", \"Inpp4b\", \"Epsti1\", \n\"Itgal\", \"Pik3cd\", \"Ripor2\")), row.names = c(NA, -167L), class = c(\"tbl_df\", \n\"tbl\", \"data.frame\"))\n\n\n\nSeurat::FeaturePlot(koala_umap, features = c(\"Ptprb\", \"Stab2\", \"Lrmda\", \"Prkg1\"), ncol = 2)"
  },
  {
    "objectID": "posts/2024_01_02-why_you_should_elect_a_HDHP.html",
    "href": "posts/2024_01_02-why_you_should_elect_a_HDHP.html",
    "title": "Why you should elect a high-deductible health plan",
    "section": "",
    "text": "The Misunderstood Spider of the annual enrollment process just wants to cuddle."
  },
  {
    "objectID": "posts/2024_01_02-why_you_should_elect_a_HDHP.html#background-basics-medical-benefit-plan-definitions",
    "href": "posts/2024_01_02-why_you_should_elect_a_HDHP.html#background-basics-medical-benefit-plan-definitions",
    "title": "Why you should elect a high-deductible health plan",
    "section": "Background: Basics medical benefit plan definitions",
    "text": "Background: Basics medical benefit plan definitions\n\nPremium: the amount you pay for your plan from your paycheck\nDeductible: a fixed amount that you must pay out-of-pocket before your plan begins paying for expenses\nCo-pay/co-insurance: a flat (percentage) rate that you pay for each medical event\nOut-of-pocket maximum: an upper bound on what you pay from your personal accounts in a given plan year; after this is hit, plan will cover everything at 100% (no co-pay/co-insurance)\nMedical Spending Account: account for pre-tax money diverted from your paycheck to be used for qualifying medical expenses:\n\nFlexible Spending Account (FSA): traditional “use it or lose it” annual account for PPOs\nHealth Savings Account (HSA): only available to high-deductible plan participants"
  },
  {
    "objectID": "posts/2024_01_02-why_you_should_elect_a_HDHP.html#so-why-are-we-instinctively-afraid-of-high-deductible-plans",
    "href": "posts/2024_01_02-why_you_should_elect_a_HDHP.html#so-why-are-we-instinctively-afraid-of-high-deductible-plans",
    "title": "Why you should elect a high-deductible health plan",
    "section": "So why are we instinctively afraid of high-deductible plans?",
    "text": "So why are we instinctively afraid of high-deductible plans?\nOver the years, we’ve been conditioned to think about healthcare in certain ways. For example, we think that Premiums work like: “you pay more for more doctor options”, or “deductible: smaller is better”. But we lose sight of our sunk costs, like premiums and taxes. FSA example: if you put $1,000 in an FSA, and lose $200 because you can’t spend it, that feels terrible and you are likely to put in less next year, because you’ve lost sight of what would have happened if that money were taxed— if your tax bracket is 30%, you are still $100 ahead!\nWe also tend to think in annual cycles for health care. But if there were the ability save or ‘carry over’ unspent dollars from year to year, that situation would open up to budgeting healthcare over multiple years. And one thing actuaries know about budgeting for unpredictable events with a high spread of potential costs: averaging over time makes the ending outcome more predictable. (See the central limit theorem).\nWhat we haven’t been conditioned to think about is: premiums as a function of deductibles; costs summed / averaged over multiple years; tax & retirement benefits of healthcare budgeting."
  },
  {
    "objectID": "posts/2024_01_02-why_you_should_elect_a_HDHP.html#the-case-for-hgih-deductible-health-plans-the-health-savings-account-hsa",
    "href": "posts/2024_01_02-why_you_should_elect_a_HDHP.html#the-case-for-hgih-deductible-health-plans-the-health-savings-account-hsa",
    "title": "Why you should elect a high-deductible health plan",
    "section": "The case for hgih-deductible health plans: the health savings account (HSA)",
    "text": "The case for hgih-deductible health plans: the health savings account (HSA)\n\nThe high deductible sounds scary, but it’s covered by the combination of your employer’s contribution to your HSA and the money you save on monthly premiums. You are paying it with “house money,” and if you don’t spend all of that, you keep it.\nThe HSA is the very best supplemental retirement savings vehicle there is; in some ways, it’s even better than your 401K, which every financial planner tells you is the first thing you should max out.\nThe upper bound (out-of-pocket max) on HDHPs means the scenarios in which you could end up paying more than you would on a PPO or EPO/HMO are probably pretty narrow even in a single year, and across multiple years the risk is very low.\nHDHP plans are generally the same plan network as that insurer’s PPO or EPO/HMO. Everything about it is the same, except for how you pay for it. Your doctor doesn’t care. Switch, switch back, no issue."
  },
  {
    "objectID": "posts/2024_01_02-why_you_should_elect_a_HDHP.html#but-what-if-i-have-an-expensive-year",
    "href": "posts/2024_01_02-why_you_should_elect_a_HDHP.html#but-what-if-i-have-an-expensive-year",
    "title": "Why you should elect a high-deductible health plan",
    "section": "But what if I have an expensive year?",
    "text": "But what if I have an expensive year?\nMy 2020, among other ongoing medical events:  \nYou can have a bad year, but it won’t be as bad as it may seem at first: - $28k billed - $12k allowed by insurance - $3.5k is what I had to pay"
  },
  {
    "objectID": "posts/2024_01_02-why_you_should_elect_a_HDHP.html#an-example-2023-comparative-cost-model",
    "href": "posts/2024_01_02-why_you_should_elect_a_HDHP.html#an-example-2023-comparative-cost-model",
    "title": "Why you should elect a high-deductible health plan",
    "section": "An example 2023 comparative cost model",
    "text": "An example 2023 comparative cost model\nThese numbers are purely hypothetical and in no way related to my or any specific employer.\n\nMake cost model data frame\n\nppo_deductible &lt;- 250\nppo_oop_max &lt;- 2250\nppo_employer_contributes &lt;- 0\nppo_premium &lt;- 0\nppo_co_insurance &lt;- .9\n\nhdhp_deductible &lt;- 1600\nhdhp_oop_max &lt;- 3500\nhdhp_employer_contributes &lt;- -3850\nhdhp_premium &lt;- 0\nhdhp_co_insurance &lt;- .9\n\nhealth_spending_model &lt;- function(raw_expenditure, deductible, co_insurance, oop_max, emp_contribution, premium){\n  \n  actual_expenditure &lt;- if_else(\n    raw_expenditure &lt;= deductible, raw_expenditure, if_else(\n      (deductible + ((raw_expenditure - deductible) * co_insurance) ) &gt;= oop_max, oop_max,\n        (deductible + ((raw_expenditure - deductible) * co_insurance) )\n      )\n    )  + emp_contribution + premium\n  \n  return(actual_expenditure)\n}\n\ncostsdf &lt;- seq(0, 10000, 50) %&gt;%\n  as_tibble() %&gt;%\n  rename(\"raw_expenditure\" = 1) %&gt;%\n  mutate(\"PPO\" = health_spending_model(raw_expenditure, ppo_deductible, ppo_co_insurance, ppo_oop_max,\n                                       ppo_employer_contributes, ppo_premium),\n         \"HDHP\" = health_spending_model(raw_expenditure, hdhp_deductible, hdhp_co_insurance, hdhp_oop_max,\n                                       hdhp_employer_contributes, hdhp_premium)) %&gt;%\n  pivot_longer(cols = c(\"PPO\", \"HDHP\"), values_to = \"your_cost\", names_to = \"plan_type\")\n\n\n\nPlot cost model\n\ncostsdf %&gt;%\n  ggplot(aes(x = raw_expenditure, y = your_cost, color = plan_type)) +\n  geom_line() +\n  scale_color_viridis_d(option = \"D\", begin = 0.3, end = 0.75) +\n  geom_hline(yintercept = 0, linetype = \"dotdash\", color = \"red\") +\n  scale_x_continuous(label = scales::label_currency()) +\n  scale_y_continuous(label = scales::label_currency()) +\n  labs(title = \"Plot of personal cost versus raw allowed health expenditure\",\n       x = \"Raw allowed healthcare expenditure ($)\",\n       y = \"Your cost ($)\",\n       color = \"Plan type\")\n\n\n\n\n\n\n\n\nAssumes 100% in-network providers, co-insurances are 90% of total accepted expenditure.\nThe HDHP is actually less expensive than PPO until &gt;$11,000 of raw expense. Because both plans have 90% co-insurance1, the amount paid by each is similar when under the OOP Max.\nHDHP costs 11.1% more than PPO until reaching the deductible.\nBecause the OOP Max for the HDHP is lower than the HSA contribution (from the employer), there is no medical expense scenario when this model keeps less than $350 at the end of the year."
  },
  {
    "objectID": "posts/2024_01_02-why_you_should_elect_a_HDHP.html#the-hsa-a-very-different-medical-spending-account",
    "href": "posts/2024_01_02-why_you_should_elect_a_HDHP.html#the-hsa-a-very-different-medical-spending-account",
    "title": "Why you should elect a high-deductible health plan",
    "section": "The HSA: a very different medical spending account",
    "text": "The HSA: a very different medical spending account\n\n“From a tax standpoint, an HSA is the best thing out there because it has a triple tax advantage,” Fronstin says. “The money goes in tax free, it builds up tax free and it comes out tax free” if withdrawn for qualified medical expenses.\nNYT The Triple Tax Break You May Be Missing: A Health Savings Account\n\nCA, NJ, and AL tax HSA contributions; NH and TN tax earnings.\n\nNo “use it or lose it”— it’s your money.\nTreated like a 401K account: pre-tax1, interest-earning, investable.\nNot tied to your employer: your HSA goes with you, can be rolled over into another HSA (like 401K)\n\n$4,150 individual contribution limit; $8,300 contribution family limit (2024 IRS limits)\nEmployer may contribute some or most of that, as a benefit\nIf 55 or over, extra $1,000/year “catch-up”\n\nInterest/investment growth is tax-free.\n\nCA, NJ, and AL tax HSA contributions; NH and TN tax earnings.\n\nAt retirement age, can withdraw and use for any reason, but taxed as income (like IRA).\nIf used for qualifying medical expenses, neither the principal nor the growth is ever taxed!1"
  },
  {
    "objectID": "posts/2024_01_02-why_you_should_elect_a_HDHP.html#multi-year-thinking",
    "href": "posts/2024_01_02-why_you_should_elect_a_HDHP.html#multi-year-thinking",
    "title": "Why you should elect a high-deductible health plan",
    "section": "Multi-Year Thinking",
    "text": "Multi-Year Thinking\nWe’ve been taught to think in annual cycles, and to over-value downside risk. Think about the upside benefit of a light year: one year in which I spend only half of my premium savings + employer contribution “stake” can cover the downside risk of years when I spend more. PPO premiums are sunk costs—you’ll never see that money again.\nMultiply your contribution (not your employer’s contribution) by your tax bracket—that’s free money. Your employer’s contribution is free money.\n1CA, NJ, and AL tax HSA contributions; NH and TN tax earnings. IRS Publication 969\nIf you meet your deductible in 2024, pack all your annual checkups into the end of 2024 and the beginning of 2026, and look to have a light year in 2025.\nBanking your receipts: you can claim your HSA reimbursements at any time, so you can “bank up” your reimbursable expenses across years, allowing your money to grow tax-free in the HSA, but leaving you the option to reimburse yourself tax-free for multiple years worth of expenses at any time.\nIRS Publication 969"
  },
  {
    "objectID": "posts/2024_01_02-why_you_should_elect_a_HDHP.html#qualifying-to-contribute-to-an-hsa",
    "href": "posts/2024_01_02-why_you_should_elect_a_HDHP.html#qualifying-to-contribute-to-an-hsa",
    "title": "Why you should elect a high-deductible health plan",
    "section": "Qualifying to contribute to an HSA",
    "text": "Qualifying to contribute to an HSA\n\nRequirements\n\nYou are enrolled in a high-deductible health insurance plan.\n\nIRS Publication 969\n\n\nDisqualifications\n\nYou must NOT be covered by a disqualifying health plan (like another plan) (except for dental, vision, and other specific exceptions).\nYou must NOT be enrolled in medicare.\nYou must NOT be claimed as a dependent on someone else’s tax filing."
  },
  {
    "objectID": "posts/2024_01_02-why_you_should_elect_a_HDHP.html#the-fine-print-things-to-watch-out-for",
    "href": "posts/2024_01_02-why_you_should_elect_a_HDHP.html#the-fine-print-things-to-watch-out-for",
    "title": "Why you should elect a high-deductible health plan",
    "section": "The fine print: things to watch out for",
    "text": "The fine print: things to watch out for\n\nYou are responsible for record-keeping—IRS can audit, so you need records for at least 3 years, probably 6\n\ntaxes + 20% penalty due for any money withdrawn that you can’t prove was “qualified”\ncount years from when you withdrew from the HSA, not when the medical expense happened\n\nThe State of California (among others) taxes contributions, interest, and capital gains of HSAs. (Employers document this on W-2; state vs. federal taxable incomes will be different.)\nHSA contributions are taxable to California residents; use Schedule CA (540) “other earned income.”\nYou will need to file an extra schedule with your taxes (IRS form 8889).\nYou will become a savvier medical consumer—it’s your money! Watch for mis-billing, look at service costs up front.\nDon’t underestimate the possibility you will end up going out-of-network when you do your calculations.\nIf you invest your HSA money in index funds, it may grow faster, but not be FDIC-insured."
  },
  {
    "objectID": "posts/2024_01_02-why_you_should_elect_a_HDHP.html#in-summary-what-have-we-learned",
    "href": "posts/2024_01_02-why_you_should_elect_a_HDHP.html#in-summary-what-have-we-learned",
    "title": "Why you should elect a high-deductible health plan",
    "section": "In summary: what have we learned?",
    "text": "In summary: what have we learned?\nPlaying with house money: with your employer’s contribution, your premium savings, and the money you would have put in an FSA, you’re already better than break-even on the deductible; if you don’t meet your deductible in a given a year, you get that benefit instead of the insurance company.\nThink multi-year when assessing risk: it’s possible you might pay a little more in a really expensive year, but you will pay a lot less in a good year; across years, it’s hard to lose.\nHSAs are awesome: max out your contribution of pre-tax money to the HSA and get even better tax advantages than your 401(k); avoid taxes on it completely if you continue to use it for medical expenses after you retire."
  },
  {
    "objectID": "posts/2024_01_02-why_you_should_elect_a_HDHP.html#resources-further-reading",
    "href": "posts/2024_01_02-why_you_should_elect_a_HDHP.html#resources-further-reading",
    "title": "Why you should elect a high-deductible health plan",
    "section": "Resources & Further Reading",
    "text": "Resources & Further Reading\n\nIRS Publication 969\nFidelity HSA contribution limits and eligibility rules\nInstructions for California Franchise Tax Board Schedule CA (540)\nBogleheads Health Savings Account"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Frameshift",
    "section": "",
    "text": "A blog of indeterminate subject matter and publication frequency from a molecular biologist shifting into bioinformatics and data science.\nLikely topics are molecular biology, biological data science, economics, policy, California ballot measure discussion, and outdoor adventures.\n \n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          Title\n        \n         \n          Date - Oldest\n        \n         \n          Date - Newest\n        \n         \n          Author\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\n\n\n\n\n\nSan Francisco political support data shows true alignment\n\n\n\n\n\n\npolitics\n\n\n\n\n\n\n\n\n\nMar 2, 2024\n\n\nPatrick Cherry\n\n\n\n\n\n\n\n\n\n\n\n\nscRNA-seq Analysis: Messy Mouse Brain\n\n\n\n\n\n\ncode\n\n\nscRNA-seq\n\n\nRNA-seq\n\n\n\n\n\n\n\n\n\nJan 22, 2024\n\n\nPatrick Cherry\n\n\n\n\n\n\n\n\n\n\n\n\nGTEX RNA-seq Liver-specific Process and TF Identification\n\n\n\n\n\n\ncode\n\n\nRNAseq\n\n\n\n\n\n\n\n\n\nJan 3, 2024\n\n\nPatrick Cherry\n\n\n\n\n\n\n\n\n\n\n\n\nWhy you should elect a high-deductible health plan\n\n\n\n\n\n\nfinance\n\n\nhealthcare\n\n\n\n\n\n\n\n\n\nJan 2, 2024\n\n\nPatrick Cherry\n\n\n\n\n\n\n\n\n\n\n\n\nHow I run and deploy this Quarto blog\n\n\n\n\n\n\nnews\n\n\ncode\n\n\ncommunity\n\n\n\n\n\n\n\n\n\nDec 29, 2023\n\n\nPatrick Cherry\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "Bio\nPatrick invents products and procedures for manipulating DNA, RNA, and their sequence information in novel and helpful ways. He focuses on writing reproducible bioinformatic analysis pipelines that cater to users of all levels. Patrick is known for inventing the Twist Pan-cancer Reference Standards (v1 & v2), the Fragmentome Calibration Control, and the RNA Fusion Positive Control.\n\n\nInterests\nPatrick is a PhD scientist skilled in bioinformatics, biological data science, data visualization, statistical modeling, next-generation sequencing (NGS), and tool-building. Patrick has coded reproducible and rigorous pipelines for high-throughput experimental designs and genomic analyses, launched best-in-class oncology reference standards, and invented new molecular methods for DNA and microbe manipulation. Originally trained in Molecular Biology, Patrick is interested in taking his knowledge and practice of data science / bioinformatics to the next level.\n\nRésumé and CV\nView resume in browser\nResume and CV git repo\n\n\n\nEducation\nPhD in Molecular Biology | University of Colorado Anschutz Medical Campus\nB.A. in Biochemistry and Molecular Biology | Hendrix College\n\n\nExperience\nTwist Bioscience | Senior R&D Scientist | Jan. 2021 - Present\nZymergen | NGS Scientist | May 2019 - Dec. 2020\n\n\nMiscellaneous\nPatrick is an avid outdoorsman and indoorsman. Outdoor pursuits include rock climbing, skiing, trail running, and landscape photography. Indoor hobbies include table top games, cooking, baking, photographic printing / framing / design."
  },
  {
    "objectID": "posts/2023_12_29-How_I_host_quarto_blog.html",
    "href": "posts/2023_12_29-How_I_host_quarto_blog.html",
    "title": "How I run and deploy this Quarto blog",
    "section": "",
    "text": "I started a blog! Isn’t that grand!?"
  },
  {
    "objectID": "posts/2023_12_29-How_I_host_quarto_blog.html#why-do-i-want-to-blog",
    "href": "posts/2023_12_29-How_I_host_quarto_blog.html#why-do-i-want-to-blog",
    "title": "How I run and deploy this Quarto blog",
    "section": "Why do I want to blog?",
    "text": "Why do I want to blog?\nI’ve always had a lot of thoughts and opinions on many topics. And when I have a thought, idea, or opinion I really want to develop, I often use writing (privately, for myself) as an exercise for exploring, evaluating, and making more rigorous the thought.\n\nWhen I sit down to write a book, I do not say to myself, ‘I am going to produce a work of art.’ I write it because there is some lie that I want to expose, some fact to which I want to draw attention, and my initial concern is to get a hearing.\n-George Orwell, “Why I Write”\n\nI suppose I’m passionate about some topics, some of which are clearly in my lane (e.g. Molecular Biology, Photography), and some of which are veering for me (e.g. Economics, Finance, Business Trends). That being said, I feel a duty as a scientist to explore these ideas honestly and with every intent of uncovering truth—especially to a standard that would meet those of the scientific community or journalism community.\nAnd most practically, I sometimes need more space to discuss an idea than is allowed in a tweet or mastodon post. (And those threads never seem to fully connect, anyway.)"
  },
  {
    "objectID": "posts/2023_12_29-How_I_host_quarto_blog.html#introduction-to-self-hosted-blogging",
    "href": "posts/2023_12_29-How_I_host_quarto_blog.html#introduction-to-self-hosted-blogging",
    "title": "How I run and deploy this Quarto blog",
    "section": "Introduction to self-hosted blogging",
    "text": "Introduction to self-hosted blogging\n\nWhich is really an introduction to the publishing ecosystem\nI have chosen to set up a self-hosted blog for many reasons. Self hosting has always seemed like the platonic ideal of a technically capable individual, and so I have set out to manifest this idea as a weekend project. As I will describe below, the default state of this is not ideal, and I’ve learned a lot about git, Github, Github Actions, Rmarkdown, Quarto, YAML, and TOML along the way.\nSelf hosting doesn’t literally mean I have set up a server in my office nook or anything so physically present. Self hosting just means I’m using my own html to render the content you see on the webpage before you. But why might that be worth it?\nThe state of online publishing today is a morass, to say the least. Some problems are quotidian, such as not being able to view a blog page without being bombarded with obnoxious popovers asking to log in, subscribe on the platform, or subscribe to the newsletter by email. Worse, the economics of certain high-profile blogging platforms recruiting writers to post their content there for a six-figure salary requires such platforms, in turn, to either monetize charge other, ‘lesser’ subscribers or readers. With leadership that doesn’t recognize how the mass-dissemination of hate speech can be a threat to democracy, platforms can accrue a hate speech problem, and be financially motivated to keep it.\nSelf-hosted blogging side-steps a lot of these problems. By self-hosting, I can craft a good web experience for the reader: no ads and no obnoxious popovers. I can post content without supporting these ethically dubious platforms with more content and more users (which would then be subjected to their recommendation algorithm). Should I devote the time, I could add an RSS feed, which is reminiscent of the time when all publications (aka blogs) were easily available and sync-able and readable as you wish: kind of like how podcasts still are today. (Can we make NetNewsWire relevant again?)\nPlus, Quarto and Hugo makes for a blazing fast-loading website. How cyber-punk is that?!"
  },
  {
    "objectID": "posts/2023_12_29-How_I_host_quarto_blog.html#why-quarto",
    "href": "posts/2023_12_29-How_I_host_quarto_blog.html#why-quarto",
    "title": "How I run and deploy this Quarto blog",
    "section": "Why Quarto",
    "text": "Why Quarto\nWhy would I choose Quarto as the mechanism of munging my writing and coding into a website? Well, the question partly answers itself.\nI write tons of R markdown scripts already. R Markdown is a display wrapper language that allows for the execution of code in “chunks”. It makes for beautiful documents and reports where the code, figures/tables, and descriptions are fully self-contained for reproducible data analysis. The outputs can be useful and beautiful: as simple as a 1-page PDF, or as interactive as a Shiny web application.\nI already have my data-driven resume in R Markdown. So I have some experience manipulating the rendering code to make documents pretty and multi-output compatible (e.g. PDF, Github Markdown, html). And, in theory, these documents should be easily compatible when translated into a website / blog.\nI plan on posting lots of analysis and code, and the outputs. I have been, on occasion, posting these analyses to my github project repos, like for statistics, scRNA-seq, or bulk RNA-seq. Having a proper blog will be a great home to host all these posts together, and their future posts I can even tag them, so readers who are interested in one type can keep focused on posts of that topic.\nQuarto is the next generation of scientific publishing systems, following-up where R Markdown left off. Quarto natively renders to HTML, PDF, MS Word, ePub (all by first passing through Pandoc, one of the most widely-supported markdown system). And Quarto natively supports running Python, R, Julia, and Observable JS code, because yes, contrary to popular belief, I can code in Python. (Also, I may mess around with Observable JS in the future; sounds nice for dashboards and interactive web data explorations.)"
  },
  {
    "objectID": "posts/2023_12_29-How_I_host_quarto_blog.html#deploying-without-weirdness-the-road-less-trodden",
    "href": "posts/2023_12_29-How_I_host_quarto_blog.html#deploying-without-weirdness-the-road-less-trodden",
    "title": "How I run and deploy this Quarto blog",
    "section": "Deploying without weirdness (The road less trodden)",
    "text": "Deploying without weirdness (The road less trodden)\nBut, it turns out, Quarto’s own recommended implementation of a “Quarto Blog” involves some weird git and deploy mechanics. Quarto recommends either rendering the HTML locally and pushing it to git, using the quarto publish shell command, or setting up a GitHub action.\n\nThe “render HTML locally and push” option is not optimal, because it makes for a very large git repo with large changes for even small updates, all of which are generated programmatically from the Quarto code.\nThe quarto publish shell command creates a new branch of the repo to contain the HTML pages (still checking HTML into git), but this branch is never supposed to be merged with the main/HEAD branch. (Furthermore, it cannot be merged, because it is not descended from the main branch, and contains no copies of files in it main branch.)\nThe last option, which is Quarto’s recommended Github Action, still carries out code execution in the Action, requiring a fully copy of the R environment that solves for all possible code/projects run. I got many failures on installing reticulate to the docker image just so I could say print('Hello, world') using Python. Even more annoyingly, Rmarkdown was required to evaluate some code chunks. Both reticulate and Rmarkdown are notoriously difficult and long to install to a new environment.\n\nIan Taylor notes this in his blog post about GitHub actions. So, similarly to Ian, I added execute: freeze: auto lines to this blogs _quarto.yml so that 100% of Quarto would be pre-executed locally on my machine, and only if it changed. And those pre-rendered results are committed to git. Thus, this allows for the Github Action to be very sparse, only requiring an installation of Quarto on the shell PATH. From there, Quarto renders the HTML from the frozen quarto documents, and deploys it to Github Pages with an artifact transfer. The GitHub action takes ~ 45 seconds to deploy the page, and my locally run render takes less than 10 seconds. Nice!\n\nRolling your own\nI learned a lot from this adventure. From troubleshooting those malfunctioning Github Action deploys for so long, it really struck me that for this blog, as is so often the case in life, in the outdoors, and in data science, the road less traveled is sometimes a road more suitable. And with good documentation, it’s not too bad to implement.\n\nprint(\"Hello, world\")\n\n[1] \"Hello, world\"\n\n\n\nprint('Hello, world')\n\nHello, world"
  },
  {
    "objectID": "posts/2024_01_03-GTEX_RNA_seq_liver.html",
    "href": "posts/2024_01_03-GTEX_RNA_seq_liver.html",
    "title": "GTEX RNA-seq Liver-specific Process and TF Identification",
    "section": "",
    "text": "I use the publicly available bulk RNA-Seq data from GTEX (v8) identify biological pathways and processes specific to the liver. I also identify putative transcriptional regulators of these pathways and processes. To ensure that the analysis fits into local memory, I restrict the features in scope to be protein-coding genes, and the tissues in scope to be the following following: heart, kidney, liver, lung, muscle, pancreas, spleen, stomach, pituitary gland, and thyroid.\n\n\nThe GTEx Consortium atlas of genetic regulatory effects across human tissues The Genotype-Tissue Expression (GTEx) project was established to characterize genetic effects on the transcriptome across human tissues and to link these regulatory mechanisms to trait and disease associations.\nI’m interpreting “specific to the liver” to mean uniquely expressed in the liver compared to each other tissue in scope. I will express this in the analysis by running instructing DEseq to run a one-to-many test by ranking liver first among the tissue factors, and then running a p-value meta-analysis on the p-value results for features (protein-coding genes) in all comparisons. (Meaning, it only takes one liver-to-tissue comparison revealing that a gene is NOT up-regulated in the liver to remove that gene from consideration.)\n\n\n\nGiven this is liver RNA-seq, I expect to see genes implicated in the liver main roles, namely:\n\nconditioning the blood by secreting important proteins into it, like serum albumin, immune complement proteins, C-reactive protein, clotting factors (pre-pro-thrombin, fibrinogen, plasminogen), etc.\ncytochrome P450 proteins (CYPxxx), by which the liver catabolizes xenobiotics\nglycolysis, gluconeogenesis, and fatty acid catabolism\nbile salts catabolism and anabolism (cholesterols, hemoglobin/porphyrin)\namino acid conversion and catabolism\n\n\nlibrary(usethis)\nlibrary(readr)                  # for reading and writing csvs\nlibrary(fs)                     # for filesystem navigation in R\nlibrary(dplyr)                  # for dataframe manipulation\nlibrary(tidyr)                  # for dataframe group nesting and manipulation\nlibrary(purrr)                  # for functional programming, including on nested dataframes\nlibrary(readxl)                 # for reading excel files\nlibrary(stringr)                # for efficient string manipulation\nlibrary(magrittr)               # for enhanced pipes\nlibrary(broom)                  # for model manipulation\nlibrary(forcats)                # for factor manipulation\nlibrary(ggplot2)                # for additional plotting features\nlibrary(ensembldb)\nlibrary(DESeq2)\nlibrary(AnnotationDbi)\nlibrary(org.Hs.eg.db)\nlibrary(gage)\nlibrary(pathview)\nlibrary(gageData)\nlibrary(TFEA.ChIP)              # analyze transcription factor enrichment in a gene set\nlibrary(BiocParallel)           # speed up some parallelizeable processing\nregister(MulticoreParam(4))     # set core parallelization to 4 CPU cores\ntheme_set(theme_bw())           # set the default ggplot theme to be clear & cartooney"
  },
  {
    "objectID": "posts/2024_01_03-GTEX_RNA_seq_liver.html#notes-on-approach",
    "href": "posts/2024_01_03-GTEX_RNA_seq_liver.html#notes-on-approach",
    "title": "GTEX RNA-seq Liver-specific Process and TF Identification",
    "section": "",
    "text": "The GTEx Consortium atlas of genetic regulatory effects across human tissues The Genotype-Tissue Expression (GTEx) project was established to characterize genetic effects on the transcriptome across human tissues and to link these regulatory mechanisms to trait and disease associations.\nI’m interpreting “specific to the liver” to mean uniquely expressed in the liver compared to each other tissue in scope. I will express this in the analysis by running instructing DEseq to run a one-to-many test by ranking liver first among the tissue factors, and then running a p-value meta-analysis on the p-value results for features (protein-coding genes) in all comparisons. (Meaning, it only takes one liver-to-tissue comparison revealing that a gene is NOT up-regulated in the liver to remove that gene from consideration.)"
  },
  {
    "objectID": "posts/2024_01_03-GTEX_RNA_seq_liver.html#patricks-hypothesis",
    "href": "posts/2024_01_03-GTEX_RNA_seq_liver.html#patricks-hypothesis",
    "title": "GTEX RNA-seq Liver-specific Process and TF Identification",
    "section": "",
    "text": "Given this is liver RNA-seq, I expect to see genes implicated in the liver main roles, namely:\n\nconditioning the blood by secreting important proteins into it, like serum albumin, immune complement proteins, C-reactive protein, clotting factors (pre-pro-thrombin, fibrinogen, plasminogen), etc.\ncytochrome P450 proteins (CYPxxx), by which the liver catabolizes xenobiotics\nglycolysis, gluconeogenesis, and fatty acid catabolism\nbile salts catabolism and anabolism (cholesterols, hemoglobin/porphyrin)\namino acid conversion and catabolism\n\n\nlibrary(usethis)\nlibrary(readr)                  # for reading and writing csvs\nlibrary(fs)                     # for filesystem navigation in R\nlibrary(dplyr)                  # for dataframe manipulation\nlibrary(tidyr)                  # for dataframe group nesting and manipulation\nlibrary(purrr)                  # for functional programming, including on nested dataframes\nlibrary(readxl)                 # for reading excel files\nlibrary(stringr)                # for efficient string manipulation\nlibrary(magrittr)               # for enhanced pipes\nlibrary(broom)                  # for model manipulation\nlibrary(forcats)                # for factor manipulation\nlibrary(ggplot2)                # for additional plotting features\nlibrary(ensembldb)\nlibrary(DESeq2)\nlibrary(AnnotationDbi)\nlibrary(org.Hs.eg.db)\nlibrary(gage)\nlibrary(pathview)\nlibrary(gageData)\nlibrary(TFEA.ChIP)              # analyze transcription factor enrichment in a gene set\nlibrary(BiocParallel)           # speed up some parallelizeable processing\nregister(MulticoreParam(4))     # set core parallelization to 4 CPU cores\ntheme_set(theme_bw())           # set the default ggplot theme to be clear & cartooney"
  },
  {
    "objectID": "posts/2024_01_03-GTEX_RNA_seq_liver.html#filter-sample-table-to-our-scoped-tissue-types",
    "href": "posts/2024_01_03-GTEX_RNA_seq_liver.html#filter-sample-table-to-our-scoped-tissue-types",
    "title": "GTEX RNA-seq Liver-specific Process and TF Identification",
    "section": "Filter sample table to our scoped tissue types",
    "text": "Filter sample table to our scoped tissue types\n\ngtex_samples_filtered &lt;- gtex_samples %&gt;%\n  dplyr::filter(tissue_id %in% tissue_keep) %&gt;%\n  # on the next line, set order of factors with liver first\n  mutate(\"tissue_id\" = fct_relevel(as_factor(tissue_id), tissue_keep) )\ndplyr::count(gtex_samples_filtered)\n\n     n\n1 4421\n\n\n4421 / 17382 = .254 . We are keeping ~ 25% of samples that were in GTEx v8.\n\ngtex_samples_filtered %&gt;%\n  dplyr::count(tissue_id) %&gt;%\n  mutate(\"percent\" = signif(n / sum(n) * 100, digits = 2)) %&gt;%\n  arrange(desc(n))\n\n                tissue_id   n percent\n1         Muscle_Skeletal 803   18.00\n2                 Thyroid 653   15.00\n3                    Lung 578   13.00\n4    Heart_Left_Ventricle 432    9.80\n5  Heart_Atrial_Appendage 429    9.70\n6                 Stomach 359    8.10\n7                Pancreas 328    7.40\n8               Pituitary 283    6.40\n9                  Spleen 241    5.50\n10                  Liver 226    5.10\n11          Kidney_Cortex  85    1.90\n12         Kidney_Medulla   4    0.09"
  },
  {
    "objectID": "posts/2024_01_03-GTEX_RNA_seq_liver.html#import-the-related-bulk-rnaseq-counts",
    "href": "posts/2024_01_03-GTEX_RNA_seq_liver.html#import-the-related-bulk-rnaseq-counts",
    "title": "GTEX RNA-seq Liver-specific Process and TF Identification",
    "section": "Import the related bulk RNAseq counts",
    "text": "Import the related bulk RNAseq counts\nBulk RNAseq gct files came from: https://www.gtexportal.org/home/downloads/adult-gtex\nI’ll use read counts because that’s what DEseq2’s statistical modeling requires. Unzip it first:\n\ncd ..\ngunzip *.gz\n\n\nrna_counts &lt;- read.delim(\"../../bulk-gex_v8_rna-seq_GTEx_Analysis_2017-06-05_v8_RNASeQCv1.1.9_gene_reads.gct\",\n                         sep = \"\\t\", skip = 2) %&gt;%\n  tibble::column_to_rownames(var = \"Name\")\n\n\nTroubleshoot filtering samples/matrix columns\n\nrna_counts_cols &lt;- colnames(rna_counts)\n\n\nlength(gtex_samples_filtered[['sample_id']] %in% rna_counts_cols)\n\n[1] 4421\n\n\n\nanti_join(gtex_samples_filtered, as_tibble(rna_counts_cols),\n          by = c(\"sample_id\" = \"value\"))\n\n[1] sample_id    donor_id     has_genotype tissue_id   \n&lt;0 rows&gt; (or 0-length row.names)\n\n\n0 is the desired outcome of an anti-join.\n\nrna_counts_filtered &lt;- rna_counts %&gt;%\n  dplyr::select(gtex_samples_filtered[['sample_id']]) %&gt;%\n  as.matrix()\n\n\ndim(rna_counts_filtered)\n\n[1] 56200  4421\n\n\nGreat: filtering went correctly. The dashes-to-periods issue was irksome. We have y = 4421 samples, and 56200 features.\n\nall(gtex_samples_filtered[['sample_id']] %in% colnames(rna_counts_filtered))\n\n[1] TRUE\n\n\n\nall(gtex_samples_filtered[['sample_id']] == colnames(rna_counts_filtered))\n\n[1] TRUE\n\n\nGreat, we are good to continue to DEseq2 DESeqDataSet"
  },
  {
    "objectID": "posts/2024_01_03-GTEX_RNA_seq_liver.html#filter-features-to-protein-coding-genes",
    "href": "posts/2024_01_03-GTEX_RNA_seq_liver.html#filter-features-to-protein-coding-genes",
    "title": "GTEX RNA-seq Liver-specific Process and TF Identification",
    "section": "Filter features to protein-coding genes",
    "text": "Filter features to protein-coding genes\nplease restrict your analyses to protein-coding genes and the following tissues:\n\nkeytypes(org.Hs.eg.db)\n\n [1] \"ACCNUM\"       \"ALIAS\"        \"ENSEMBL\"      \"ENSEMBLPROT\"  \"ENSEMBLTRANS\"\n [6] \"ENTREZID\"     \"ENZYME\"       \"EVIDENCE\"     \"EVIDENCEALL\"  \"GENENAME\"    \n[11] \"GENETYPE\"     \"GO\"           \"GOALL\"        \"IPI\"          \"MAP\"         \n[16] \"OMIM\"         \"ONTOLOGY\"     \"ONTOLOGYALL\"  \"PATH\"         \"PFAM\"        \n[21] \"PMID\"         \"PROSITE\"      \"REFSEQ\"       \"SYMBOL\"       \"UCSCKG\"      \n[26] \"UNIPROT\"     \n\n\n\nensgs_to_filter &lt;- tibble(\"ENSG\" = dimnames(rna_counts_filtered)[[1]])\n\n\nensgs_filtered_protein &lt;- ensgs_to_filter %&gt;%\n  mutate(\"short_ensg\" = str_remove(ENSG, \"(?&lt;=ENSG\\\\d{1,14})\\\\.{0,1}\\\\d{0,3}$\"),\n         \"genetype\" = mapIds(org.Hs.eg.db,\n                           keys = short_ensg,\n                           column = \"GENETYPE\",\n                           keytype = \"ENSEMBL\",\n                           multiVals = \"first\"))\n\n'select()' returned 1:many mapping between keys and columns\n\ndplyr::count(ensgs_filtered_protein, genetype) %&gt;% arrange(desc(n))\n\n# A tibble: 10 × 2\n   genetype           n\n   &lt;chr&gt;          &lt;int&gt;\n 1 &lt;NA&gt;           21144\n 2 protein-coding 19198\n 3 pseudo          8918\n 4 ncRNA           5820\n 5 snoRNA           654\n 6 other            368\n 7 snRNA             75\n 8 rRNA              20\n 9 scRNA              2\n10 unknown            1\n\nensgs_filtered_protein &lt;- dplyr::filter(ensgs_filtered_protein, genetype == \"protein-coding\")\n\nActually apply the filter below\n\nrna_counts_filtered &lt;- rna_counts_filtered[ensgs_filtered_protein[[1]], ]\ndim(rna_counts_filtered)\n\n[1] 19198  4421\n\n\n\nNumber of features\n\ndplyr::count(ensgs_to_filter)[[1]]\n\n[1] 56200\n\n\n19184/56200 = 34%, so we are keeping 34% of features in the counts matrix, because ENSEMBL annotates them as protein-coding. Thus we are jettisoning 66% of features as being non-protein coding. What the ENCODE db indicates is that annotated ENCODE entries are the most common, followed by pseudo, ncRNA, snoRNA, “other,” snRNA, rRNA, scRNA, and “unknown.”"
  },
  {
    "objectID": "posts/2024_01_03-GTEX_RNA_seq_liver.html#prepare-data-object-for-deseq2",
    "href": "posts/2024_01_03-GTEX_RNA_seq_liver.html#prepare-data-object-for-deseq2",
    "title": "GTEX RNA-seq Liver-specific Process and TF Identification",
    "section": "Prepare data object for DEseq2",
    "text": "Prepare data object for DEseq2\n\ntissue_DE &lt;- DESeqDataSetFromMatrix(countData = rna_counts_filtered,\n                              colData = gtex_samples_filtered,\n                              design = ~ tissue_id)\ntissue_DE\n\nclass: DESeqDataSet \ndim: 19198 4421 \nmetadata(1): version\nassays(1): counts\nrownames(19198): ENSG00000186092.4 ENSG00000187634.11 ...\n  ENSG00000198695.2 ENSG00000198727.2\nrowData names(0):\ncolnames(4421): GTEX.1117F.0426.SM.5EGHI GTEX.1117F.0726.SM.5GIEN ...\n  GTEX.ZZPU.1426.SM.5GZZ6 GTEX.ZZPU.2626.SM.5E45Y\ncolData names(4): sample_id donor_id has_genotype tissue_id\n\n\n\nFilter for minimum counts\nFilter for features (genes) where there are less than 113 or more samples with normalized counts greater than or equal to 5. (113 is half the number of liver samples in the data, allowing for at least some dispersion in at least among the samples of the tissue type we want to understand.)\n\ntissue_DE &lt;- estimateSizeFactors(tissue_DE)\nidx &lt;- rowSums( counts(tissue_DE, normalized = TRUE) &gt;= 5 ) &gt;= 113\n\n\ntissue_DE &lt;- tissue_DE[idx,]\ndim(tissue_DE)\n\n[1] 18023  4421\n\n\n\n(56200-33387);\n\n[1] 22813\n\n(56200-33387)/56200\n\n[1] 0.4059253\n\n(19184-18013)/19184\n\n[1] 0.06104045\n\n\nOriginally, when filtering for features with a minimum number of counts over the minimum number of genes, I filtered out 22,813 (40.6%) based on low counts / coverage. However, now the I’m filtering genes for counts after filtering for protein coding genes, only 6.1% of features are dropped. This difference in proportionality indicates that low count features and protein coding genes are not necessarily independent. In fact, the non-protein-coding features were enriched for low expression levels across many of the samples."
  },
  {
    "objectID": "posts/2024_01_03-GTEX_RNA_seq_liver.html#run-deseq2-analysis-1",
    "href": "posts/2024_01_03-GTEX_RNA_seq_liver.html#run-deseq2-analysis-1",
    "title": "GTEX RNA-seq Liver-specific Process and TF Identification",
    "section": "Run DEseq2 analysis",
    "text": "Run DEseq2 analysis\n\nrm(gtex_samples, gtex_samples_filtered, rna_counts_filtered, rna_counts)\n\n\ntissue_DE &lt;- DESeq(tissue_DE)\n\nusing pre-existing size factors\n\n\nestimating dispersions\n\n\ngene-wise dispersion estimates\n\n\nmean-dispersion relationship\n\n\nfinal dispersion estimates\n\n\nfitting model and testing\n\n\n-- replacing outliers and refitting for 237 genes\n-- DESeq argument 'minReplicatesForReplace' = 7 \n-- original counts are preserved in counts(dds)\n\n\nestimating dispersions\n\n\nfitting model and testing\n\n\n\ncontrasts_no_intercept &lt;- resultsNames(tissue_DE)[2:length(resultsNames(tissue_DE))]\ncontrasts_no_intercept\n\n [1] \"tissue_id_Heart_Left_Ventricle_vs_Liver\"  \n [2] \"tissue_id_Heart_Atrial_Appendage_vs_Liver\"\n [3] \"tissue_id_Kidney_Cortex_vs_Liver\"         \n [4] \"tissue_id_Kidney_Medulla_vs_Liver\"        \n [5] \"tissue_id_Lung_vs_Liver\"                  \n [6] \"tissue_id_Muscle_Skeletal_vs_Liver\"       \n [7] \"tissue_id_Pancreas_vs_Liver\"              \n [8] \"tissue_id_Spleen_vs_Liver\"                \n [9] \"tissue_id_Stomach_vs_Liver\"               \n[10] \"tissue_id_Pituitary_vs_Liver\"             \n[11] \"tissue_id_Thyroid_vs_Liver\"               \n\n\n\nExtract all contrast data from DEseq\n\ncombine_contrast_results &lt;- function(deseq_obj){\n  \n  contrasts_no_intercept &lt;- resultsNames(deseq_obj)[2:length(resultsNames(deseq_obj))]\n  \n  bind_rows(purrr::map(contrasts_no_intercept, ~ mutate(\n    tibble::rownames_to_column(as.data.frame(results(deseq_obj, name = .x)),\n                               \"ENSG\"),\n    \"contrast\" = .x)\n    )\n  )\n}\n\n\ntissue_DE_results_long &lt;- combine_contrast_results(tissue_DE) %&gt;%\n  mutate(\"contrast\" = str_remove(contrast, \"^tissue_id_\"))\n\ndplyr::count(tissue_DE_results_long, contrast)\n\n                          contrast     n\n1  Heart_Atrial_Appendage_vs_Liver 18023\n2    Heart_Left_Ventricle_vs_Liver 18023\n3           Kidney_Cortex_vs_Liver 18023\n4          Kidney_Medulla_vs_Liver 18023\n5                    Lung_vs_Liver 18023\n6         Muscle_Skeletal_vs_Liver 18023\n7                Pancreas_vs_Liver 18023\n8               Pituitary_vs_Liver 18023\n9                  Spleen_vs_Liver 18023\n10                Stomach_vs_Liver 18023\n11                Thyroid_vs_Liver 18023"
  },
  {
    "objectID": "posts/2024_01_03-GTEX_RNA_seq_liver.html#prepare-data-with-additional-annotations",
    "href": "posts/2024_01_03-GTEX_RNA_seq_liver.html#prepare-data-with-additional-annotations",
    "title": "GTEX RNA-seq Liver-specific Process and TF Identification",
    "section": "Prepare data with additional annotations",
    "text": "Prepare data with additional annotations\n\nCheck if ENSG string manipulation prodcuces unique values\n\ndplyr::count(as_tibble(str_remove(row.names(tissue_DE_results_long),\n           \"(?&lt;=ENSG\\\\d{1,14})\\\\.{0,1}\\\\d{0,3}$\")), value) %&gt;%\n  dplyr::count(n);\n\n# A tibble: 1 × 2\n      n     nn\n  &lt;int&gt;  &lt;int&gt;\n1     1 198253\n\ndplyr::count(as_tibble(row.names(tissue_DE_results_long)), value) %&gt;%\n  dplyr::count(n)\n\n# A tibble: 1 × 2\n      n     nn\n  &lt;int&gt;  &lt;int&gt;\n1     1 198253\n\n\n\ntissue_DE_results_long &lt;- tissue_DE_results_long %&gt;%\n  mutate(\"short_ensg\" = str_remove(ENSG, \"(?&lt;=ENSG\\\\d{1,14})\\\\.{0,1}\\\\d{0,3}$\"),\n         \"symbol\" = mapIds(org.Hs.eg.db,\n                           keys = short_ensg,\n                           column = \"SYMBOL\",\n                           keytype = \"ENSEMBL\",\n                           multiVals = \"first\"),\n         \"entrez\" = mapIds(org.Hs.eg.db,\n                           keys = short_ensg,\n                           column = \"ENTREZID\",\n                           keytype = \"ENSEMBL\",\n                           multiVals = \"first\"),\n         \"name\" = mapIds(org.Hs.eg.db,\n                         keys = short_ensg,\n                         column = \"GENENAME\",\n                         keytype = \"ENSEMBL\",\n                         multiVals = \"first\")\n         )\n\n'select()' returned 1:many mapping between keys and columns\n'select()' returned 1:many mapping between keys and columns\n'select()' returned 1:many mapping between keys and columns\n\n\n\n\nFurther explore the contrasts\n\ntop_10_hits_summary &lt;- tissue_DE_results_long %&gt;%\n  mutate(\"log2FoldChange\" = -1*log2FoldChange) %&gt;%\n  group_by(contrast) %&gt;%\n  arrange(stat, log2FoldChange) %&gt;%\n  slice_head(n = 10) %&gt;%\n  relocate(\"contrast\", \"short_ensg\", \"symbol\", \"entrez\", \"name\", \"log2FoldChange\")\n\ntop_10_hits_summary %&gt;% dplyr::select(\"contrast\", \"symbol\", \"name\", \"log2FoldChange\")\n\n# A tibble: 110 × 4\n# Groups:   contrast [11]\n   contrast                        symbol  name                   log2FoldChange\n   &lt;chr&gt;                           &lt;chr&gt;   &lt;chr&gt;                           &lt;dbl&gt;\n 1 Heart_Atrial_Appendage_vs_Liver SLC27A5 solute carrier family…           7.77\n 2 Heart_Atrial_Appendage_vs_Liver RDH16   retinol dehydrogenase…           9.76\n 3 Heart_Atrial_Appendage_vs_Liver SLC22A1 solute carrier family…          11.8 \n 4 Heart_Atrial_Appendage_vs_Liver CYP2E1  cytochrome P450 famil…          11.5 \n 5 Heart_Atrial_Appendage_vs_Liver ASGR1   asialoglycoprotein re…          10.1 \n 6 Heart_Atrial_Appendage_vs_Liver CYP2D6  cytochrome P450 famil…           8.74\n 7 Heart_Atrial_Appendage_vs_Liver CPS1    carbamoyl-phosphate s…           8.98\n 8 Heart_Atrial_Appendage_vs_Liver APOM    apolipoprotein M                 7.20\n 9 Heart_Atrial_Appendage_vs_Liver ATF5    activating transcript…           7.22\n10 Heart_Atrial_Appendage_vs_Liver MST1    macrophage stimulatin…           7.25\n# ℹ 100 more rows\n\n\nThis is looking promising. When sorted by statistic and the top ten genes are displayed from each tissue, there are many common genes that are relatively up-regulated (in mRNA expression) in liver compared to each of the other tissues. SLC27A5 is very commonly (and very strongly) up-regulated in liver; RDH16 and CPS1 are as well.\n\n\nMA Plot (analysis QC)\n\nma_plot &lt;- tissue_DE_results_long %&gt;%\n  ggplot(aes(y = log2FoldChange, x = baseMean)) +\n  geom_point(alpha = 0.1, size = .1) +\n  geom_density_2d() +\n  stat_smooth(formula = y ~ x, method = lm, color = \"yellow\", linewidth = 0.3) +\n  scale_x_log10() +\n  labs(title = \"MA-plot: a scatter plot of log2 fold changes\",\n       x = \"mean of normalized counts\",\n       y = \"log2 fold change\") +\n  facet_wrap(~ contrast)\nma_plot\n\n\n\n\n\n\n\n\nFor all contrasts, the data points (gene IDs) are roughly symmetric around the x-axis (indicating no systematic bias), and the majority are close to the x-axis, indicating many genes are not differentially expressed.\n\nma_hist &lt;- tissue_DE_results_long %&gt;%\n  ggplot(aes(log2FoldChange)) +\n  geom_histogram(binwidth = 1) +\n  labs(title = \"MA-plot: histogram of log2 fold changes\",\n       y = \"number of genes\",\n       x = \"log2 fold change\") +\n  facet_wrap(~ contrast)\nma_hist\n\n\n\n\n\n\n\n\n\nma_hist_stats &lt;- tissue_DE_results_long %&gt;%\n  group_by(contrast) %&gt;%\n  dplyr::summarize(\"mean log2FoldChange\" = mean(log2FoldChange),\n                   \"S.D. log2FoldChange\" = sd(log2FoldChange),\n                   \"n features\" = n())\nma_hist_stats\n\n# A tibble: 11 × 4\n   contrast             `mean log2FoldChange` `S.D. log2FoldChange` `n features`\n   &lt;chr&gt;                                &lt;dbl&gt;                 &lt;dbl&gt;        &lt;int&gt;\n 1 Heart_Atrial_Append…               -0.0807                  2.49        18023\n 2 Heart_Left_Ventricl…               -0.160                   2.53        18023\n 3 Kidney_Cortex_vs_Li…                0.120                   2.10        18023\n 4 Kidney_Medulla_vs_L…               -0.0501                  2.29        18023\n 5 Lung_vs_Liver                       0.134                   2.37        18023\n 6 Muscle_Skeletal_vs_…               -0.342                   2.77        18023\n 7 Pancreas_vs_Liver                  -0.0455                  2.21        18023\n 8 Pituitary_vs_Liver                  0.229                   2.69        18023\n 9 Spleen_vs_Liver                    -0.156                   2.36        18023\n10 Stomach_vs_Liver                    0.112                   2.27        18023\n11 Thyroid_vs_Liver                   -0.0922                  2.37        18023\n\n\nAs a clearer summary plot, the histograms for each contrast a preponderance of genes are close to the 0 on the x-axis, indicating many features have limited fold change between samples.\n\nstat_hist &lt;- tissue_DE_results_long %&gt;%\n  ggplot(aes(stat)) +\n  geom_histogram(bins = 40) +\n  labs(title = \"Stat (statistic)\",\n       y = \"number of genes\",\n       x = \"Statistic\") +\n  facet_wrap(~ contrast)\nstat_hist\n\n\n\n\n\n\n\n\nWhile the test statistic outputted by DEseq2 is less “clipped” to zero than the p-values (many of which exhaust the range and get reported as 0.000000e+00), the statistic range/distribution is not the same for all contrasts, notably for the Kidney Medulla vs Liver comparison. This can be explained from the Filter sample table to our scoped tissue types section of this document, which shows the Kidney Medulla GTEx tissue set as having far fewer samples (n = 4) than the other tissue types (mean = 368, sd = 230).\nAs long as we group_by() when ranking, sorting, and otherwise comparing (in long format), this should be okay. Once pivoted into wide format, this can present a problem because not every column of values will be able to react similarly to the same ranking, sorting, or cut-offs."
  },
  {
    "objectID": "posts/2024_01_03-GTEX_RNA_seq_liver.html#summarize-by-feature",
    "href": "posts/2024_01_03-GTEX_RNA_seq_liver.html#summarize-by-feature",
    "title": "GTEX RNA-seq Liver-specific Process and TF Identification",
    "section": "Summarize by feature",
    "text": "Summarize by feature\nWhich is effectively a wide format, appropriate for joining. (Grouped-by calculations in the same column run more efficiently and are easier to program than row-wise multi-column calculations.\n\ntissue_DE_results_feature_summary &lt;- tissue_DE_results_long %&gt;%\n  summarize(across(.cols = c(\"log2FoldChange\", \"stat\"),\n                   .fns = c(\"mean\" = mean, \"sd\" = sd,\n                            \"below_zero_min\" = ~ min( (.x[.x &lt;0]) ) ),\n                   .names = \"{.fn}_{.col}\"),\n            across(.cols = c(\"lfcSE\", \"pvalue\", \"padj\"),\n                   .fns = c(\"mean\" = mean, \"sd\" = sd,\n                            \"min\" = min),\n                   .names = \"{.fn}_{.col}\"),\n            .by = c(\"ENSG\", \"short_ensg\", \"symbol\", \"entrez\", \"name\"))\n\nWarning: There were 4798 warnings in `summarize()`.\nThe first warning was:\nℹ In argument: `across(...)`.\nℹ In group 7: `ENSG = \"ENSG00000188290.10\"`, `short_ensg = \"ENSG00000188290\"`,\n  `symbol = \"HES4\"`, `entrez = \"57801\"`, `name = \"hes family bHLH transcription\n  factor 4\"`.\nCaused by warning in `min()`:\n! no non-missing arguments to min; returning Inf\nℹ Run `dplyr::last_dplyr_warnings()` to see the 4797 remaining warnings.\n\n\nTo explain why I’m contriving these summary statistics, I have to first acknowledge that downstream processing (GO analysis, TF.ChIP) expects continuous data ( e.g. log2FoldChange, adj.p.val) for both the up-regulated and down-regulated features. Thus, in drawing conclusions from the comparisons, I am balancing maintaining continuous variables that can be used later with summary statistics that suggest consistency across all the tissue type comparisons made (and in the case of the highly confident features/genes, these suggestive consistency metrics indicate high levels of agreement).\nThese metrics are the mean_log2FoldChange, sd_log2FoldChange, and the below_zero_min_log2FoldChange, (as well as these versions on stat and padj). Together, these continuous feature summary metrics describe how consistently the metrics are across comparisons (e.g. liver to thyroid, liver to lung, etc.). When a feature is specific to the liver, the mean will be negative and large, the sd will be smaller than the mean, and the min_below_zero will not be far away from the mean. Such an outcome indicates that all the comparisons agree that a gene is specifically up-regulated in the liver compared to all other tissues considered here.\nApplying these summary transformations to the log2FoldChange, pvalue, and padj are reasonable because these metrics either do not depend on the number of samples (log2FoldChange), or account for the number of samples in the condition (pvalue, and padj), explicitly allowing for comparisons between conditions."
  },
  {
    "objectID": "posts/2024_01_03-GTEX_RNA_seq_liver.html#pivot-to-wide",
    "href": "posts/2024_01_03-GTEX_RNA_seq_liver.html#pivot-to-wide",
    "title": "GTEX RNA-seq Liver-specific Process and TF Identification",
    "section": "Pivot to wide",
    "text": "Pivot to wide\n\ntissue_DE_results_wide &lt;- tissue_DE_results_long %&gt;%\n  pivot_wider(id_cols = c(\"ENSG\", \"short_ensg\", \"symbol\", \"entrez\", \"name\"),\n              names_from = \"contrast\",\n              values_from = c(\"baseMean\", \"log2FoldChange\", \"lfcSE\", \"stat\", \"pvalue\", \"padj\")) %&gt;%\n  left_join(tissue_DE_results_feature_summary,\n            by = c(\"ENSG\", \"short_ensg\", \"symbol\", \"entrez\", \"name\")) %&gt;%\n  relocate(short_ensg, mean_log2FoldChange, mean_stat, symbol, name,\n           sd_log2FoldChange, below_zero_min_log2FoldChange, sd_stat, below_zero_min_stat, mean_lfcSE,\n           sd_lfcSE, min_lfcSE, mean_pvalue, sd_pvalue, min_pvalue, mean_padj, sd_padj, min_padj) %&gt;%\n  arrange(mean_padj, mean_log2FoldChange)"
  },
  {
    "objectID": "posts/2024_01_03-GTEX_RNA_seq_liver.html#pathway-analysis",
    "href": "posts/2024_01_03-GTEX_RNA_seq_liver.html#pathway-analysis",
    "title": "GTEX RNA-seq Liver-specific Process and TF Identification",
    "section": "Pathway analysis",
    "text": "Pathway analysis\nwith GAGE\n\nPrepare GAGE’s needed data\n\ndata(kegg.sets.hs)\ndata(sigmet.idx.hs)\nkegg.sets.hs = kegg.sets.hs[sigmet.idx.hs]\n\n\n\nPerpare DEseq2 result for GAGE\n\nfoldchanges = tissue_DE_results_wide$mean_log2FoldChange\nnames(foldchanges) = tissue_DE_results_wide$entrez\nhead(foldchanges)\n\n     10998       8608       1373          1        432       1571 \n -7.601432  -9.367489  -9.478086  -8.152599  -9.564476 -10.454284"
  },
  {
    "objectID": "posts/2024_01_03-GTEX_RNA_seq_liver.html#run-gage",
    "href": "posts/2024_01_03-GTEX_RNA_seq_liver.html#run-gage",
    "title": "GTEX RNA-seq Liver-specific Process and TF Identification",
    "section": "Run GAGE",
    "text": "Run GAGE\n\nkeggres = gage(foldchanges, gsets = kegg.sets.hs, same.dir = TRUE)\n\n\nView Results\nRemember that “down-regulated” (i.e. the “$less” table) is up-regulated in liver, due to the DEseq contrasts.\n\nas.data.frame(head(keggres$less, 20)) %&gt;%\n  dplyr::select(\"p.geomean\", \"stat.mean\", \"p.val\", \"set.size\")\n\n                                                         p.geomean stat.mean\nhsa00830 Retinol metabolism                           2.779302e-15 -9.570937\nhsa00982 Drug metabolism - cytochrome P450            1.480851e-13 -8.552116\nhsa00980 Metabolism of xenobiotics by cytochrome P450 3.742583e-12 -7.909573\nhsa00140 Steroid hormone biosynthesis                 7.829862e-12 -7.983659\nhsa00983 Drug metabolism - other enzymes              3.227821e-11 -7.785412\nhsa04610 Complement and coagulation cascades          1.590346e-10 -7.112879\nhsa00260 Glycine, serine and threonine metabolism     8.543084e-08 -6.071404\nhsa00053 Ascorbate and aldarate metabolism            3.398045e-07 -6.247136\nhsa04146 Peroxisome                                   3.456134e-07 -5.215038\nhsa00071 Fatty acid metabolism                        8.363970e-07 -5.220379\nhsa00040 Pentose and glucuronate interconversions     8.446235e-07 -5.659101\nhsa00860 Porphyrin and chlorophyll metabolism         3.474540e-06 -4.994513\nhsa00500 Starch and sucrose metabolism                5.047958e-06 -4.774060\nhsa00380 Tryptophan metabolism                        1.180799e-05 -4.535570\nhsa00280 Valine, leucine and isoleucine degradation   2.437705e-05 -4.277734\nhsa03320 PPAR signaling pathway                       4.831137e-05 -4.070571\nhsa04976 Bile secretion                               5.608401e-05 -4.037952\nhsa04975 Fat digestion and absorption                 8.538313e-05 -4.013194\nhsa00120 Primary bile acid biosynthesis               1.087369e-04 -4.465205\nhsa00591 Linoleic acid metabolism                     1.465698e-04 -4.016737\n                                                             p.val set.size\nhsa00830 Retinol metabolism                           2.779302e-15       60\nhsa00982 Drug metabolism - cytochrome P450            1.480851e-13       68\nhsa00980 Metabolism of xenobiotics by cytochrome P450 3.742583e-12       66\nhsa00140 Steroid hormone biosynthesis                 7.829862e-12       52\nhsa00983 Drug metabolism - other enzymes              3.227821e-11       48\nhsa04610 Complement and coagulation cascades          1.590346e-10       69\nhsa00260 Glycine, serine and threonine metabolism     8.543084e-08       32\nhsa00053 Ascorbate and aldarate metabolism            3.398045e-07       22\nhsa04146 Peroxisome                                   3.456134e-07       78\nhsa00071 Fatty acid metabolism                        8.363970e-07       43\nhsa00040 Pentose and glucuronate interconversions     8.446235e-07       28\nhsa00860 Porphyrin and chlorophyll metabolism         3.474540e-06       38\nhsa00500 Starch and sucrose metabolism                5.047958e-06       50\nhsa00380 Tryptophan metabolism                        1.180799e-05       42\nhsa00280 Valine, leucine and isoleucine degradation   2.437705e-05       44\nhsa03320 PPAR signaling pathway                       4.831137e-05       70\nhsa04976 Bile secretion                               5.608401e-05       70\nhsa04975 Fat digestion and absorption                 8.538313e-05       44\nhsa00120 Primary bile acid biosynthesis               1.087369e-04       16\nhsa00591 Linoleic acid metabolism                     1.465698e-04       28\n\n\nWhat’s down-regulated in liver compared to other tissues in the scope of our analysis?\n\nas.data.frame(head(keggres$greater, 30)) %&gt;%\n  dplyr::select(\"p.geomean\", \"stat.mean\", \"p.val\", \"set.size\")\n\n                                                            p.geomean stat.mean\nhsa04260 Cardiac muscle contraction                      4.226923e-05 4.0485435\nhsa04510 Focal adhesion                                  8.259292e-05 3.8042688\nhsa04020 Calcium signaling pathway                       4.162904e-04 3.3711847\nhsa04971 Gastric acid secretion                          4.992403e-04 3.3629267\nhsa04540 Gap junction                                    2.260177e-03 2.8795191\nhsa04512 ECM-receptor interaction                        1.063049e-02 2.3255222\nhsa00512 Mucin type O-Glycan biosynthesis                1.216786e-02 2.3178456\nhsa04310 Wnt signaling pathway                           1.365917e-02 2.2195968\nhsa04010 MAPK signaling pathway                          1.744611e-02 2.1151954\nhsa04740 Olfactory transduction                          1.772474e-02 2.1215169\nhsa04144 Endocytosis                                     1.777223e-02 2.1102663\nhsa04360 Axon guidance                                   2.267218e-02 2.0114316\nhsa04810 Regulation of actin cytoskeleton                2.364352e-02 1.9896259\nhsa04070 Phosphatidylinositol signaling system           4.524492e-02 1.7041613\nhsa04742 Taste transduction                              4.633911e-02 1.7021996\nhsa04666 Fc gamma R-mediated phagocytosis                5.200086e-02 1.6354382\nhsa00603 Glycosphingolipid biosynthesis - globo series   5.488970e-02 1.6593014\nhsa04916 Melanogenesis                                   6.589814e-02 1.5133803\nhsa04960 Aldosterone-regulated sodium reabsorption       7.526569e-02 1.4512416\nhsa04970 Salivary secretion                              7.787444e-02 1.4259650\nhsa04966 Collecting duct acid secretion                  9.503669e-02 1.3287755\nhsa04720 Long-term potentiation                          1.029612e-01 1.2717035\nhsa04722 Neurotrophin signaling pathway                  1.100257e-01 1.2305044\nhsa04012 ErbB signaling pathway                          1.306016e-01 1.1275055\nhsa00604 Glycosphingolipid biosynthesis - ganglio series 1.335755e-01 1.1341217\nhsa04730 Long-term depression                            1.385772e-01 1.0911743\nhsa04330 Notch signaling pathway                         1.424131e-01 1.0774613\nhsa04962 Vasopressin-regulated water reabsorption        1.465997e-01 1.0579484\nhsa03010 Ribosome                                        1.579659e-01 1.0084071\nhsa00562 Inositol phosphate metabolism                   1.619384e-01 0.9910218\n                                                                p.val set.size\nhsa04260 Cardiac muscle contraction                      4.226923e-05       76\nhsa04510 Focal adhesion                                  8.259292e-05      200\nhsa04020 Calcium signaling pathway                       4.162904e-04      176\nhsa04971 Gastric acid secretion                          4.992403e-04       73\nhsa04540 Gap junction                                    2.260177e-03       88\nhsa04512 ECM-receptor interaction                        1.063049e-02       84\nhsa00512 Mucin type O-Glycan biosynthesis                1.216786e-02       30\nhsa04310 Wnt signaling pathway                           1.365917e-02      148\nhsa04010 MAPK signaling pathway                          1.744611e-02      262\nhsa04740 Olfactory transduction                          1.772474e-02       97\nhsa04144 Endocytosis                                     1.777223e-02      201\nhsa04360 Axon guidance                                   2.267218e-02      129\nhsa04810 Regulation of actin cytoskeleton                2.364352e-02      209\nhsa04070 Phosphatidylinositol signaling system           4.524492e-02       78\nhsa04742 Taste transduction                              4.633911e-02       43\nhsa04666 Fc gamma R-mediated phagocytosis                5.200086e-02       93\nhsa00603 Glycosphingolipid biosynthesis - globo series   5.488970e-02       14\nhsa04916 Melanogenesis                                   6.589814e-02       99\nhsa04960 Aldosterone-regulated sodium reabsorption       7.526569e-02       42\nhsa04970 Salivary secretion                              7.787444e-02       85\nhsa04966 Collecting duct acid secretion                  9.503669e-02       27\nhsa04720 Long-term potentiation                          1.029612e-01       69\nhsa04722 Neurotrophin signaling pathway                  1.100257e-01      127\nhsa04012 ErbB signaling pathway                          1.306016e-01       87\nhsa00604 Glycosphingolipid biosynthesis - ganglio series 1.335755e-01       15\nhsa04730 Long-term depression                            1.385772e-01       68\nhsa04330 Notch signaling pathway                         1.424131e-01       47\nhsa04962 Vasopressin-regulated water reabsorption        1.465997e-01       43\nhsa03010 Ribosome                                        1.579659e-01       87\nhsa00562 Inositol phosphate metabolism                   1.619384e-01       57\n\n\nNote that the p-values for pathways down-regulated in the liver are less significant than those of pathways up-regulated, likely due to by high dispersion among the comparison tissues.\n\n\nPathway plots\n\nkeggrespathways &lt;- data.frame(id = rownames(keggres$less), keggres$less) %&gt;% \n  as_tibble() %&gt;%\n  dplyr::slice_head(n = 5) %&gt;% \n  .$id %&gt;% \n  as.character() %&gt;%\n  # top 5, plus some pet pathways part of my starting hypothesis\n  append(\"hsa04976 Bile secretion\") %&gt;%\n  append(\"hsa00860 Porphyrin and chlorophyll metabolism\") %&gt;%\n  append(\"hsa00280 Valine, leucine and isoleucine degradation\")\n\nkeggresids = str_sub(keggrespathways, start = 1, end = 8)\n\nkeggrespathways\n\n[1] \"hsa00830 Retinol metabolism\"                          \n[2] \"hsa00982 Drug metabolism - cytochrome P450\"           \n[3] \"hsa00980 Metabolism of xenobiotics by cytochrome P450\"\n[4] \"hsa00140 Steroid hormone biosynthesis\"                \n[5] \"hsa00983 Drug metabolism - other enzymes\"             \n[6] \"hsa04976 Bile secretion\"                              \n[7] \"hsa00860 Porphyrin and chlorophyll metabolism\"        \n[8] \"hsa00280 Valine, leucine and isoleucine degradation\"  \n\n\n\n# Define plotting function for applying later\nplot_pathway &lt;- function(pid) {pathview(gene.data = foldchanges,\n                                        pathway.id = pid, species = \"hsa\", new.signature = FALSE)}\n\n# plot multiple pathways (plots saved to disk and returns a throwaway list object)\ntmp = sapply(keggresids, plot_pathway)\n\nTypically, expression heat maps use the color-blind-unfriendly and unintuitive red for up-regulated expression, and green for decreased expression.\nHowever, here, because I never inverted (multiplied by -1) the log2-fold-change values, green is for increased relative expression, and red is for decreased relative expression.\n\nhsa00830 Retinol metabolism\n\n\n\nhsa00830 Retinol metabolism\n\n\n\n\nhsa00982 Drug metabolism - cytochrome P450\n\n\n\nhsa00982 Drug metabolism - cytochrome P450\n\n\n\n\nhsa00980 Metabolism of xenobiotics by cytochrome P450\n\n\n\nhsa00980 Metabolism of xenobiotics by cytochrome P450\n\n\n\n\nhsa00983 Drug metabolism - other enzymes\n\n\n\nhsa00983 Drug metabolism - other enzymes\n\n\n\n\nhsa00140 Steroid hormone biosynthesis\n\n\n\nhsa00140 Steroid hormone biosynthesis\n\n\n\n\nhsa00983 Drug metabolism - other enzymes\n\n\n\nhsa00983 Drug metabolism - other enzymes\n\n\n\n\nhsa04976 Bile secretion\n\n\n\nhsa04976 Bile secretion\n\n\nThe bile secretion graphic is particularly interesting because it depicts spatial regulation across cell types, and those expectations (hypotheses) are upheld by the bulk RNA-seq data from GTEx. Most hepatocyte genes are up-regulated, whereas most cholangiocyte (epithelial cells of the bile duct) genes are not up-regulated.\n\n\nhsa00860 Porphyrin and chlorophyll metabolism\n\n\n\nhsa00860 Porphyrin and chlorophyll metabolism\n\n\nPorphyrin metabolism is a curious case: not many of the GO term’s genes are up-regulated, and even along a linear pathway, not all the genes in are up-regulated. I am especially surprised to see biliverdin to bilirubin conversion down-regulated relative to the other tissues in this set. Meanwhile, two of bilirubin’s downstream steps are up-regulated."
  },
  {
    "objectID": "posts/2024_01_03-GTEX_RNA_seq_liver.html#chip-transcription-factor-data",
    "href": "posts/2024_01_03-GTEX_RNA_seq_liver.html#chip-transcription-factor-data",
    "title": "GTEX RNA-seq Liver-specific Process and TF Identification",
    "section": "ChIP Transcription Factor data",
    "text": "ChIP Transcription Factor data\n\nchip_index &lt;- get_chip_index(encodeFilter = TRUE)\nDE_CM_chip &lt;- contingency_matrix(genes_upreg, #genes_ctrl,\n                                 chip_index = chip_index)\nDE_CM_chip_stats &lt;- getCMstats(DE_CM_chip, chip_index)\n\n\nTF_ranking &lt;- rankTFs(DE_CM_chip_stats, rankMethod = \"gsea\", makePlot = FALSE)\nTF_ranking %&gt;%\n  mutate(\"is_significant\" = if_else(pVal &lt;= 0.05, TRUE, FALSE)) %&gt;%\n  arrange(desc(is_significant), desc(ES), pVal) %&gt;%\n  slice_head(n = 30)\n\n             TF       ES arg.ES pVal numberOfChIPs is_significant\nFOXA2     FOXA2  0.99125      8 0.00             2           TRUE\nHNF1A     HNF1A  0.97817     16 0.01             1           TRUE\nHNF4G     HNF4G  0.97522     19 0.01             2           TRUE\nNR2F6     NR2F6  0.97234     20 0.03             1           TRUE\nHNF4A     HNF4A  0.96642     26 0.00             3           TRUE\nFOXA1     FOXA1  0.94599     40 0.01             3           TRUE\nNR2F2     NR2F2  0.94015     44 0.00             3           TRUE\nATF3       ATF3  0.76196     11 0.02             6           TRUE\nGABPA     GABPA -0.69893    593 0.04             9           TRUE\nCREB1     CREB1 -0.80579    628 0.03             5           TRUE\nSIN3A     SIN3A -0.81379    654 0.05             5           TRUE\nCHD2       CHD2 -0.86508    618 0.00             5           TRUE\nTBP         TBP -0.87588    608 0.01             4           TRUE\nMAZ         MAZ -0.88623    639 0.05             3           TRUE\nELF1       ELF1 -0.90544    627 0.00             5           TRUE\nCBFB       CBFB -0.95049    660 0.03             2           TRUE\nSMAD5     SMAD5 -0.99854    686 0.00             1           TRUE\nNR5A1     NR5A1  0.95779     30 0.08             1          FALSE\nHHEX       HHEX  0.95488     32 0.11             1          FALSE\nGFI1       GFI1  0.95342     33 0.07             1          FALSE\nONECUT1 ONECUT1  0.94905     36 0.09             1          FALSE\nMBD4       MBD4  0.94614     38 0.10             1          FALSE\nSOX13     SOX13  0.94469     39 0.14             1          FALSE\nPAXIP1   PAXIP1  0.93886     43 0.14             1          FALSE\nFOXJ3     FOXJ3  0.93450     46 0.11             1          FALSE\nFOXP1     FOXP1  0.93294     48 0.07             2          FALSE\nATF4       ATF4  0.92868     50 0.10             1          FALSE\nZNF609   ZNF609  0.92576     52 0.18             1          FALSE\nTHRB       THRB  0.92431     53 0.18             1          FALSE\nMED1       MED1  0.91557     59 0.20             1          FALSE\n\n\n\nTFrank_ES_p_plot &lt;- TF_ranking %&gt;% arrange(desc(ES)) %&gt;%\n  mutate(\"rank\" = row_number()) %&gt;%\n  ggplot(aes(y = ES, x = rank, color = pVal)) +\n  geom_point() +\n  scale_color_viridis_c(option = \"D\") +\n  gghighlight::gghighlight(pVal &lt;= .05, #keep_scales = TRUE,\n                           label_key = TF,\n                           unhighlighted_params = list(color = NULL, fill = NULL,\n                                                       size = 0.3, alpha = .5)) +\n  geom_hline(yintercept = 0, linetype = \"dashed\") +\n  coord_cartesian(ylim = c(-1.25, 1.25)) +\n  #scale_x_continuous(trans = \"log1p\") +\n  labs(title = \"Enrichment score by rank, pVal highlighted\",\n       y = \"Enrighment score\",\n       x = \"Rank\",\n       caption = \"Enrichment score of transcription factors by rank. p-values &lt; .05 are highlighted, other TFs are grey.\")\nTFrank_ES_p_plot\n\n\n\n\n\n\n\n\nNotes on TF_ranking results:\n\nHNF4 (Hepatocyte Nuclear Factor 4) is a nuclear receptor protein mostly expressed in the liver, gut, kidney, and pancreatic beta cells that is critical for liver development.\nForkhead box protein A2 (FOXA2), also known as hepatocyte nuclear factor 3-beta (HNF-3B), is a transcription factor that plays an important role during development\nATF-3 (Cyclic AMP-dependent transcription factor) is an activating member of the mammalian activation transcription factor/cAMP responsive element-binding (CREB) protein family. ATF-3 is induced upon physiological stress in various tissues.\nForkhead box protein A1 (FOXA1), also known as hepatocyte nuclear factor 3-alpha (HNF-3A), is a transcriptional activator for liver-specific transcripts such as albumin and transthyretin, and they also interact with chromatin as a pioneer factor.\nJUND: a functional component of the AP1 transcription factor complex. It has been proposed to protect cells from p53-dependent senescence and apoptosis.\nTAF1 is TFIID subunit 1, a general pol II transcriptional complex component.\nREST: RE1-silencing transcription factor gene encodes a transcriptional repressor which represses neuronal genes in non-neuronal tissues.\nHNF1 homeobox A (hepatocyte nuclear factor 1 homeobox A), also known as HNF1A, is ubiquitously expressed in many tissues and cell types. The protein encoded by this gene is a transcription factor that is highly expressed in the liver and is involved in the regulation of the expression of several liver-specific genes.\n\nThe GSEA option was unhelpful at sorting TFs by the level of evidence to support them (all enrichment scores were 1, and all p-values were 0). Wilcoxon doesn’t make a pretty plot, but it gives us helpful sorting data.\nStill, I’m not impressed by these results. Even with more stringent filtering (log2-fold-change, p-value), I still can’t get a list that looks specific to the liver.\n\nRun GSEA on TFEA.ChIP\n\nGSEA.result[[\"Enrichment.table\"]] %&gt;% dplyr::arrange(`pval.adj`, desc(ES)) %&gt;% slice_head(n = 40) %&gt;%\n  dplyr::select(!c(\"pval.adj\", \"Arg.ES\"))\n\n                    Accession   Cell Treatment      TF      ES p.val\n1     ENCSR297GII.HNF4G.liver  liver             HNF4G 0.54053     0\n2      ENCSR016BMM.TAF1.liver  liver              TAF1 0.49766     0\n3     ENCSR735KEY.FOXA1.liver  liver             FOXA1 0.49263     0\n4   ENCSR000EZP.SREBF1.Hep-G2 Hep-G2            SREBF1 0.48636     0\n5     ENCSR310NYI.FOXA2.liver  liver             FOXA2 0.48343     0\n6     ENCSR324RCI.FOXA1.liver  liver             FOXA1 0.48302     0\n7     ENCSR000BQW.MBD4.Hep-G2 Hep-G2              MBD4 0.47427     0\n8      ENCSR205FOW.ATF3.liver  liver              ATF3 0.47074     0\n9      ENCSR480LIS.ATF3.liver  liver              ATF3 0.47024     0\n10  ENCSR000EVQ.TCF7L2.Hep-G2 Hep-G2            TCF7L2 0.46749     0\n11  ENCSR000EZO.SREBF2.Hep-G2 Hep-G2            SREBF2 0.45675     0\n12   ENCSR516HUP.ZBTB33.liver  liver            ZBTB33 0.45420     0\n13     ENCSR893QWP.REST.liver  liver              REST 0.45235     0\n14    ENCSR080XEY.FOXA2.liver  liver             FOXA2 0.44996     0\n15     ENCSR736BUG.EGR1.liver  liver              EGR1 0.44549     0\n16    ENCSR656JZL.HHEX.Hep-G2 Hep-G2              HHEX 0.44122     0\n17   ENCSR800QIT.HNF1A.Hep-G2 Hep-G2             HNF1A 0.43966     0\n18     ENCSR867WPH.REST.liver  liver              REST 0.43082     0\n19    ENCSR669LCD.ATF4.Hep-G2 Hep-G2              ATF4 0.42999     0\n20    ENCSR000BQX.NFIC.Hep-G2 Hep-G2              NFIC 0.42440     0\n21     ENCSR837GTK.JUND.liver  liver              JUND 0.42418     0\n22     ENCSR196HGZ.JUND.liver  liver              JUND 0.42393     0\n23      ENCSR521IID.MAX.liver  liver               MAX 0.41846     0\n24   ENCSR267DFA.FOXA1.Hep-G2 Hep-G2             FOXA1 0.41741     0\n25 ENCSR887LYD.SMARCC2.Hep-G2 Hep-G2           SMARCC2 0.41697     0\n26     ENCSR290ZOS.EGR1.liver  liver              EGR1 0.40709     0\n27   ENCSR620YNB.KAT2B.Hep-G2 Hep-G2             KAT2B 0.40506     0\n28   ENCSR000BRO.MYBL2.Hep-G2 Hep-G2             MYBL2 0.40453     0\n29   ENCSR345YWJ.ZBTB33.liver  liver            ZBTB33 0.40031     0\n30      ENCSR994YLZ.YY1.liver  liver               YY1 0.39534     0\n31   ENCSR000BVM.NR2F2.Hep-G2 Hep-G2             NR2F2 0.39042     0\n32    ENCSR444LIN.TCF7.Hep-G2 Hep-G2              TCF7 0.38687     0\n33    ENCSR849FVL.GFI1.Hep-G2 Hep-G2              GFI1 0.38592     0\n34   ENCSR029LBT.FOXP1.Hep-G2 Hep-G2             FOXP1 0.38317     0\n35   ENCSR000EEW.ESRRA.Hep-G2 Hep-G2             ESRRA 0.38049     0\n36    ENCSR000BHU.RXRA.Hep-G2 Hep-G2              RXRA 0.37795     0\n37   ENCSR000EEU.HNF4A.Hep-G2 Hep-G2             HNF4A 0.37548     0\n38   ENCSR791AGT.ZNF24.Hep-G2 Hep-G2             ZNF24 0.37417     0\n39   ENCSR413AJG.FOXJ3.Hep-G2 Hep-G2             FOXJ3 0.37378     0\n40     ENCSR000BJX.SP1.Hep-G2 Hep-G2               SP1 0.37328     0\n\n\nThe above table shows that GSEA (in addition to TFEA.ChIP) also returns many liver-implicated transcriptional regulators. The above table is sorted in descending order of effect size (running enrichment score), and also displays the accession ID of the tissue sample that generated the ChIP seq data set. The TFs (transcription factors) can be in the table more than once.\n\nGSEA.result[[\"Enrichment.table\"]] %&gt;% dplyr::count(TF) %&gt;% arrange(desc(n)) %&gt;% slice_head(n = 10)\n\n       TF  n\n1    CTCF 31\n2   EP300 11\n3     MAX 11\n4    JUND 10\n5    REST 10\n6   GABPA  9\n7     MYC  7\n8    TAF1  7\n9  ZBTB33  7\n10   ATF3  6\n\n\nThe above table counts the number of line items for each TF; despite CTCF (a practically ubiquitous transcriptional and chromatin regulator) being so highly represented across data sets, its running effect size was not high enough to make it show up in the top 40 (5.8%) of line items. (Same goes for EP300.)\nWhat this result shows is that the number of ChIP datasets under consideration in this package is not evenly distributed across all potential transcription factors, and so the number of times a transcription factor is identified as a hit is not a good measure of significance or salience."
  },
  {
    "objectID": "posts/2024_03_02-SF_political_support_data.html",
    "href": "posts/2024_03_02-SF_political_support_data.html",
    "title": "San Francisco political support data shows true alignment",
    "section": "",
    "text": "The saying goes “all politics are local,” and San Francisco is no exception.\n\n\nThe website sfendorsements.com has collected and cataloged many of the city’s politically active groups (often Political Action Committees, or PACs) positions on ballot measures and election races for local positions. I hypothesize that these can be used to deduce the true alignment of these organizations.\nPeter Xu has been nice enough to make the code available for sfendorsements.com, and hosts the data in a google sheet that we can easily import for analysis. Marvelous!\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nRace\nSan Francisco Chronicle\nSan Francisco Examiner\nSan Francisco Bay Guardian\n\n\n\n\nHas rationale?\nTRUE\nTRUE\nTRUE\n\n\nWebsite link\nhttps://www.sfchronicle.com/\nhttps://www.sfexaminer.com/\nhttp://www.sfbg.com/\n\n\nLink\nhttps://www.sfchronicle.com/projects/2022/california-voter-guide-june/endorsements/\nhttps://www.sfexaminer.com/our_sections/forum/\nhttps://www.sfbg.com/2022/05/09/endorsements-chesa-boudin-june-7-san-francisco-election/\n\n\nsenator\nAlex Padilla\nNA\nNA\n\n\nhouse11\nNA\nNA\nNA\n\n\n\n\n\n\nGreat, the data are now tidy, where each row is an observation (a political group), and each column is a variable (race / measure).\n\n\n\n\n\n\n\n\nProp name\nSF Elections link\nProp description\n\n\n\n\npropA\nlink\nAuthorize issuing $400 million in bonds and levy a $1/$10,000 property tax until 2050 (not increasing property taxes: this is offset by other bonds are expiring) for Muni and street safety improvements\n\n\npropB\nlink\nChange the appointment process for the Department of Building Inspections so that the mayor directly appoints the Director (instead of a 7-person DBI Commission) and the 7-person Commissions members are a bit more flexibly-appointed by the mayor and the Board of Supervisors\n\n\npropC\nlink\nLimit recalls so that voters can only start a recall petition at least 12 months after start of term and 12 months before the next election (rather than 6 months for each right now), and prevents appointed replacements from running for election\n\n\npropD\nlink\nCreate an office of Victim and Witness Rights to provide or coordinate existing services for victims and witnesses of all crimes, and provide free legal services for domestic violence victims in particular\n\n\npropE\nlink\nPrevent Board of Supervisors members from requesting donations to government entities or non-profits (“behested payments”) from contractors whose business the Board approved\n\n\npropF\nlink\nChange how garbage collection rates (prices) are set: change the 3-member Refuse Rate Board (which sets prices) to replace the City Controller with a Ratepayer Representative (a representative nominated by a ratepayers’ rights nonprofit)\n\n\npropG\nlink\nRequire employers with 100+ employees to provide public health emergency leave of up to 80 hours per year during a public health emergency (declared by local/state officials or when Spare the Air air quality alerts are in effect)\n\n\npropH\nlink\nRecall Chesa Boudin, the District Attorney elected in 2019 and currently scheduled to serve through 2024"
  },
  {
    "objectID": "posts/2024_03_02-SF_political_support_data.html#notes-on-approach",
    "href": "posts/2024_03_02-SF_political_support_data.html#notes-on-approach",
    "title": "San Francisco political support data shows true alignment",
    "section": "",
    "text": "The website sfendorsements.com has collected and cataloged many of the city’s politically active groups (often Political Action Committees, or PACs) positions on ballot measures and election races for local positions. I hypothesize that these can be used to deduce the true alignment of these organizations.\nPeter Xu has been nice enough to make the code available for sfendorsements.com, and hosts the data in a google sheet that we can easily import for analysis. Marvelous!"
  },
  {
    "objectID": "posts/2024_03_02-SF_political_support_data.html#import-and-tidy-data",
    "href": "posts/2024_03_02-SF_political_support_data.html#import-and-tidy-data",
    "title": "San Francisco political support data shows true alignment",
    "section": "",
    "text": "Race\nSan Francisco Chronicle\nSan Francisco Examiner\nSan Francisco Bay Guardian\n\n\n\n\nHas rationale?\nTRUE\nTRUE\nTRUE\n\n\nWebsite link\nhttps://www.sfchronicle.com/\nhttps://www.sfexaminer.com/\nhttp://www.sfbg.com/\n\n\nLink\nhttps://www.sfchronicle.com/projects/2022/california-voter-guide-june/endorsements/\nhttps://www.sfexaminer.com/our_sections/forum/\nhttps://www.sfbg.com/2022/05/09/endorsements-chesa-boudin-june-7-san-francisco-election/\n\n\nsenator\nAlex Padilla\nNA\nNA\n\n\nhouse11\nNA\nNA\nNA\n\n\n\n\n\n\nGreat, the data are now tidy, where each row is an observation (a political group), and each column is a variable (race / measure)."
  },
  {
    "objectID": "posts/2024_03_02-SF_political_support_data.html#analyze-organizations-by-ballot-measures",
    "href": "posts/2024_03_02-SF_political_support_data.html#analyze-organizations-by-ballot-measures",
    "title": "San Francisco political support data shows true alignment",
    "section": "",
    "text": "Prop name\nSF Elections link\nProp description\n\n\n\n\npropA\nlink\nAuthorize issuing $400 million in bonds and levy a $1/$10,000 property tax until 2050 (not increasing property taxes: this is offset by other bonds are expiring) for Muni and street safety improvements\n\n\npropB\nlink\nChange the appointment process for the Department of Building Inspections so that the mayor directly appoints the Director (instead of a 7-person DBI Commission) and the 7-person Commissions members are a bit more flexibly-appointed by the mayor and the Board of Supervisors\n\n\npropC\nlink\nLimit recalls so that voters can only start a recall petition at least 12 months after start of term and 12 months before the next election (rather than 6 months for each right now), and prevents appointed replacements from running for election\n\n\npropD\nlink\nCreate an office of Victim and Witness Rights to provide or coordinate existing services for victims and witnesses of all crimes, and provide free legal services for domestic violence victims in particular\n\n\npropE\nlink\nPrevent Board of Supervisors members from requesting donations to government entities or non-profits (“behested payments”) from contractors whose business the Board approved\n\n\npropF\nlink\nChange how garbage collection rates (prices) are set: change the 3-member Refuse Rate Board (which sets prices) to replace the City Controller with a Ratepayer Representative (a representative nominated by a ratepayers’ rights nonprofit)\n\n\npropG\nlink\nRequire employers with 100+ employees to provide public health emergency leave of up to 80 hours per year during a public health emergency (declared by local/state officials or when Spare the Air air quality alerts are in effect)\n\n\npropH\nlink\nRecall Chesa Boudin, the District Attorney elected in 2019 and currently scheduled to serve through 2024"
  }
]
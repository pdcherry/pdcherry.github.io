[
  {
    "objectID": "Patrick-Cherry-resume.html",
    "href": "Patrick-Cherry-resume.html",
    "title": "CV of Patrick Cherry, PhD",
    "section": "",
    "text": "Download resume version as pdf"
  },
  {
    "objectID": "Patrick-Cherry-resume.html#contact",
    "href": "Patrick-Cherry-resume.html#contact",
    "title": "CV of Patrick Cherry, PhD",
    "section": "Contact",
    "text": "Contact\n\n pcherry [at] pm dot me\n upon request\n Senior Scientist | Oncology\n BillionToOne\n San Francisco, California\n pdcherry.github.io\n github.com/pdcherry\n linkedin.com/in/p-cherry\n United States Citizen\n\n\nLast updated on 2025-02-04.\nData-driven résumé made in R using Quarto."
  },
  {
    "objectID": "Patrick-Cherry-resume.html#industry-experience",
    "href": "Patrick-Cherry-resume.html#industry-experience",
    "title": "CV of Patrick Cherry, PhD",
    "section": " Industry Experience",
    "text": "Industry Experience\n\n\nI currently split my time between wet lab and computational activities. I have worked in a variety of roles ranging from HTP strain onboarding to genomics scientist. I like collaborative environments where I can learn from my peers and in turn teach others.\n\nSenior Scientist, Oncology\nBillionToOne, Inc.\nMenlo Park, California\nCurrent - Sep 2024\n\nDesigned and implemented multiplexed amplicon NGS assay with Bioconductor NCBI tools and primer3 primer selection; generated 500+ automated ddPCR designs with pipeline in snakemake using s3 database of variant data.\nInformed key product decisions with analyses using PostgreSQL and s3 data sources and linear mixed-effects modeling\nCirculated internal research reports on Notion written in Quarto notebooks with reproducible Python and R code.\n\n\n\nSenior Scientist, Genomics\nTwist Bioscience, Inc.\nSouth San Francisco, California\nApr 2024 - Dec 2021\n\nInvented and introduced multiple new products to market, yielding $1M+ in new revenue as Tech Lead, including: Pan-cancer cfDNA (v1 & v2), CNV Controls, RNA Fusion Controls, Fragmentome Controls, RNA-seq, and primer / adapter removal methods for highly-multiplexed dsDNA pools\nAnswered biological and business questions with DoE and data analysis using R and the libraries: dplyr, dbplyr, DBI, purrr, ggplot2, Bioconductor, DEseq2, Seurat, tidymodels, glm, nls, lme4, AlgDesign, and more\nWrote and published reports in Rmarkdown and LaTeX. Edited and maintained production QC pipelines with automated reporting using Python and the libraries: NumPy, pandas, polars, seaborn, statsmodels, biopython, pybedtools, pysam, vcfpy, scanpy, Jinja2 (with CSS), WeasyPrint, and others\nMaintained production code (git version control with code review) with CD (github actions); operated in high-performance compute environment aws s3 and Databricks using Unix shell / bash tools, like ssh, STAR-fusion, GATK, BaseSpace CLI, bwa, bedtools, samtools, vcftools, UMI-tools/fgbio; Confluence documentation\nAuthored internal R package “twistcolorpal” on Github with help files to help scientists style plots to Twist branding\nAnswered production and business questions with original SQL queries for Snowflake-based database\n\n\n\nScientist I, NGS Core & Strain-Build Process Development\nZymergen, Inc.\nEmeryville, California\nJan 2021 - Apr 2019\n\nBoosted NGS Core genotyping success by 45% using DoE experimentation, data-driven decision-making, and teaching; Guided demanding and diverse internal customers on complex NGS experiments\nBuilt and disseminated Rmarkdown and JMP statistical templates for autonomous NGS data exploration\nCoded plasmid and strain build and QC experiments using Zymergen’s alembic Python API to LIMS database\nRendered strain build and plasmid build reports from LIMS SQL database in MySQL and R / ggplot"
  },
  {
    "objectID": "Patrick-Cherry-resume.html#education",
    "href": "Patrick-Cherry-resume.html#education",
    "title": "CV of Patrick Cherry, PhD",
    "section": " Education",
    "text": "Education\n\nPhD in Molecular Biology\nUniversity of Colorado School of Medicine\nAurora/Denver, Colorado\nApr 2019 - Aug 2013\n\nPh.D. in Molecular Biology. Advisor: Jay Hesselberth, PhD\nThesis: RNA terminus chemistry potentiates decay events targeting HAC1 mRNA during the Unfolded Protein Response\nKey courses: BIOS 6606 Statistics; MOLB 7621 Genome Analysis Workshop.\n\n\n\nBA in Molecular Biology with Distinction, minor in Mathematics\nHendrix College\nConway, Arkansas\nMay 2013 - Aug 2009\n\nSenior Capstone Project showing changes of key stress response gene expression to oxidative stress in liver cells\nKey courses: Probability & Statistics; Discrete Mathematics; Adv Biological Chemistry, Analytical Chemistry"
  },
  {
    "objectID": "Patrick-Cherry-resume.html#research-experience",
    "href": "Patrick-Cherry-resume.html#research-experience",
    "title": "CV of Patrick Cherry, PhD",
    "section": " Research Experience",
    "text": "Research Experience\n\n\nI worked on a few projects during my PhD, and the RNA repair project led me to custom 5′-OH RNA-seq libraries, which inspired my fascination with transcriptomics and bioinformatics.\n\nDoctoral Research\nUniversity of Colorado School of Medicine\nAurora/Denver, Colorado\nApr 2019 - May 2014\n\nWrote, revised, & published two academic papers on RNA repair & yeast genetics\nEngineered and characterized genetic bypass of essential genes in budding yeast; on-boarded CRISPR/Cas9 for efficient and precise gene knock-in and scarless knock-out\nPerformed RNA-seq analysis with bowtie2 on departmental cluster using bjobs and visualization in R-Studio server\nOptimized custom RNA-seq library protocol; independently planned, executed, troubleshooted RNA modification detection\nRoutinely conducted northern blotting, targeted depletion, primer extension, splinted ligation, and other esoteric DNA and RNA experiments\n\n\n\nUndergraduate Research Assistant\nLab of Dr. Andres Caro, Hendrix College\nConway, Arkansas\nJan 2013 - Jan 2012\n\n\nSummer Undergraduate Research Fellowship\nLab of Dr. Michael Shiloh, UT Southwestern Medical Center\nDallas, Texas\nJan 2012 - Jan 2012\n\n\nResearch Assistant\nLab of Dr. Joy Sturtevant, Louisiana Health Sciences Center\nNew Orleans, Louisiana\nJan 2011 - Jan 2010"
  },
  {
    "objectID": "Patrick-Cherry-resume.html#intellectual-property",
    "href": "Patrick-Cherry-resume.html#intellectual-property",
    "title": "CV of Patrick Cherry, PhD",
    "section": " Intellectual Property",
    "text": "Intellectual Property\n\n\nWorking at Twist and Zymergen on new product research requires confidentiality, but public evidence of accomplishments often comes in patent applications. The Legal teams know me well for being a helpful expert in the process.\n\nMethylation-mediated adapter removal on nucleic acid sequences\nTwist Bioscience\nSouth San Francisco, California\nMar 2023\n\nUS 63-317,466\n\n\n\nExpansion of cfDNA for Libraries\nTwist Bioscience\nSouth San Francisco, California\nNov 2021\n\nUS Prov. Pat. Ref No 823.102\n\n\n\nLibraries for mutational analysis\nTwist Bioscience\nSouth San Francisco, California\nApr 2021\n\nUS Prov. Pat. Ref No 823.101\nConfiguration and fabrication of synthetic DNA & RNA reference standards and synthetic variant sequences\n\n\n\nMethod for counterselection in microorganisms\nZymergen, Inc.\nEmeryville, California\nMar 2021\n\nUS 2021_0087586 A1\nDemonstration of novel counterselection mechanism in non-model Bacillus microbe for genetic modification"
  },
  {
    "objectID": "Patrick-Cherry-resume.html#publications",
    "href": "Patrick-Cherry-resume.html#publications",
    "title": "CV of Patrick Cherry, PhD",
    "section": " Publications",
    "text": "Publications\n\n\nI communicate my results clearly, both in writing and in live presentations. I enjoy writing research papers, but my career has required more tech notes and app notes recently.\n\nTwist cfDNA Pan-Cancer Reference Standard v2 Technical Guidance\nTwist Bioscience Product Sheet & FAQ\nSouth San Francisco, California\nJan 2024\n\nPatrick Cherry, Lydia Bonar, & Mike Bocek\n\n\n\nCharacteristics and specificity of the wild-type / 0% VAF reference material\nTwist Bioscience\nSouth San Francisco, California\nApr 2022\n\nPatrick Cherry & Mike Bocek\n\n\n\nTwist Pan-cancer synthetic reference materials technical guide (deprecated)\nTwist Bioscience\nSouth San Francisco, California\nDec 2021\n\nPatrick Cherry & Mike Bocek\n\n\n\nMultiple decay events target HAC1 mRNA during splicing to regulate the unfolded protein response\neLife\nAurora/Denver, Colorado\nMar 2019\n\nCherry, P., Peach, S., & Hesselberth, J.\n\n\n\nGenetic bypass of essential RNA repair enzymes in budding yeast\nRNA\nAurora/Denver, Colorado\nDec 2017\n\nCherry, P., White, L., York, K., & Hesselberth, J."
  },
  {
    "objectID": "Patrick-Cherry-resume.html#presentations-talks",
    "href": "Patrick-Cherry-resume.html#presentations-talks",
    "title": "CV of Patrick Cherry, PhD",
    "section": " Presentations & Talks",
    "text": "Presentations & Talks\n\n\nI give audience-centered presentations by adapting on the fly and over time to the venue and occasion. I like to transfer knowledge by giving methods/best practices talks whose slides can also serve as documentation.\n\nTwist pan-cancer reference standard V2: Enhanced precision and reduced errors in ctDNA analysis\nAdvances in Genome Biology and Technology, Twist Bioscience\nOrlando, Florida\nFeb 2024\n\nLydia Bonar, Patrick Cherry, Michael Bocek, Shawn Gorda, Derek Murphy, and Esteban Toro\n\n\n\nHigh sensitivity detection of specific ultra low-frequency somatic mutations for minimal residual disease (MRD) monitoring\nInternational Society of Liquid Biopsy Annual Congress, Twist Bioscience\nMadrid, Spain\nNov 2023\n\nTina Han, Tong Liu, Michael Bocek, Patrick Cherry, Shawn Gorda, Nairi Pezeshkian, Dan Nasko, Po-Yuan Tung, Derek Murphy, and Esteban Toro\n\n\n\nHigh sensitivity detection of specific ultra low-frequency somatic mutations for minimal residual disease (MRD) monitoring\nAmerican Association for Cancer Researchers, Twist Bioscience\nOrlando, Florida\nApr 2023\n\nTong Liu, Michael Bocek, Patrick Cherry, Shawn Gorda, Jean Challacombe, Derek Murphy and Esteban Toro\n\n\n\nAn end-to-end workflow for accurate methylation detection\nAmerican Association for Cancer Researchers, Twist Bioscience\nOrlando, Florida\nApr 2023\n\nLydia Bonar, Kristin Butcher, Michael Bocek, Holly Corbitt, Bryan Hoglund, Cibelle Nassif, Patrick Cherry, Derek Murphy, Jean Challacombe, Esteban Toro\n\n\n\nTwist pan-cancer synthetic RNA fusion control for assay development\nAmerican Association for Cancer Researchers, Twist Bioscience\nOrlando, Florida\nApr 2023\n\nPatrick Cherry, Jason Corwin, Yu Cai, Kit Fuhrman, Jean Challacombe, Derek Murphy, Esteban Toro\n\n\n\nColorado RNA Club Industry Session\nColorado RNA Club\nBoulder, Colorado\nApr 2023\n\n\nUse of synthetic CNV fragments to mimic copy number alterations for ctDNA reference standards\nAdvances in Genome Biology and Technology, Twist Bioscience\nHollywood, Florida\nFeb 2023\n\nJason Corwin, Patrick Cherry, Shawn Gorda, Michael Bocek, Jean Challacombe, Derek Murphy, Esteban Toro\n\n\n\nMethylation Controls to detect for methylation level quantification in the Twist Targeted Methylation Sequencing workflow\nAdvances in Genome Biology and Technology\nHollywood, Florida\nFeb 2023\n\nKristin Butcher, Michael Bocek, Patrick Cherry, Jean Challacombe, Esteban Toro\n\n\n\nEfficient, high sensitivity detection of oncogenic variants with UMIs and target enrichment\nEuropean Human Genetics Conference\nVienna, Austria\nMay 2022\n\nMichael Bocek, Lydia Bonar, Jean Challacombe, Richard Gantt, Patrick Cherry, Rebecca Liao, Derek Murphy and Esteban Toro\n\n\n\nTwist pan-cancer synthetic reference materials for cell-free DNA (cfDNA) assay development\nAmerican Association for Cancer Researchers, Twist Bioscience\nNew Orleans, Louisiana\nApr 2022\n\n\nPan-cancer Reference Standard: Methods in Automation & Future Needs\nTwist Automation Group Meeting\nSouth San Francisco, CA\nApr 2022\n\n\nTwist reference material products: current methods and future applications\nTwist R&D Symposium\nSouth San Francisco, CA\nMar 2022\n\n\nPan-cancer Reference Standard: Methods & Lessons from NPI & QC\nTwist R&D Meeting\nSouth San Francisco, CA\nFeb 2022\n\n\nMolecular Methods Meet the Standards: Or how I learned to stop worrying and love UV-quantification\nTwist R&D Meeting\nSouth San Francisco, CA\nJul 2021\n\n\nColorado RNA Club Industry Session\nColorado RNA Club\nBoulder, Colorado\nApr 2021\n\n\nR use at Zymergen\nZ-Tech Talk\nEmeryville, CA\nJun 2020\n\n\nData-driven troubleshooting of NGS experiments\nData Science Talk\nEmeryville, CA\nApr 2020\n\n\nNGS Sample Preparation Deep-Dive\nNGS Technical Talk Series\nEmeryville, CA\nMar 2020\n\n\nRNA terminus chemistry potentiates decay events that target HAC1 mRNA during the unfolded protein response\nThesis Defense Seminar\nAurora, Colorado\nJan 2019\n\n\nRNA modification and decay regulates the unfolded protein response\nRocky Mountain Yeast Meeting Poster\nFort Collins, Colorado\nJan 2019\n\n\nWhat the unfolded protein response teaches us about RNA decay\nBolie Scholar Talk, Molecular Biology Program Retreat\nWinter Park, CO\nOct 2018\n\n\nGenetic bypass of essential yeast RNA repair enzymes\nRocky Mountain Yeast Meeting Poster\nGolden, Colorado\nJan 2018\n\n\nGenetic bypass of essential yeast RNA repair enzymes\nMolecular Biology Program Update Talk\nAurora, Colorado\nOct 2017\n\n\nRNA processing regulates the unfolded protein response\nCSHL: mRNA Processing Meeting Talk\nCold Spring Harbor, New York\nAug 2017\n\n\nGenetic bypass of essential yeast RNA repair enzymes\nRocky Mountain Yeast Meeting Poster\nBoulder, Colorado\nJan 2017\n\n\nRNA processing regulates the unfolded protein response\nRNA Club Talk\nBoulder, Colorado\nDec 2016\n\n\nRNA Healing and Destruction\nMolecular Biology Program Update Talk\nAurora, Colorado\nOct 2016\n\n\nRNA processing regulates the unfolded protein response\nRocky Mountain Yeast Meeting Poster\nFort Collins, Colorado\nJan 2016\n\n\nTurnover of endonucleolytic products of No-Go mRNA decay\nRNA Stability Meeting\nEstes Park, Colorado\nJun 2015\n\n\nRNA 5′-kinase-mediated co-translational mRNA decay\nMolecular Biology Program Update Talk\nAurora, Colorado\nFeb 2015\n\n\nRNA 5′-kinase-mediated co-translational mRNA decay\nRocky Mountain Yeast Meeting Poster\nAurora, Colorado\nJan 2015\n\n\nRNA 5′-kinase-mediated co-translational mRNA decay\nRocky Mountain Yeast Meeting Poster\nBoulder, Colorado\nJan 2014\n\n\nCoordinated upregulation of antioxidant protection and mitochondrial DNA biosynthesis in liver cells by oxidative stress\nSenior Undergraduate Capstone Research Talk\nConway, Arkansas\nJan 2013"
  },
  {
    "objectID": "Patrick-Cherry-resume.html#trainees-direct-reports",
    "href": "Patrick-Cherry-resume.html#trainees-direct-reports",
    "title": "CV of Patrick Cherry, PhD",
    "section": " Trainees & Direct Reports",
    "text": "Trainees & Direct Reports\n\n\nWhile I’ve not held a role with “manager” in the title, all Scientist positions I’ve accepted have involved formal report management responsibility. I take managing and mentoring seriously; I emphasize trust, learning, and growth with my reports.\n\nDerek Cai, BS, University of California San Diego, Research Associate I\nTwist Bioscience\nSouth San Francisco, California\nJan 2024 - Jan 2022\n\n\nLydia Bonar, MS, Johns Hopkins University, Scientist\nTwist Bioscience\nSouth San Francisco, California\nJan 2024 - Jan 2021\n\n\nAlonzo Lee, BS, University of California Santa Cruz, Scientist\nTwist Bioscience\nSouth San Francisco, California\nJan 2022 - Jan 2021\n\n\nKaisle Hill, BA, University of California Berkeley, Senior Research Associate\nZymergen, Inc.\nEmeryville, California\nJan 2021 - Jan 2020\n\n\nRachel A Jones, MS, University of Arizona, Postdoctoral Fellow\nUniversity of Colorado School of Medicine\nAurora/Denver, Colorado\nJan 2017\n\n\nLaura K White, MS, Biotechnology, Johns Hopkins University, Postdoctoral Fellow\nUniversity of Colorado School of Medicine\nAurora/Denver, Colorado\nJan 2016\n\n\nHaven Himmighoefer, Undergraduate, University of Colorado Denver\nUniversity of Colorado School of Medicine\nAurora/Denver, Colorado\nJan 2016 - Jan 2014\n\n\nLeslie Aranda, Undergraduate, University of California Riverside\nUniversity of Colorado School of Medicine\nAurora/Denver, Colorado\nJan 2015"
  },
  {
    "objectID": "posts/2024_10_08-SF_political_support_clustering.html",
    "href": "posts/2024_10_08-SF_political_support_clustering.html",
    "title": "San Francisco political support clustering",
    "section": "",
    "text": "LGBTQ+ Pride light cannons project down Market Street at the Ferry Building, with a uterus projected onto the clock tower in the background. The ballot this November includes Prop. 3 to protect the right to marriage in the state constitution and Prop. O to protect reproductive health rights and privacy in San Francisco."
  },
  {
    "objectID": "posts/2024_10_08-SF_political_support_clustering.html#notes-on-approach",
    "href": "posts/2024_10_08-SF_political_support_clustering.html#notes-on-approach",
    "title": "San Francisco political support clustering",
    "section": "Notes on approach",
    "text": "Notes on approach\nThe website sfendorsements.com has collected and cataloged many of the city’s politically active groups’ (often Political Action Committees, or PACs) positions on ballot measures and election races for local positions. I hypothesize that these can be used to deduce the true alignment of these organizations.\nPeter Xu make the code available, and has has previously made google sheets available for the endorsement data, but those are for 2022.\nFor this analysis, I will scrape the November 2024 General Elections data, tidy it up, and analyze it.\n\n\n\n\n\n\nCaution\n\n\n\nThis page may be incomplete. As of 2024-10-09, endorsement data has yet to be published for a few organizations that have made recommendations in the past (San Francisco Chronicle, San Francisco Examiner, United Educators of San Francisco, SPUR (Planning / Urban Research Association), Tech Workers Voter Guide, San Francisco Parent Action, San Francisco Rising Action, and SF Young Democrats).\n\n\n\nSPUR published their voter guide 2024-10-08.\nYes on L let me know that Housing Action Coalition now endorses Prop L (which is true, as of what date I’m not sure)."
  },
  {
    "objectID": "posts/2024_10_08-SF_political_support_clustering.html#import-and-tidy-data",
    "href": "posts/2024_10_08-SF_political_support_clustering.html#import-and-tidy-data",
    "title": "San Francisco political support clustering",
    "section": "Import and tidy data",
    "text": "Import and tidy data\nGreat, the data are now tidy, where each row is an observation (a political group), and each column is a variable (race / measure)."
  },
  {
    "objectID": "posts/2024_10_08-SF_political_support_clustering.html#what-are-the-propositions",
    "href": "posts/2024_10_08-SF_political_support_clustering.html#what-are-the-propositions",
    "title": "San Francisco political support clustering",
    "section": "What are the propositions?",
    "text": "What are the propositions?\nSee the August 29 post on San Francisco’s November 2024 ballot review page for full descriptions of each State-wide and San Francisco ballot measure."
  },
  {
    "objectID": "posts/2024_10_08-SF_political_support_clustering.html#analyze-by-ballot-measures",
    "href": "posts/2024_10_08-SF_political_support_clustering.html#analyze-by-ballot-measures",
    "title": "San Francisco political support clustering",
    "section": "Analyze by ballot measures",
    "text": "Analyze by ballot measures\n\nWho is recommending what?\n\n\n\n\n\n\n\n\nFigure 1: Color-coded layout of political organizations’ Yes / No / no opinion endorsement of state and local ballot measures\n\n\n\n\n\nVisually, we can see from this plot that there is significant variation across political organizations on endorsements for props 33, 36, C, D, E, and F and to a lesser extent 34, G, L, and N; whereas ballot measures 2, 3, 32, A, B, and O show less variation among political organizations. Also, interestingly, some organizations that offer endorsements did not endorse any position for some (or even most) propositions on the November 5 ballot.\nHowever, for the above plot, the variation is easier to see than if the political organizations were sorted alphabetically because I cheated: I pre-sorted these based on their clustering order. So let’s explore the clustering result. I can plot the clustering dendrogram along side the endorsement color code data to illustrate:\n\n\n\n\n\n\n\n\nFigure 2: Color-coded of political organizations’ Yes / No / no opinion endorsement of state and local ballot measures with dendrogram displayed\n\n\n\n\n\n\n\nNominal clustering\nClustering is typically a quantitative method, so special accommodations have to be taken for clustering nominal / factor data like these (where there are discrete values that do not have an order over one another). Luckily, we can use the nomclust package (paper), which handles the details as a purpose-built package for hierarchical clustering of nominal (categorical) variables.\nOne weakness of this clustering analysis is that it weights all ballot measures and races as the same. For an individual voter, some topics and races may have more salience or effect, and this analysis cannot take that into account.\n\n\n\n\n\n\n\n\nFigure 3: Dendrogram of political organizations’ Yes / No / no opinion endorsement of state and local ballot measures\n\n\n\n\n\nGenerally speaking, the agglomerative coefficient of a clustering analysis describes the strength of the clustering structure that has been obtained by group average linkage. The coefficient takes values from 0 to 1, and is calculated as the mean of the normalized lengths at which the clusters are formed, e.g. the uniformity lengths displayed on the dendrogram. The more evenly and gradually the categories get broken down into different clusters, the closer to 1 the agglomerative coefficient will be.\n\nPolitical organization distance heat map\nI can also make a heat map of the clustering distance, or dissimilarity.\n\n\n\n\n\n\n\n\nFigure 4: Heat map of political organizations’ Yes / No / no opinion endorsement of state and local ballot measures\n\n\n\n\n\nThe heat map shows darker, purple-er coloring for pairs of organizations whose set of endorsements are more similar, and lighter, yellow-er colors for organizations with very different endorsements."
  },
  {
    "objectID": "posts/2024_10_08-SF_political_support_clustering.html#trying-clustering-again-on-just-sf-local-ballot-measure-data",
    "href": "posts/2024_10_08-SF_political_support_clustering.html#trying-clustering-again-on-just-sf-local-ballot-measure-data",
    "title": "San Francisco political support clustering",
    "section": "Trying clustering again on just SF local ballot measure data",
    "text": "Trying clustering again on just SF local ballot measure data\nAs the color-coded Yes / No / NA plot showed above (Figure 1), many organizations did not make endorsements in the state-wide ballot measures (which get coded for clustering purposes as “No comment”). This phenomenon may be skewing the clustering results, causing the result to over-index on the “No comment” ballot measures rather than the active “Yes or No” endorsements. Because these “No comment” observations appear overwhelmingly in the State measures, we can run clustering only on the SF local measures.\n\nAnalyze by SF-local-only ballot measures\n\n\n\n\n\n\n\n\nFigure 5: Dendrogram of political organizations’ Yes / No / no opinion endorsement of local-only ballot measures\n\n\n\n\n\nThis clustering (Figure 5) shows a different result than the first dendrogram (Figure 3).\n\n\n\n\n\n\n\n\nFigure 6: Color-coded layout of political organizations’ Yes / No / no opinion endorsement of local-only sorting\n\n\n\n\n\nShown above (Figure 6), we can generate the Yes / No map with ordering based on the clustering of only the SF measures.\nThe clustering and ordering by SF-ballot measures only shows that the “no comment” was having a disproportional effect on the clustering, and now those political organizations are getting distributed elsewhere among the clusters.\nCluster 1 (on the left in Figure 5 and on the top in Figure 6) now contains a mixture of Republican and Democratic organizations. Based on the alignment, “No” endorsements for Props C, E, G, N, and to a lesser extent L are key features of this cluster, and “Yes” endorsements for D, and F are also prominent.\nIn contrast, Cluster 2 (in the middle of the figures) features prominent “No” endorsement for D and F, and high levels of “Yes” support for C and E.\nCluster 3 is fairly dominated by the “No comment” non-endorsements among the SF local ballot measures, but feature prominent “Yes” support for B, G, K, and L, which contrasts with the varying support for both in clusters 1 and 2. This makes some sense due to the non-partisan interests of measure K (Permanently Closing the Upper Great Highway to Private Vehicles to Establish a Public) and L (Additional Business Tax on Transportation Network Companies and Autonomous Vehicle Businesses to Fund Public Transportation).\n\nPolitical organization distance table\n\n\n\n\nTable 1: Table of unique political organization pairs, sorted by clustering proximity\n\n\n\n\n\n\n\n\n\n\nThe least-distant org to the SF Republican Party (aside from itself) is Noe Valley Democratic Club (distance = 0.226), followed by Democratic Party (SF) (distance 0.536)\n\n\n\nRemarks on clustering by ballot measure\nWe can see from a reasonably well-fitting categorical clustering model that many political organizations have high similarity with the SF Republican Party’s positions on ballot measures, despite having “Democratic” in their name. This result supports the idea that an empirical approach can reveal more about the character of an organization that the words in its name."
  },
  {
    "objectID": "posts/2024_10_08-SF_political_support_clustering.html#aanlyze-by-national-state-candidate-endorsements",
    "href": "posts/2024_10_08-SF_political_support_clustering.html#aanlyze-by-national-state-candidate-endorsements",
    "title": "San Francisco political support clustering",
    "section": "Aanlyze by National & State candidate endorsements",
    "text": "Aanlyze by National & State candidate endorsements\nGreat, the data are now tidy, where each row is an observation (a political group), and each column is a variable (race).\n\nWho is recommending whom?\n\n\n\n\nTable 2: Table of organization endorsements of candidates for races\n\n\n\n\n\n\nOrganization\nPresident\nUS Senator\nHouse CA-11\nHouse CA-15\nState Senate 11\nState Assembly 17\nState Assembly 19\n\n\n\n\nDemocratic Party (SF)\nKamala Harris\nAdam Schiff\nNancy Pelosi\nKevin Mullin\nScott Wiener\nMatt Haney\nCatherine Stefani\n\n\nTogetherSF\nKamala Harris\nAdam Schiff\nNancy Pelosi\nKevin Mullin\nScott Wiener\nMatt Haney\nCatherine Stefani\n\n\nUnited Democratic Club\nKamala Harris\nAdam Schiff\nNancy Pelosi\nKevin Mullin\nScott Wiener\nMatt Haney\nCatherine Stefani\n\n\nEd M. Lee Asian Pacific Democratic Club\nKamala Harris\nAdam Schiff\nNancy Pelosi\nKevin Mullin\nScott Wiener\nMatt Haney\nCatherine Stefani\n\n\nAlice B. Toklas LGBT Democratic Club\nKamala Harris\nAdam Schiff\nNancy Pelosi\nKevin Mullin\nScott Wiener\nMatt Haney\nCatherine Stefani\n\n\nChinese American Democratic Club\nKamala Harris\nAdam Schiff\nNancy Pelosi\nKevin Mullin\nScott Wiener\nMatt Haney\nCatherine Stefani\n\n\nHome Sharers Democratic Club\nKamala Harris\nAdam Schiff\nNancy Pelosi\nKevin Mullin\nScott Wiener\nMatt Haney\nCatherine Stefani\n\n\nEastern Neighborhoods Democratic Club\nKamala Harris\nAdam Schiff\nNancy Pelosi\n\nScott Wiener\nMatt Haney\nCatherine Stefani\n\n\nSF Women's Political Committee\n\nAdam Schiff\nNancy Pelosi\nKevin Mullin\nScott Wiener\nMatt Haney\nCatherine Stefani\n\n\nSierra Club\nKamala Harris\n\nNancy Pelosi\n\nScott Wiener\nMatt Haney\nCatherine Stefani\n\n\nSEIU 1021\nKamala Harris\n\nNancy Pelosi\nKevin Mullin\nScott Wiener\nMatt Haney\nCatherine Stefani\n\n\nDistrict 11 Democratic Club\nKamala Harris\nAdam Schiff\nNancy Pelosi\nKevin Mullin\n\nMatt Haney\n\n\n\nBernal Heights Democratic Club\nKamala Harris\nAdam Schiff\nNancy Pelosi\n\n\n\n\n\n\nPotrero Hill Democratic Club\nKamala Harris\nAdam Schiff\nNancy Pelosi\n\nScott Wiener\nMatt Haney\n\n\n\nNoe Valley Democratic Club\nKamala Harris\n\nNancy Pelosi\n\nScott Wiener\nMatt Haney\n\n\n\nHarvey Milk LGBTQ Democratic Club\nKamala Harris\n\nNancy Pelosi\nKevin Mullin\n\nMatt Haney\nDavid Lee\n\n\nSF League of Pissed Off Voters\nKamala Harris\n\n\n\n\n\n\n\n\nGreen Party (SF)\nJill Stein\n\n\n\n\n\n\n\n\nYIMBY Action\n\n\n\n\nScott Wiener\nMatt Haney\nCatherine Stefani\n\n\nGrowSF\n\n\n\n\nScott Wiener\nMatt Haney\nCatherine Stefani\n\n\nSF Housing Action Coalition\n\n\n\n\nScott Wiener\nMatt Haney\nCatherine Stefani\n\n\nSF Bicycle Coalition\n\n\n\n\nScott Wiener\nMatt Haney\n\n\n\nSF Tenants Union\n\n\n\n\n\n\nDavid Lee\n\n\nSF Republican Party\nDonald Trump\nSteve Garvey\nBruce Lou\nAnna Cheng Kramer\nYvette Corkrean\nManuel Noris-Barrera\n\n\n\nSF Young Republicans\nDonald Trump\n\nBruce Lou\n\nYvette Corkrean\nManuel Noris-Barrera\n\n\n\n\n\n\n\n\n\n\n\nI’ve cheated again and pre-arranged this table of candidate endorsements by the clustering order. It makes it pretty clear there are a few block. I’ll also do a distance heat map below (which doesn’t say the endorsement names, but shows similarity more clearly.)\n\n\n\n\nTable 3: Unique options per race\n\n\n\n\n\n\nPresident\nUS Senator\nHouse CA-11\nHouse CA-15\nState Senate 11\nState Assembly 17\nState Assembly 19\n\n\n\n\n4\n3\n3\n3\n3\n3\n3\n\n\n\n\n\n\n\n\n\n\nNote that races have one to four options among the endorsements made by these political organizations. This is different than the ballot measures (where options were Yes / No / NA). This increase in the number of levels of each factor can affect the clustering.\n\n\n\n\nTable 4: Races where one or more organizations did not endorse anyone (binary: Yes / No)\n\n\n\n\n\n\nPresident\nUS Senator\nHouse CA-11\nHouse CA-15\nState Senate 11\nState Assembly 17\nState Assembly 19\n\n\n\n\nYes\nYes\nYes\nYes\nYes\nYes\nYes\n\n\n\n\n\n\n\n\n\n\nAlso note that, in every race, there is one option that is the organization declining to endorse anyone. Thus, the number of candidates endorsed is n - 1 the value represented in the table.\nThis means that no organization made any endorsements for President. This fact is not true of any other race.\n\n\nNominal clustering\nVery tellingly, we see two broad clusters and two narrow clusters:\n\n\n\n\n\n\n\n\n\n\nPolitical organization distance heat map\nI can also make a heat map of the clustering distance, or dissimilarity.\n\n\n\n\n\n\n\n\n\nFor the two large clusters in the dendrogram, this heat maps show two large squares of low-distance coloring (purple to dark blue) along the diagonal downward and to the right. These square blocks of proximity indicate clusters similarity among the organizations.\nClearly shown on this heatmap is how divergent the SF Young Republicans and the SF Republican Party are from any other organization analyzed. For example, the NOE Valley Democratic Club is closer (in clustering distance) to the SF Young Republicans and the SF Republican Party than the latter two are to each other.\n\n\nPolitical organization distance table (for candidate recs)\nUse the table below to filer, sort, and rank the clustering model’s distance to make your own comparisons.\n\n\n\n\nTable 5: Table of unique political organization pairs, sorted by clustering proximity on endorsement\n\n\n\n\n\n\n\n\n\n\n\n\n\nRemarks on clustering by candidate endorsement\nThe race endorsements data set contains more options in general, allowing each organization for vary significantly in its character. We see this born out in the clustering dendrogram with more divergent clusters than seen in the ballot measure analysis.\nWhile the candidate endorsement clustering did not reveal any surprising similarities (in the opinion of yours truly), it did show how divergent the SF Republican Party and the SF Young Republicans are from the rest of the organizations, in terms of candidate endorsements."
  },
  {
    "objectID": "posts/2024_10_08-SF_political_support_clustering.html#conclusions",
    "href": "posts/2024_10_08-SF_political_support_clustering.html#conclusions",
    "title": "San Francisco political support clustering",
    "section": "Conclusions",
    "text": "Conclusions\nThe nominal clustering analysis worked well at identifying similar groups and quantifying relative similarity. The ballot measure endorsement clustering was more revealing of the spectrum of relatedness of the political organizations than the candidate clustering was. One weakness of this clustering analysis is that it weights all ballot measures and races as the same. For an individual voter, some topics and races may have more salience or effect, and this analysis cannot take that into account.\nBroadly, these results support the idea that an empirical approach can reveal more about the character of an organization than the words in its name, and that this analysis is useful for determining action-based political alignment."
  },
  {
    "objectID": "posts/2024_07_15-CNV_TE_panel_analysis.html",
    "href": "posts/2024_07_15-CNV_TE_panel_analysis.html",
    "title": "Copy-number-variant (CNV) TE Panel Analysis",
    "section": "",
    "text": "In this hypothetical exercise, a recently characterized disorder called under study is “CNV-emia”, an genetic disease showing autosomal recessive inheritance of mutations in the “CNSL” gene. The deletion/duplication breakpoints can vary from sample to sample (see table below), and it has been hypothesized that the breakpoints correspond with ethnicity. The breakpoint positions are known from the literature.\n\n\n\nDel/Dup index\n5´ breakpoint\n3´ breakpoint\n\n\n\n\n1\nCNSL_probe_32\nCNSL_probe_38\n\n\n2\nCNSL_probe_27\nCNSL_probe_34\n\n\n3\nCNSL_probe_20\nCNSL_probe_40\n\n\n4\nCNSL_probe_10\nCNSL_probe_40\n\n\n\nThree probes with off-trend uniformity are CNSL_5, CNSL_23, and CNSL_46. I would recommend these probes be re-designed for better uniformity of capture and lower off-target.\nThe CNV calling and statistical analysis indicated that, significantly, the duplication vs. deletion of a CNV helps predict ethnicity. While the hypothesized probe intervals were not statistically significant in the model, the control data show that the method has high precision. In the CNSL region, ethnicity A has a CNV frequency of 3.2%, followed by B with a frequency of 1.0%, followed lastly by C with a frequency of 0.8%; in terms of CNV type, A is 1.8x more likely to have a deletion than a duplication, B is heavily biased toward deletions, and C is exclusively deletions (n = 21). Due to interval overlap of many hypothesized breakpoints, the model is partly confounded because the probe CNV calls are not fully independent.\nIn order to predict the unknown ethnicity of another set of data, I would train a classifier machine-learning model, such as a random forest classifier, a logistic model, or a K-nearest neighbors model, on the data in this analysis. Best practice is to separate training, validation, and test data. Once trained, parameters optimized, and predictions reasonably accurate, I would apply the model to the unknown data."
  },
  {
    "objectID": "posts/2024_07_15-CNV_TE_panel_analysis.html#exploratory-checks",
    "href": "posts/2024_07_15-CNV_TE_panel_analysis.html#exploratory-checks",
    "title": "Copy-number-variant (CNV) TE Panel Analysis",
    "section": "Exploratory & Checks",
    "text": "Exploratory & Checks\n\ncolnames(data) %&gt;% str_detect(\"probe\") %&gt;% sum()\n\n[1] 100\n\n\n\nHow many are CNSL vs. non-CNSL\n\ncolnames(data) %&gt;%\n  as_tibble() %&gt;%\n  filter(str_detect(value, \"probe\")) %&gt;%\n  mutate(\"probe_type\" = case_when(str_detect(value, \"non_CNSL_probe_\") ~ \"non-CNSL\",\n                                  str_detect(value, \"CNSL_probe_\") ~ \"CNSL\",\n                                  TRUE ~ NA)) %&gt;%\n  count(probe_type)\n\n\n\n\n\nprobe_type\nn\n\n\n\n\nCNSL\n50\n\n\nnon-CNSL\n50\n\n\n\n\n\n\n\n\nCheck id uniqueness\n\ncount(data);\n\n\n\n\n\nn\n\n\n\n\n10000\n\n\n\n\n\ncount(count(data, id, name = \"num_occurences\"))\n\n\n\n\n\nn\n\n\n\n\n10000\n\n\n\n\n\n\nAll ids are unique.\nEthnicities are not balanced in the experiment.\n\n\nDistributions of probe counts\n\nprobe_count_hist_facet &lt;- data %&gt;%\n  pivot_longer(contains(\"CNSL_probe\"), values_to = \"counts\", names_to = \"probe\") %&gt;%\n  ggplot(aes(counts, fill = ethnicity)) +\n  geom_histogram() +\n  facet_wrap(~ probe)\nprobe_count_hist_facet + theme(strip.text = element_blank(), axis.text = element_text(size = 5))\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\n\n\n\n\n\nggsave(paste0(\"file_prefix\", \"_\", \"probe_count_hist_facet\", \".png\"), probe_count_hist_facet,\n       width = 10, height = 10, dpi = 320)"
  },
  {
    "objectID": "posts/2024_07_15-CNV_TE_panel_analysis.html#pivot-2x-normalized-data-to-long-format",
    "href": "posts/2024_07_15-CNV_TE_panel_analysis.html#pivot-2x-normalized-data-to-long-format",
    "title": "Copy-number-variant (CNV) TE Panel Analysis",
    "section": "Pivot 2x normalized data to long format",
    "text": "Pivot 2x normalized data to long format\n\nnorm_norm_data_long &lt;- norm_norm_data %&gt;%\n  select(id, ethnicity, contains(\"norm_norm_cov\")) %&gt;%\n  pivot_longer(contains(\"norm_norm_cov\"), values_to = \"norm_norm_cov\", names_to = \"probe\") %&gt;%\n  # create order for probes\n  mutate(\"probe_number\" = as.integer(str_extract(probe, \"(?&lt;=CNSL_probe_)\\\\d{1,2}\")),\n         \"probe_ordering\" = if_else(str_detect(probe, \"non_\"),\n                                  probe_number + 50, probe_number)) %&gt;%\n  # simplify names for easier plotting\n  mutate(\"probe\" = str_remove(probe, \"norm_norm_cov_\"),\n         \"probe\" = str_remove(probe, \"probe_\"),\n         # impose integer ordering on probe name strings\n         \"probe\" = fct_reorder(as_factor(probe), probe_ordering)) %&gt;%\n  select(!probe_ordering)\n\n\nSave 2x normalized data\n\nwrite_csv(norm_norm_data_long, paste0(file_prefix, \"_norm_norm_data_long\", \".csv.gz\"))\n\n\n\nquick plot to check results\n\nnorm_norm_count_hist_facet &lt;- norm_norm_data_long %&gt;%\n  ggplot(aes(norm_norm_cov, fill = ethnicity)) +\n  geom_histogram(binwidth = .1) +\n  scale_y_continuous(transform = \"log1p\") +\n  coord_cartesian(xlim = c(0, 2.5)) +\n  facet_wrap(~ probe + ethnicity) +\n  theme(strip.text = element_text(size = 3, margin = margin(0, 0, 0, 0)),\n        axis.text = element_text(size = 4))\n\nnorm_norm_count_hist_facet + theme(strip.text = element_blank(), axis.text = element_text(size = 4))\n\n\n\n\n\n\n\n\n\nggsave(paste0(file_prefix, \"_\", \"norm_norm_count_hist_facet\", \".png\"), norm_norm_count_hist_facet,\n       width = 10, height = 10, dpi = 320)\n\n\ncopy_n_res &lt;- 0.17\n\nCNSL_30_norm_norm_hist &lt;- norm_norm_data_long %&gt;%\n  filter(probe == \"CNSL_30\") %&gt;%\n  ggplot(aes(norm_norm_cov, fill = ethnicity)) +\n  geom_histogram(binwidth = .01) +\n  geom_vline(xintercept = 1 - copy_n_res, linewidth = .25, linetype = \"dashed\") +\n  geom_vline(xintercept = 1 + copy_n_res, linewidth = .25, linetype = \"dashed\") +\n  scale_y_continuous(transform = \"log1p\") +\n  #coord_cartesian(xlim = c(0, 2.5)) +\n  facet_wrap(~ probe + ethnicity)\nCNSL_30_norm_norm_hist\n\n\n\n\n\n\n\n\n\nggsave(paste0(file_prefix, \"_\", \"CNSL_30_norm_norm_hist\", \".png\"), CNSL_30_norm_norm_hist,\n       width = 5, height = 3, dpi = 320)\n\n\nset.seed(123)\nnorm_norm_cov_lineplot &lt;- norm_norm_data_long %&gt;%\n  select(id, ethnicity) %&gt;%\n  slice_sample(n = 33, by = ethnicity) %&gt;%\n  left_join(norm_norm_data_long, by = c(\"id\", \"ethnicity\")) %&gt;%\n  ggplot(aes(y = norm_norm_cov, x = probe_number, color = ethnicity)) +\n  geom_line() +\n  facet_wrap(~ id, ncol = 1) +\n  theme(strip.text = element_text(size = 3, margin = margin(0, 0, 0, 0)),\n        axis.text = element_text(size = 4))\n\nggsave(paste0(file_prefix, \"_\", \"norm_norm_cov_lineplot\", \".png\"), norm_norm_cov_lineplot,\n       width = 5, height = 20, dpi = 320)\n\n\nprobe_norm_count_hist_facet &lt;- norm_data %&gt;%\n  pivot_longer(contains(\"norm_cov\"), values_to = \"norm_counts\", names_to = \"probe\") %&gt;%\n  ggplot(aes(norm_counts, fill = ethnicity)) +\n  geom_histogram(binwidth = 0.1) +\n  facet_wrap(~ probe)\n\nprobe_norm_count_hist_limited_facet &lt;- norm_data %&gt;%\n  pivot_longer(contains(\"norm_cov\"), values_to = \"norm_counts\", names_to = \"probe\") %&gt;%\n  mutate(\"probe\" = str_remove(probe, \"norm_cov_\")) %&gt;%\n  arrange(probe) %&gt;%\n  filter(probe %in% c(\"CNSL_probe_5\", \"CNSL_probe_23\", \"CNSL_probe_46\",\n                      \"CNSL_probe_1\", \"CNSL_probe_2\", \"non_CNSL_probe_2\")) %&gt;%\n  ggplot(aes(norm_counts, fill = ethnicity)) +\n  geom_histogram(binwidth = 0.1) +\n  facet_wrap(~ probe) +\n  labs(title = \"Normalized count histograms\",\n       subtitle = \"Example set, for demonstration\",\n       y = \"Sample count (n)\",\n       x = \"Normalized counts (ratio to mean)\")\n\nprobe_norm_count_hist_limited_facet\n\n\n\n\n\n\n\n\n\nggsave(paste0(\"file_prefix\", \"_\", \"probe_norm_count_hist_facet\", \".png\"), probe_norm_count_hist_facet,\n       width = 10, height = 10, dpi = 320)\n\nMost of the normalized coverage distributions of probes look great! The per-sample normalization worked well. However, we can see (highlighted specifically here, in the example) some probes that are not behaving well.\n\n\nIdentify bad probes\n\nprobe_eval_df &lt;- norm_norm_data_long %&gt;%\n  summarize(across(norm_norm_cov,\n                   .fns = c(\"mean\" = mean,\n                            \"sd\" = sd,\n                            \"min\" = min\n                            #\"max\" = max\n                            ),\n                   .names = \"{.fn}_{.col}\"),\n            #\"n_samples\" = n(),\n            .by = c(probe, probe_number)) %&gt;%\n  mutate(across(where(is.numeric), ~ signif(.x, 3)))\n\n\nprobe_uniformity_dist_plot &lt;- probe_eval_df %&gt;%\n  ggplot(aes(sd_norm_norm_cov)) +\n  geom_histogram(binwidth = 0.025) +\n  labs(title = \"Probe uniformity check\",\n       subtitle = \"Distribution of standard deviations of coverages by probe\",\n       y = \"number of probes\",\n       x = \"Stadard deviation of coverage\")\nprobe_uniformity_dist_plot\n\n\n\n\n\n\n\n\nSo we have three outlier probes with poor uniformity of coverage. Let’s list out what they are.\n\nprobe_eval_df %&gt;% arrange(desc(sd_norm_norm_cov)) %&gt;% slice_head(n = 6)\n\n\n\n\n\n\n\n\n\n\n\n\nprobe\nprobe_number\nmean_norm_norm_cov\nsd_norm_norm_cov\nmin_norm_norm_cov\n\n\n\n\nCNSL_5\n5\n1\n1.010\n0.0000\n\n\nCNSL_23\n23\n1\n0.512\n0.0362\n\n\nCNSL_46\n46\n1\n0.512\n0.0409\n\n\nCNSL_32\n32\n1\n0.111\n0.4350\n\n\nCNSL_36\n36\n1\n0.108\n0.4270\n\n\nnon_CNSL_23\n23\n1\n0.100\n0.6320\n\n\n\n\n\n\nIn this head of the table of uniformity sorted by standard deviation of the probes, the three probes with off-trend uniformity are CNSL_5, CNSL_23, and CNSL_46. I would recommend these probes be re-designed for better uniformity of capture and lower off-target.\nIn target enrichment, probes that perform poorly (due to their design / positioning) typically exhibit high rates of off-target reads (not directly observable in this data set) and a high variability in coverage from sample-to-sample (i.e. low uniformity of coverage). This analysis uses a rough measure of uniformity to identify potentially poorly-performing probes.\n\n\nFilter out bad probes\n\nnorm_norm_data_long %&lt;&gt;% filter(str_detect(probe, \"(?&lt;!non_)(CNSL_5|CNSL_23|CNSL_46)\", negate = TRUE))"
  },
  {
    "objectID": "posts/2024_07_15-CNV_TE_panel_analysis.html#convert-coverage-to-integer-cnv-levels",
    "href": "posts/2024_07_15-CNV_TE_panel_analysis.html#convert-coverage-to-integer-cnv-levels",
    "title": "Copy-number-variant (CNV) TE Panel Analysis",
    "section": "Convert coverage to integer CNV levels",
    "text": "Convert coverage to integer CNV levels\n\nnonCNSL_CNV_long &lt;- norm_norm_data_long %&gt;%\n    # compute non-CNSL coverage means\n    filter(str_detect(probe, \"non\")) %&gt;%\n    mutate(\"mean_nonCNSL_cov\" = mean(norm_norm_cov),\n           \"sd_nonCNSL_cov\" = sd(norm_norm_cov),\n           \"n_samples\" = n(),\n           .by = probe)\n\nnonCNSL_CNV_long %&gt;%\n  distinct(probe, mean_nonCNSL_cov, n_samples) %&gt;%\n  summarise(\"mean cov for all non-CNSL probes\" = mean(mean_nonCNSL_cov),\n            \"SD cov for all non-CNSL probes\" = sd(mean_nonCNSL_cov),\n            \"min cov\" = min(mean_nonCNSL_cov),\n            \"max cov\" = max(mean_nonCNSL_cov),\n            \"n probes\" = n(),\n            \"n samples in each mean\" = mean(n_samples))\n\n\n\n\n\n\n\n\n\n\n\n\n\nmean cov for all non-CNSL probes\nSD cov for all non-CNSL probes\nmin cov\nmax cov\nn probes\nn samples in each mean\n\n\n\n\n1\n0\n1\n1\n50\n10000\n\n\n\n\n\n\nThis analysis shows that all non-CNSL probes have a mean coverage (across the 10,000 samples sequenced) of exactly 1.0 . Thus, to convert these coverage values to CNV values (normalized haploid genomic equivalents), we must multiply by 2. (The standard deviation is so small as to be negligible, and is likely caused by floating point calculation error accumulation. This is supported by the min and max calculations in the next columns of the summary table.)\n\nnorm_norm_data_long %&lt;&gt;% mutate(\"CNV_level\" = norm_norm_cov * 2)\n\n\nSave 2x normalized data\n\nwrite_csv(norm_norm_data_long, paste0(file_prefix, \"_norm_norm_data_long\", \".csv.gz\"))"
  },
  {
    "objectID": "posts/2024_07_15-CNV_TE_panel_analysis.html#analyze-to-detect-copy-number-variations-unsing-rle",
    "href": "posts/2024_07_15-CNV_TE_panel_analysis.html#analyze-to-detect-copy-number-variations-unsing-rle",
    "title": "Copy-number-variant (CNV) TE Panel Analysis",
    "section": "Analyze to detect copy number variations (unsing rle)",
    "text": "Analyze to detect copy number variations (unsing rle)\nRun length encoding is a lossless form of compression that encodes a data series as a different series where each consecutive repeated value is recorded as the value and the number of repeats. In R, this is accomplished with the rle function, and the output is a linked pair of lists where the values and number of repeats occupy the same position in their respective lists.\nWe can take advantage of run length encoding not for its compression properties, but for its ability to variably call the number of consecutive values. We will use TRUE/FALSE binary values (or Dup, Del, and No CNV values) for whether there is a CNV (deletion or duplication).\nHowever, because we have eliminated three probes from the analysis, and because the start and stop positions of the CNV will be reported in units of list elements —not probes—, we have to create a secondary positional order column. This will allow for seamless consecutive CNV calling, and for conversion back to probe number annotations used in the original dataset.\n\nnorm_norm_data_long %&lt;&gt;%\n  # new code to correct for probe position\n  mutate(\"probe_CNSL_target\" = str_extract(probe, \"(non_)*CNSL\")) %&gt;%\n  mutate(\"continuous_probe_id\" = row_number() - 1, # row_number() starts at 1\n         .by = c(id, ethnicity, probe_CNSL_target))\n\nAs expected, there should be 50 non-CNSL probes, and 47 CNSL probes.\n\nRun rle CNV detection\n\nMake plot to set threshold by eye\n\ncnv_level_dist_tbl &lt;- norm_norm_data_long %&gt;%\n  summarize(\"Mean CNV\" = mean(CNV_level),\n            \"Max CNV\" = max(CNV_level),\n            \"Min CNV\" = min(CNV_level),\n            .by = c(id, ethnicity)) %&gt;%\n  # pivot longer for faceted plots\n  pivot_longer(cols = c(\"Mean CNV\", \"Max CNV\", \"Min CNV\"),\n               names_to = \"Measure\", values_to = \"value\")\n\n\ncnv_call_threshold &lt;- 0.9\n\ncnv_level_dist &lt;- cnv_level_dist_tbl %&gt;%\n  ggplot(aes(value, fill = ethnicity)) +\n  geom_histogram(binwidth = .01) +\n  geom_vline(xintercept = 2, linetype = \"dotdash\", linewidth = .3) +\n  geom_vline(xintercept = 1.33, linetype = \"dashed\", linewidth = .3) +\n  geom_vline(xintercept = 2.75, linetype = \"dashed\", linewidth = .3) +\n  scale_y_continuous(transform = \"log10\") +\n  facet_wrap(~ Measure) +\n  # theme(strip.text = element_text(size = 3, margin = margin(0, 0, 0, 0)),\n  #       axis.text = element_text(size = 4)) +\nlabs(title = \"Distributions of CNV means, maxes, & mins by probe\",\n     subtitle = \"Dashed lines indicate CNV calling thresholds\",\n     x = \"CNV level\",\n     y = \"Count (number of samples) (log scale)\")\ncnv_level_dist\n\n\n\n\n\n\n\n\nThe above plot shows the distribution of CNV levels in samples, and puts the distribution in the context of manually (by eye) setting thresholds of a Deletion (low) or a Duplication (high).\n\nggsave(paste0(file_prefix, \"_\", \"cnv_level_dist\", \".png\"), cnv_level_dist,\n       width = 8, height = 5, dpi = 320)\n\n\n\nApply thresholds in rle analysis\n\ncnv_rle &lt;- function(sub_df, lower_thresh, upper_thresh){\n  \n  # check that thresholds are valid\n  if(lower_thresh &gt; upper_thresh) stop(\"Error: lower CNV threshold, `lower_thresh`, must be less than the upper CNV threshold, `upper_thresh`.\")\n  \n  sub_df_cnv_calls &lt;- sub_df %&gt;%\n    mutate(\"CNV_call\" = case_when(CNV_level &lt;= lower_thresh ~ \"Deletion\",\n                                  CNV_level &gt;= upper_thresh ~ \"Duplication\",\n                                  TRUE ~ \"No CNV\"))\n  \n  df_rle &lt;- bind_cols(\n    \"rle_lengths\" = rle(sub_df_cnv_calls$CNV_call)[[1]],\n    \"rle_values\" = rle(sub_df_cnv_calls$CNV_call)[[2]]\n    ) %&gt;%\n    mutate(\"start_pos\" = as.integer(lag(cumsum(rle_lengths))) + 1,\n           \"end_pos\" = as.integer(cumsum(rle_lengths))) %&gt;%\n    replace_na(list(\"start_pos\" = 0))\n  \n  return(df_rle)\n}\n\n\ncnv_rle &lt;- norm_norm_data_long %&gt;%\n  nest(.by = c(\"id\", \"ethnicity\", \"probe_CNSL_target\")) %&gt;%\n  mutate(\"rle_result\" = map(data, ~ cnv_rle(.x, lower_thresh = 1.33, upper_thresh = 2.75))) %&gt;%\n  select(!data) %&gt;%\n  unnest(c(rle_result)) %&gt;%\n  mutate(\"CNV_call_length\" = as.integer(end_pos - start_pos))\n\n\ncnv_rle_hits &lt;- cnv_rle %&gt;%\n  filter(rle_values != \"No CNV\" & CNV_call_length &gt;= 4)\n\n\n\n\nAnalyze the analysis\nIn the hits, are there any samples with more than one CNV call?\n\ncnv_rle_hits %&gt;% count(id, name = \"number CNV contigs\") %&gt;% count(`number CNV contigs`, name = \"number of samples\")\n\n\n\n\n\nnumber CNV contigs\nnumber of samples\n\n\n\n\n1\n206\n\n\n2\n8\n\n\n3\n1\n\n\n\n\n\n\nIn this rle analysis using the above thresholds, 206 samples have one CNV detected, 8 samples have 2 CNVs called, and 1 sample has 3.\nHow many CNVs are too short to make the cut?\n1359 out of 21,951 total called CNVs have a consecutive length of less than 3 probes\n\n(cnv_rl_dist &lt;- cnv_rle_hits %&gt;%\n  ggplot(aes(CNV_call_length)) + geom_histogram(binwidth = 1) +\n  ggdist::stat_dist_pointinterval() +\n  labs(title = \"Distribution of called CNV run lengths\",\n       y = \"sample count\"))\n\n\n\n\n\n\n\n\nThe above QC plot shows the distribution of the consecutive length of the called CNV regions. We see the median length is 6, with a standard deviation of 5.8; the distribution is skewed to the left, with some potential groupings of CNV run lengths.\n\ncnv_rl_dist + facet_wrap(~ rle_values)\n\n\n\n\n\n\n\n\nThe deletions tend to occupy ~ 3 clusters fo lengths, around 6~7 probes, ~19 probes, and ~ 29 probes. The duplications are more clustered around ~5 probes in length.\n\ncnv_rle_hits %&gt;%\n  ggplot(aes(CNV_call_length)) + geom_histogram(binwidth = 1) +\n  facet_grid(ethnicity ~ rle_values, scales = \"free_y\") +\n  labs(title = \"Distribution of called CNV run lengths\",\n       subtitle = \"Faceted by ethnicity and CNV type\",\n       y = \"sample count\")\n\n\n\n\n\n\n\n\n\ncnv_rle_hits_tidy_bed &lt;- cnv_rle %&gt;%\n  # keep observations where No CNV is the call, or it's hit based on 4 consecutive probes\n  filter(rle_values == \"No CNV\" | CNV_call_length &gt;= 4) %&gt;%\n  # convert start positions to probe number\n  left_join(probe_number_lookup_tbl,\n            by = c(\"start_pos\" = \"continuous_probe_id\",\n                   \"probe_CNSL_target\"),\n            suffix = c(\"\", \"_start\")) %&gt;%\n  # convert end positions to probe number\n  mutate(end_pos = end_pos - 1) %&gt;%\n  left_join(probe_number_lookup_tbl,\n            by = c(\"end_pos\" = \"continuous_probe_id\",\n                   \"probe_CNSL_target\"),\n            suffix = c(\"_start\", \"_end\")) %&gt;%\n  # prepare dataframe for bed tools (equivalent)\n  rename(\"chrom\" = probe_CNSL_target, \"start\" = probe_number_start, \"end\" = probe_number_end)\n\nHere we have what looks like evidence we can classify the samples into ethnicity based on the status of the deletion v. duplication, and the run length of the consecutive number of probes affected by each type of genomic aberration.\n\nHard-code hypothesized breakpoints\nNote that bed format specifies that the start position for an interval is zero based and the end position is one-based. So we will have to manually add 1 to the end position of the probes in the hypothesis table.\nUsing a R-dataframe-compatible version of bedtools closest to compute data for breakpoint hypotheses.\n\n# filtering out non-CNSL calls, because they are not in the hypothesis table\ncnv_rle_closest &lt;- valr::bed_closest(filter(cnv_rle_hits_tidy_bed, chrom != \"non_CNSL\"),\n                                          breakpoints_bed_df,\n                                          overlap = TRUE) %&gt;%\n  arrange(id.x)\n\n\ncnv_rle_hits_closest &lt;- cnv_rle_closest %&gt;%\n  # keep only CNV-positives\n  filter(rle_values.x != \"No CNV\") %&gt;% \n  # tidy up factors and leveling\n  mutate(ethnicity.x = as_factor(ethnicity.x),\n         name.y = as_factor(name.y)) %&gt;%\n  mutate(\"name.y\" = fct_relevel(name.y,\n                                \"CNSL_probe_32-CNSL_probe_38\", \"CNSL_probe_27-CNSL_probe_34\",\n                                \"CNSL_probe_20-CNSL_probe_40\", \"CNSL_probe_10-CNSL_probe_40\")) %&gt;%\n  # sort for priority of keeping one per sample\n  arrange(id.x, .dist, desc(.overlap), name.y) %&gt;%\n  # sort to prioritize lowest distance, highest overlap\n  distinct(id.x, .keep_all = TRUE)\n\ncnv_rle_closest %&gt;%\n  count(id.x) %&gt;%\n  summarize(\"mean CNVs per sample\" = mean(n),\n            \"SD CNVs per sample\" = sd(n))\ncnv_rle_hits_closest %&gt;% count()\n\n\n\n\n\n\nmean CNVs per sample\nSD CNVs per sample\n\n\n\n\n4.382\n1.907312\n\n\n\n\n\n\n\n\nn\n\n\n\n\n215\n\n\n\n\n\n\n215 samples have a CNV called. 891 CNVs were called, meaning on average each positive sample has 4.14 CNVs called.\n\ncnv_rle_summary &lt;- cnv_rle_closest %&gt;%\n    # tidy up factors and leveling\n  mutate(ethnicity.x = fct_relevel(as_factor(ethnicity.x), LETTERS[1:3]),\n         name.y = as_factor(name.y)) %&gt;%\n  mutate(\"name.y\" = fct_relevel(name.y,\n                                \"CNSL_probe_32-CNSL_probe_38\", \"CNSL_probe_27-CNSL_probe_34\",\n                                \"CNSL_probe_20-CNSL_probe_40\", \"CNSL_probe_10-CNSL_probe_40\")) %&gt;%\n  summarize(\"n\" = n(),\n            \"mean_CNV_length\" = mean(CNV_call_length.x),\n            \"sd_CNV_length\" = sd(CNV_call_length.x),\n            \"mean_overlap\" = mean(.overlap),\n            \"sd_overlap\" = sd(.overlap),\n            \"mean_distance\" = mean(abs(.dist)),\n            \"sd_distance\" = sd(abs(.dist)),\n    .by = c(ethnicity.x, rle_values.x, name.y)) %&gt;%\n  mutate(across(where(is.double), ~ signif(.x, digits = 4))) %&gt;%\n  mutate(\"percent\" = signif(100 * n / sum(n), digits = 3),\n         .by = c(ethnicity.x, name.y)) %&gt;%\n  relocate(percent, .after = n) %&gt;%\n  arrange(ethnicity.x, rle_values.x, name.y)\n\n\ncnv_rle_summary %&gt;%\n  rename(\"ethnicity\" = ethnicity.x, \"CNV type\" = rle_values.x, \"probe name\" = name.y) %&gt;%\n  mutate(\"probe name\" = str_remove_all(`probe name`, \"CNSL_probe_\")) %&gt;%\n  select(!c(sd_CNV_length, sd_overlap, sd_distance)) %&gt;%\n  dplyr::rename(\"CNV_length\" = mean_CNV_length, \"overlap\" = mean_overlap, \"distance\" = mean_distance) %&gt;%\n  filter(`CNV type` != \"No CNV\")\n\n\n\nCNV types and loci by ethnicity\n\n\n\n\n\n\n\n\n\n\n\n\nethnicity\nCNV type\nprobe name\nn\npercent\nCNV_length\noverlap\ndistance\n\n\n\n\nA\nDeletion\n32-38\n112\n2.0700\n6.491\n3.527\n0.00000\n\n\nA\nDeletion\n27-34\n112\n2.0700\n6.491\n3.964\n0.00000\n\n\nA\nDeletion\n20-40\n112\n2.0300\n6.491\n5.491\n0.00000\n\n\nA\nDeletion\n10-40\n112\n2.0300\n6.491\n5.491\n0.00000\n\n\nA\nDuplication\n32-38\n62\n1.1500\n5.097\n2.629\n0.37100\n\n\nA\nDuplication\n27-34\n62\n1.1500\n5.097\n2.694\n0.08065\n\n\nA\nDuplication\n20-40\n62\n1.1300\n5.097\n4.097\n0.00000\n\n\nA\nDuplication\n10-40\n62\n1.1300\n5.097\n4.097\n0.00000\n\n\nB\nDeletion\n32-38\n28\n1.0100\n17.250\n6.357\n0.14290\n\n\nB\nDeletion\n27-34\n29\n1.0100\n16.830\n6.897\n0.06897\n\n\nB\nDeletion\n20-40\n29\n0.9600\n16.830\n16.720\n0.00000\n\n\nB\nDeletion\n10-40\n29\n0.9600\n16.830\n16.720\n0.00000\n\n\nB\nDuplication\n32-38\n1\n0.0359\n4.000\n2.000\n0.00000\n\n\nB\nDuplication\n27-34\n1\n0.0348\n4.000\n3.000\n0.00000\n\n\nB\nDuplication\n20-40\n1\n0.0331\n4.000\n3.000\n0.00000\n\n\nB\nDuplication\n10-40\n1\n0.0331\n4.000\n3.000\n0.00000\n\n\nC\nDeletion\n32-38\n15\n0.5980\n19.800\n5.200\n0.26670\n\n\nC\nDeletion\n27-34\n19\n0.7470\n17.680\n5.000\n1.05300\n\n\nC\nDeletion\n20-40\n21\n0.8040\n16.670\n11.140\n0.38100\n\n\nC\nDeletion\n10-40\n21\n0.7950\n16.670\n16.240\n0.00000\n\n\n\n\n\n\n\nwrite_csv(cnv_rle_summary, paste0(file_prefix, \"_\", \"cnv_rle_global_summary.csv\"))\n\n\n\nStatistical analysis\nWe need to model the evidence in the data (CNVs, which locus they’re in) to predict ethnicity. Ethnicity has 3 levels, CNVs have 3 (or 2 when omitting no CNV), and locus has 4 levels, so we need a multinomial logit models, which is what mclogit provides.\n\nsummary(probes_mblogit)\n\n\nCall:\nmblogit(formula = ethnicity.x ~ name.y + rle_values.x, data = ., \n    weights = n)\n\nEquation for B vs A:\n                                  Estimate Std. Error z value Pr(&gt;|z|)    \n(Intercept)                       -1.38520    0.20791  -6.662 2.69e-11 ***\nname.yCNSL_probe_27-CNSL_probe_34  0.03364    0.29053   0.116    0.908    \nname.yCNSL_probe_20-CNSL_probe_40  0.03364    0.29053   0.116    0.908    \nname.yCNSL_probe_10-CNSL_probe_40  0.03364    0.29053   0.116    0.908    \nrle_values.xDuplication           -2.76727    0.51474  -5.376 7.62e-08 ***\n\nEquation for C vs A:\n                                  Estimate Std. Error z value Pr(&gt;|z|)    \n(Intercept)                        -2.0102     0.2748  -7.314 2.59e-13 ***\nname.yCNSL_probe_27-CNSL_probe_34   0.2361     0.3701   0.638    0.524    \nname.yCNSL_probe_20-CNSL_probe_40   0.3362     0.3633   0.925    0.355    \nname.yCNSL_probe_10-CNSL_probe_40   0.3362     0.3633   0.925    0.355    \nrle_values.xDuplication           -16.8589   706.1172  -0.024    0.981    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nApproximate residual Deviance: 1076 \nNumber of Fisher scoring iterations:  14 \nNumber of observations:  891 \n\n\n\n\nInterpretation of CNV data against hypothesized breakpoints\nEthnicity A has CNVs in the CNSL region detected 3.2% of the time. When there is a CNV, 2.07% are Deletions in the either of the CNSL_probe_27-CNSL_probe_34 or CNSL_probe_32-CNSL_probe_38 regions, and 1.13% are Duplications, primarily in the CNSL_probe_20-CNSL_probe_40 region. Because CNSL_probe_10-CNSL_probe_40 is a superset of all other regions, we can conclude from the counts / frequencies being the same for all four hypothesized regions that these CNVs are occurring over the narrowest possible interpretation.\nEthnicity B has CNVs in the CNSL region detected 1% of the time. When there is a CNV, 0.96% of the time it’s a Deletion in CNSL_probe_20-CNSL_probe_40, and 0.0331% of the time (n = 1) it’s a Duplication with overlap for both CNSL_probe_27-CNSL_probe_34 and CNSL_probe_32-CNSL_probe_38.\nEthnicity C has CNVs in the CNSL region detected 0.8% of the time. When there is a CNV, it’s a Deletion in CNSL_probe_10-CNSL_probe_40 that occurs 0.795% of samples, with a mean overlap of 16.24 probes.\n\n\n\nGlobal analysis of ethnicities\n\ncnv_rle_global_counts &lt;- cnv_rle_hits_tidy_bed %&gt;%\n  dplyr::rename(\"probe_CNSL_target\" = chrom) %&gt;%\n  count(ethnicity, probe_CNSL_target, rle_values) %&gt;%\n  mutate(\"percent\" = signif(n / sum(n) * 100, 3),\n         .by = c(ethnicity, probe_CNSL_target))\n\ncnv_rle_global_counts\n\n\n\nCNV types and counts by ethnicity\n\n\nethnicity\nprobe_CNSL_target\nrle_values\nn\npercent\n\n\n\n\nA\nCNSL\nDeletion\n112\n2.0300\n\n\nA\nCNSL\nDuplication\n62\n1.1300\n\n\nA\nCNSL\nNo CNV\n5330\n96.8000\n\n\nA\nnon_CNSL\nNo CNV\n4992\n100.0000\n\n\nB\nCNSL\nDeletion\n29\n0.9600\n\n\nB\nCNSL\nDuplication\n1\n0.0331\n\n\nB\nCNSL\nNo CNV\n2991\n99.0000\n\n\nB\nnon_CNSL\nNo CNV\n2551\n100.0000\n\n\nC\nCNSL\nDeletion\n21\n0.7950\n\n\nC\nCNSL\nNo CNV\n2620\n99.2000\n\n\nC\nnon_CNSL\nNo CNV\n2490\n100.0000\n\n\n\n\n\n\nThe above control table shows that, for all ethnicities, 100% of non-CNSL probes are not detected as having a CNV. Thus, based on these control data and our threshold settings, we can expect a false-positive rate (Type I error) very close to zero.\nIn the CNSL region, ethnicity A has a CNV frequency of 3.2%, followed by B with a frequency of 1.0%, followed lastly by C with a frequency of 0.8%; in terms of CNV type, A is 1.8x more likely to have a deletion than a duplication, B is heavily biased toward deletions, and C is exclusively deletions (n = 21)."
  },
  {
    "objectID": "posts/2024_05_19-emmeans_estimated_marginal_means.html",
    "href": "posts/2024_05_19-emmeans_estimated_marginal_means.html",
    "title": "emmeans: estimated marginal means",
    "section": "",
    "text": "The diet of pigs contributes to their rate of growth and macromolecular composition. Photo reproduced here from m_takahashi under CC BY-ND 2.0 Deed Attribution-NoDerivs 2.0 Generic"
  },
  {
    "objectID": "posts/2024_05_19-emmeans_estimated_marginal_means.html#initial-model-fitting",
    "href": "posts/2024_05_19-emmeans_estimated_marginal_means.html#initial-model-fitting",
    "title": "emmeans: estimated marginal means",
    "section": "Initial model fitting",
    "text": "Initial model fitting\n\nlibrary(tidyverse) |&gt; suppressMessages()  # dplyr, ggplot2, etc.\ntheme_set(theme_light())    # set default themes for ggplot in this doc to add contrast\nlibrary(broom)              # help tidy display and compare of model summary stats\nlibrary(emmeans)            # ~~The estimated marginal means package~~\nlibrary(modelbased)         # https://easystats.github.io/modelbased/articles/estimate_means.html\n\nOur first task is to come up with a good model. Making sure the model is appropriate for the data, experiment, and underlying scientific processes is critical to drawing valid conclusions with emmeans. Constructing good models is equal parts art and science, but I won’t labor too much over the details; any reader is encouraged to seek more in-depth guidance on model construction and evaluation. I will construct and view some models and settle on one of them. The key model diagnostics I will keep an eye on are:\n\nAIC\nBIC\nr-squared\nResiduals vs Fitted (appropriate model)\nScale-Location (homoscedasticity)\nResiduals vs Leverage (outliers / overly-influential points)\n\n\nmod1 &lt;- lm(conc ~ source * factor(percent), data = pigs)\npar(mfrow = c(2,2)); plot(mod1)\n\n\n\n\n\n\n\n\n\nmod2 &lt;- update(mod1, . ~ source + factor(percent))   # no interaction\npar(mfrow = c(2,2)); plot(mod2)\n\n\n\n\n\n\n\n\n\nmap_dfr(list(mod1, mod2), glance, .id = \"model\")\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nmodel\nr.squared\nadj.r.squared\nsigma\nstatistic\np.value\ndf\nlogLik\nAIC\nBIC\ndeviance\ndf.residual\nnobs\n\n\n\n\n1\n0.8083816\n0.6843933\n4.716024\n6.519819\n0.0003417\n11\n-78.38304\n182.7661\n200.5409\n378.0950\n17\n29\n\n\n2\n0.6996728\n0.6343843\n5.075926\n10.716628\n0.0000207\n5\n-84.89886\n183.7977\n193.3688\n592.5957\n23\n29\n\n\n\n\n\n\nThese models have R2 values of 0.808 and 0.700, and adjusted R2 values of 0.684 and 0.634. mod1 is preferable to mod2, suggesting the interaction term is needed. However, a residual-vs-predicted plot of mod2 has a classic “horn” shape (curving and fanning out), indicating a situation where a response transformation might help better than including the interaction.\nAfter trial and error, it turns out that an inverse (reciprocal) transformation, (1/conc) serves really well. (Perhaps this isn’t too surprising, as concentrations are often determined by titration, in which the actual measurements are volumes of some counter-reactant; and these are reciprocally related to concentrations, i.e., amounts per unit volume.) In a real experiment, I would read the experimental protocol to verify this idea, or speak with the scientist conducting the experiment.\nSo here are three more models:\n\nmod3 &lt;- update(mod1, inverse(conc) ~ .)\nmod4 &lt;- update(mod2, inverse(conc) ~ .)     # no interaction\nmod5 &lt;- update(mod4, . ~ source + percent)  # continuous (non-factor) term for percent\npar(mfrow = c(2,2)); plot(mod5)\n\n\n\n\n\n\n\n\n\nmap_dfr(list(mod1, mod2, mod3, mod4, mod5), glance, .id = \"model\")\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nmodel\nr.squared\nadj.r.squared\nsigma\nstatistic\np.value\ndf\nlogLik\nAIC\nBIC\ndeviance\ndf.residual\nnobs\n\n\n\n\n1\n0.8083816\n0.6843933\n4.7160240\n6.519819\n0.0003417\n11\n-78.38304\n182.7661\n200.5409\n378.0950000\n17\n29\n\n\n2\n0.6996728\n0.6343843\n5.0759265\n10.716628\n0.0000207\n5\n-84.89886\n183.7977\n193.3688\n592.5956760\n23\n29\n\n\n3\n0.8175928\n0.6995647\n0.0031259\n6.927099\n0.0002349\n11\n133.86797\n-241.7359\n-223.9611\n0.0001661\n17\n29\n\n\n4\n0.7866455\n0.7402641\n0.0029065\n16.960361\n0.0000005\n5\n131.59563\n-249.1912\n-239.6202\n0.0001943\n23\n29\n\n\n5\n0.7487292\n0.7185767\n0.0030254\n24.831412\n0.0000001\n3\n129.22377\n-248.4475\n-241.6111\n0.0002288\n25\n29\n\n\n\n\n\n\n\n\n\n\n\n\nTip\n\n\n\nI could have used 1/conc as the response variable, but emmeans provides an equivalent inverse() function that will prove more advantageous later.\n\n\nThe residual plots for these models look a lot more like a random scatter of points (and that is good). The R^2 values for these models are 0.818, 0.787, and 0.749, respectively; and the adjusted R^2s are 0.700, 0.740, and 0.719. mod4 has the best adjusted R^2 and will be our choice."
  },
  {
    "objectID": "posts/2024_05_19-emmeans_estimated_marginal_means.html#comparison-to-ordinary-means",
    "href": "posts/2024_05_19-emmeans_estimated_marginal_means.html#comparison-to-ordinary-means",
    "title": "emmeans: estimated marginal means",
    "section": "Comparison to ordinary means",
    "text": "Comparison to ordinary means\nLet’s compare these with the ordinary marginal means (OMMs) on inverse(conc):\n\nwith(pigs, tapply(inverse(conc), source, mean))\n\n      fish        soy       skim \n0.03331687 0.02632333 0.02372024 \n\n\nThe above code is in the style of base R (Dray 2024). Can I write the above ordinary means in Tidyverse/dplyr language?\n\npigs %&gt;%\n  mutate(conc = inverse(conc)) %&gt;%\n  summarize(mean = mean(conc),\n            \"n\" = n(),\n            .by = source)\n\n\n\n\n\nsource\nmean\nn\n\n\n\n\nfish\n0.0333169\n10\n\n\nsoy\n0.0263233\n10\n\n\nskim\n0.0237202\n9\n\n\n\n\n\n\n\nwith(pigs, tapply(inverse(conc), percent, mean))\n\n         9         12         15         18 \n0.03146170 0.02700341 0.02602757 0.02659336 \n\n\n\npigs %&gt;%\n  mutate(conc = inverse(conc)) %&gt;%\n  summarize(mean = mean(conc),\n            \"n\" = n(),\n            .by = percent)\n\n\n\n\n\npercent\nmean\nn\n\n\n\n\n9\n0.0314617\n8\n\n\n12\n0.0270034\n9\n\n\n15\n0.0260276\n7\n\n\n18\n0.0265934\n5\n\n\n\n\n\n\nBoth sets of OMMs are vaguely similar to the corresponding EMMs. However, please note that the EMMs for percent form a decreasing sequence, while the the OMMs decrease but then increase at the end."
  },
  {
    "objectID": "posts/2024_03_02-SF_political_support_data.html",
    "href": "posts/2024_03_02-SF_political_support_data.html",
    "title": "San Francisco political support data shows true alignment",
    "section": "",
    "text": "View of the daytime skyline of San Francisco"
  },
  {
    "objectID": "posts/2024_03_02-SF_political_support_data.html#notes-on-approach",
    "href": "posts/2024_03_02-SF_political_support_data.html#notes-on-approach",
    "title": "San Francisco political support data shows true alignment",
    "section": "Notes on approach",
    "text": "Notes on approach\nThe website sfendorsements.com has collected and cataloged many of the city’s politically active groups’ (often Political Action Committees, or PACs) positions on ballot measures and election races for local positions. I hypothesize that these can be used to deduce the true alignment of these organizations.\nPeter Xu make the code available, and has has previously made google sheets available for the endorsement data, but those are for 2022.\nFor this analysis, I will scrape the 2024 data, tidy it up, and analyze it."
  },
  {
    "objectID": "posts/2024_03_02-SF_political_support_data.html#import-and-tidy-data",
    "href": "posts/2024_03_02-SF_political_support_data.html#import-and-tidy-data",
    "title": "San Francisco political support data shows true alignment",
    "section": "Import and tidy data",
    "text": "Import and tidy data\n\n\n\n\n\n\n\n\n\n\n\nGreat, the data are now tidy, where each row is an observation (a political group), and each column is a variable (race / measure).\n\nWhat are the propositions?\n\n\n\n\nTable 1: Table of proposition names, titles, and descriptive summary\n\n\n\n\n\n\nProp\nTitle\nDescription\n\n\n\n\nProp 1\nMental health care reform including bond measure to fund treatment beds\nProposition 1 would shift the way California spends tax revenue from the Mental Health Services Act to cover addiction treatment and housing. It would also authorize $6.38 billion in bond funding to build residential mental health treatment facilities. Its part of Gov. Gavin Newsoms plan to get people with severe mental illness who are languishing on the streets into housing and treatment.\n\n\nProp A\nAffordable Housing Bonds\nSAN FRANCISCO AFFORDABLE HOUSING BONDS. To construct, develop, acquire, and/or rehabilitate housing, including workforce housing and senior housing, that will be affordable to households ranging from extremely low-income to moderate-income households; shall the City and County of San Francisco issue $300,000,000 in general obligation bonds, subject to independent citizen oversight and regular audits, with a duration of up to 30 years from the time of issuance, an estimated average tax rate of $0.0057/$100 of assessed property value, and projected average annual revenues of $25,000,000?\n\n\nProp B\nPolice Officer Staffing Levels Conditioned on Future Tax Funding\nShall the City amend the Charter to set minimum police officer staffing levels, require the City to budget enough money to pay the number of police officers employed in the previous year, allow the Police Department to introduce amendments to its budget, and set aside funds to pay for police recruitment, all for at least five years, but all if and only if the voters later adopt a new tax or amend an existing tax to fund these requirements?\n\n\nProp C\nReal Estate Transfer Tax Exemption and Office Space Allocation\nShall the City exempt from the real estate transfer tax the first time a property is transferred after being converted from a commercial to residential use, have authority to amend the transfer tax without voter approval but not to increase it, and increase the annual limit on office space available for development by including office space that has been converted to a different use or demolished?\n\n\nProp D\nChanges to Local Ethics Laws\nShall the City amend its ethics laws to further restrict the gifts City employees and officers may accept, expand the definition of conduct by City employees, officers and others that those laws prohibit as bribery, require additional reporting of gifts to City departments, create a uniform set of rules for nonwork activities of City employees and officers instead of rules by each department, create additional penalties for some ethics violations, require ethics training for additional City employees, and change the requirements for making future amendments to some ethics laws?\n\n\nProp E\nPolice Department Policies and Procedures\nShall the City allow the Police Department to hold community meetings before the Police Commission can change policing policies, reduce recordkeeping and reporting requirements for police officers, set new policies for police officers to report use-of-force incidents and to engage in vehicle pursuits, authorize the Police Department to use drones and install public surveillance cameras without further approval, and authorize the Police Department to use new surveillance technology unless the Board of Supervisors disapproves?\n\n\nProp F\nIllegal Substance Dependence Screening and Treatment for Recipients of City Public Assistance\nShall the City require single adults age 65 and under with no dependent children who receive City public assistance benefits and whom the City reasonably suspects are dependent on illegal drugs to participate in screening, evaluation and treatment for drug dependency for those adults to be eligible for most of those benefits?\n\n\nProp G\nOffering Algebra 1 to Eighth Graders\nShall it be City policy to encourage the San Francisco Unified School District to offer Algebra 1 to students by their eighth-grade year and to support the School Districts development of its math curriculum?"
  },
  {
    "objectID": "posts/2024_03_02-SF_political_support_data.html#edit-after-initial-publication",
    "href": "posts/2024_03_02-SF_political_support_data.html#edit-after-initial-publication",
    "title": "San Francisco political support data shows true alignment",
    "section": "Edit after initial publication",
    "text": "Edit after initial publication\n\n\n\n\n\n\nWarning\n\n\n\nMarch 3, 2024 2:15 PM local time\nIt has come to my attention that the scraped data were not 100% complete. The SF Chronicle has posted some endorsements on Ballot Measures E and F that were not included in this analysis. Thanks to Scott for noticing this. As of this moment, I have manually verified and added these to the table."
  },
  {
    "objectID": "posts/2024_03_02-SF_political_support_data.html#analyze-by-ballot-measures",
    "href": "posts/2024_03_02-SF_political_support_data.html#analyze-by-ballot-measures",
    "title": "San Francisco political support data shows true alignment",
    "section": "Analyze by ballot measures",
    "text": "Analyze by ballot measures\n\nWho is recommending what?\n\n\n\n\n\n\n\n\n\nVisually, we can see from this plot that there is significant variation across political organizations on endorsements for props C, E, F, G, and to a lesser extent B; whereas ballot measures 1, A, and D show less variation among political organizations. Also, interestingly, some organizations that offer endorsements did not endorse any position for some (or even most) propositions on the March 5 ballot.\nHowever, for the above plot, the variation is easier to see than if the political organizations were sorted alphabetically because I cheated: I pre-sorted these based on their clustering order. So let’s explore the clustering result.\n\n\nNominal clustering\nClustering is typically a quantitative method, so special accommodations have to be taken for clustering nominal / factor data like these (where there are discrete values that do not have an order over one another). Luckily, we can use the nomclust package (paper), which handles the details as a purpose-built package for hierarchical clustering of nominal (categorical) variables.\nOne weakness of this clustering analysis is that it weights all ballot measures and races as the same. For an individual voter, some topics and races may have more salience or effect, and this analysis cannot take that into account.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nThe underlying data have been updated since the original publication. The clustering is meaningfully different than previously displayed.\n\n\nGenerally speaking, the agglomerative coefficient of a clustering analysis describes the strength of the clustering structure that has been obtained by group average linkage. The coefficient takes values from 0 to 1, and is calculated as the mean of the normalized lengths at which the clusters are formed, e.g. the uniformity lengths displayed on the dendrogram. The more evenly and gradually the categories get broken down into different clusters, the closer to 1 the agglomerative coefficient will be.\nVery tellingly, we see three broad clusters:\n\nOn the left (in red), the fist cluster is the largest cluster (in terms of number of organizations). It contains some heavy hitters, like the San Francisco Chronicle, the Harvey Milk LGBTQ Democratic Club, and the San Francisco Democratic Party.\n\nNext, in the middle (in green), this cluster is defined by SPUR and the YIMBY Action / Sierra Club / SF League of Conservation Voters (the latter three having identical ballot measure endorsements).\nOn the right (in blue) is the cluster defined by the SF Republican Party. It also contains many low-distance neighborhood Democratic Clubs, and GrowSF, a nominally non-partisan and well-funded local 501(c)(4) political advocacy group.\n\n\nPolitical organization distance heat map\nI can also make a heat map of the clustering distance, or dissimilarity.\n\n\n\n\n\n\n\n\n\nThe heat map shows darker, purple-er coloring for pairs of organizations whose set of endorsements are more similar, and lighter, yellow-er colors for organizations with very different endorsements.\n\n\nPolitical organization distance table\n\n\n\n\nTable 2: Table of unique political organization pairs, sorted by clustering proximity\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSome notable large-distance pairs jump out, like:\n\nGreen Party (SF) vs SF Housing Action Coalition (distance = 4.3)\nThe Green Party (SF) versus the middle cluster (Sierra Club, YIMBY Action, SF League of Conservation Voters) (distance = 4.11)\nHarvey Milk LGBTQ Democratic Club vs Chinese American Democratic Club and the United Democratic Club (distance = 2.89)\nSF Labor Council vs Chinese American Democratic Club (distance = 2.75)\n\nThe least-distant org to the SF Republican Party (aside from itself) is GrowSF (distance = 0.238)\n\n\n\nRemarks on clustering by ballot measure\nWe can see from a reasonably well-fitting categorical clustering model that many political organizations have high similarity with the SF Republican Party’s positions on ballot measures, despite having “Democratic” in their name. This result supports the idea that an empirical approach can reveal more about the character of an organization that the words in its name."
  },
  {
    "objectID": "posts/2024_03_02-SF_political_support_data.html#aanlyze-by-candidate-endorsement",
    "href": "posts/2024_03_02-SF_political_support_data.html#aanlyze-by-candidate-endorsement",
    "title": "San Francisco political support data shows true alignment",
    "section": "Aanlyze by candidate endorsement",
    "text": "Aanlyze by candidate endorsement\nGreat, the data are now tidy, where each row is an observation (a political group), and each column is a variable (race).\n\nWho is recommending whom?\n\n\n\n\nTable 3: Table of organization endorsements of candidates for races\n\n\n\n\n\n\nOrganization\nPresident\nUS Senator\nHouse CA-11\nHouse CA-15\nState Senate 11\nState Assembly 17\nState Assembly 19\nSuperior Court Seat 1\nSuperior Court Seat 13\n\n\n\n\nSan Francisco Chronicle\n\nKatie Porter\n\n\n\n\nCatherine Stefani\nMichael Begert\nPatrick Thompson\n\n\nSan Francisco Bay Guardian\n\nBarbara Lee\n\n\n\n\n\nMichael Begert\nPatrick Thompson\n\n\nSF League of Pissed Off Voters\n\nBarbara Lee\n\n\n\n\n\nMichael Begert\nPatrick Thompson\n\n\nBernal Heights Democratic Club\n\nBarbara Lee\n\n\n\n\n\nMichael Begert\nPatrick Thompson\n\n\nSF Women's Political Committee\n\nBarbara Lee\n\n\n\n\nCatherine Stefani\nMichael Begert\nPatrick Thompson\n\n\nSF Berniecrats\n\nBarbara Lee\n\n\n\n\nDavid Lee\nMichael Begert\nPatrick Thompson\n\n\nDistrict 11 Democratic Club\n\n\nNancy Pelosi\n\n\n\n\nMichael Begert\nPatrick Thompson\n\n\nSF Tenants Union\n\n\n\n\n\n\n\nMichael Begert\nPatrick Thompson\n\n\nSF Labor Council\n\n\n\n\n\n\n\nMichael Begert\nPatrick Thompson\n\n\nGreen Party (SF)\n\n\n\n\n\n\n\nMichael Begert\n\n\n\nSan Francisco Rising Action\n\nBarbara Lee\n\n\n\n\n\n\n\n\n\nDemocratic Party (SF)\n\n\nNancy Pelosi\nKevin Mullin\nScott Wiener\nMatt Haney\nCatherine Stefani\nMichael Begert\nPatrick Thompson\n\n\nHarvey Milk LGBTQ Democratic Club\n\nBarbara Lee\nNancy Pelosi\nKevin Mullin\nScott Wiener\nMatt Haney\n\nMichael Begert\nPatrick Thompson\n\n\nUnited Democratic Club\n\nAdam Schiff\nNancy Pelosi\nKevin Mullin\nScott Wiener\nMatt Haney\nCatherine Stefani\nChip Zecher\nJean Myungjin Roland\n\n\nEd M. Lee Asian Pacific Democratic Club\n\nAdam Schiff\nNancy Pelosi\nKevin Mullin\nScott Wiener\nMatt Haney\nCatherine Stefani\nChip Zecher\nJean Myungjin Roland\n\n\nAlice B. Toklas LGBT Democratic Club\n\nBarbara Lee\nNancy Pelosi\nKevin Mullin\nScott Wiener\nMatt Haney\nCatherine Stefani\nChip Zecher\nJean Myungjin Roland\n\n\nChinese American Democratic Club\n\nBarbara Lee\nNancy Pelosi\n\nScott Wiener\nMatt Haney\nCatherine Stefani\nChip Zecher\nJean Myungjin Roland\n\n\nEastern Neighborhoods Democratic Club\n\n\nNancy Pelosi\n\nScott Wiener\nMatt Haney\nCatherine Stefani\nChip Zecher\nJean Myungjin Roland\n\n\nGrowSF\n\n\n\n\nScott Wiener\nMatt Haney\nCatherine Stefani\nChip Zecher\nJean Myungjin Roland\n\n\nSEIU 1021\n\n\nNancy Pelosi\n\nScott Wiener\nMatt Haney\nCatherine Stefani\n\n\n\n\nYIMBY Action\n\n\n\n\nScott Wiener\nMatt Haney\nCatherine Stefani\n\n\n\n\nSierra Club\n\n\n\n\nScott Wiener\nMatt Haney\nCatherine Stefani\n\n\n\n\nSF Housing Action Coalition\n\n\n\n\nScott Wiener\nMatt Haney\nCatherine Stefani\n\n\n\n\nSF Young Democrats\n\nBarbara Lee\nNancy Pelosi\nKevin Mullin\nScott Wiener\nMatt Haney\nCatherine Stefani\n\n\n\n\nHome Sharers Democratic Club\n\nAdam Schiff\nNancy Pelosi\nKevin Mullin\nScott Wiener\nMatt Haney\nCatherine Stefani\n\n\n\n\nNoe Valley Democratic Club\n\n\nNancy Pelosi\n\nScott Wiener\nMatt Haney\n\n\nJean Myungjin Roland\n\n\nSF Young Republicans\n\n\nJason Zeng\n\nYvette Corkrean\n\nArjun Sodhani\n\n\n\n\nSF Republican Party\n\nEric Early\n\n\nYvette Corkrean\nManuel Noris-Barrera\n\nChip Zecher\nJean Myungjin Roland\n\n\n\n\n\n\n\n\n\n\nI’ve cheated again and pre-arranged this table of candidate endorsements by the clustering order. It makes it pretty clear there are a few block. I’ll also do a distance heat map below (which doesn’t say the endorsement names, but shows similarity more clearly.)\n\n\n\n\nTable 4: Unique options per race\n\n\n\n\n\n\nPresident\nUS Senator\nHouse CA-11\nHouse CA-15\nState Senate 11\nState Assembly 17\nState Assembly 19\nSuperior Court Seat 1\nSuperior Court Seat 13\n\n\n\n\n1\n5\n3\n2\n3\n3\n4\n3\n3\n\n\n\n\n\n\n\n\n\n\nNote that races have one to four options among the endorsements made by these political organizations. This is different than the ballot measures (where options were Yes / No / NA). This increase in the number of levels of each factor can affect the clustering.\n\n\n\n\nTable 5: Races where one or more organizations did not endorse anyone (binary: Yes / No)\n\n\n\n\n\n\nPresident\nUS Senator\nHouse CA-11\nHouse CA-15\nState Senate 11\nState Assembly 17\nState Assembly 19\nSuperior Court Seat 1\nSuperior Court Seat 13\n\n\n\n\nYes\nYes\nYes\nYes\nYes\nYes\nYes\nYes\nYes\n\n\n\n\n\n\n\n\n\n\nAlso note that, in every race, there is one option that is the organization declining to endorse anyone. Thus, the number of candidates endorsed is n - 1 the value represented in the table.\nThis means that no organization made any endorsements for President. This fact is not true of any other race.\n\n\nNominal clustering\nVery tellingly, we see two broad clusters and two narrow clusters:\n\n\n\n\n\n\n\n\n\n\nOn the left (in red), the fist cluster is contains some heavy hitters, like the San Francisco Chronicle and the San Francisco Bay Guardian\nNext, in the middle-left (in green), this large cluster contains some notable members, like the San Francisco Democratic Party, the Harvey Milk LGBTQ Democratic Club, GrowSF, and the Sierra Club.\nOn the right (in cyan and purple) are the two clusters for the SF Young Republicans and the SF Republican Party. It is curious these two organizations cluster apart (their fork is pretty high in distance), but looking to the endorsements table can shed light on why: their only common endorsement is for Yvette Corkrean for State Senate 11, and all others are disparate. All these endorsements are so divergent from the other organizations as to earn them their own clusters.\n\n\nPolitical organization distance heat map\nI can also make a heat map of the clustering distance, or dissimilarity.\n\n\n\n\n\n\n\n\n\nFor the two large clusters in the dendrogram, this heat maps show two large squares of low-distance coloring (purple to dark blue) along the diagonal downward and to the right. These square blocks of proximity indicate clusters similarity among the organizations.\nInteresting, there is visually a third square of low distance that suggests the YIMBY Action, Sierra Club, and SF Housing Action Coalition (and cluster relatives) are in a slightly different set than the SF Democratic Party, The Harvey Milk LGBTQ Democratic Club, and GrowSF.\nAlso clearly shown on this heatmap is how divergent the SF Young Republicans and the SF Republican Party are from any other organization analyzed. For example, the NOE Valley Democratic Club is closer (in clustering distance) to the SF Young Republicans and the SF Republican Party than the latter two are to each other.\n\n\nPolitical organization distance table (for candidate recs)\nUse the table below to filer, sort, and rank the clustering model’s distance to make your own comparisons.\n\n\n\n\nTable 6: Table of unique political organization pairs, sorted by clustering proximity on endorsement\n\n\n\n\n\n\n\n\n\n\n\n\n\nRemarks on clustering by candidate endorsement\nThe race endorsements data set contains more options in general, allowing each organization for vary significantly in its character. We see this born out in the clustering dendrogram with more divergent clusters than seen in the ballot measure analysis.\nWhile the candidate endorsement clustering didn’t reveal any surprising similarities (in the author’s opinion), it did show how divergent the SF Republican Party and the SF Young Republicans are from the rest of the organizations, in terms of candidate endorsements."
  },
  {
    "objectID": "posts/2024_03_02-SF_political_support_data.html#conclusions",
    "href": "posts/2024_03_02-SF_political_support_data.html#conclusions",
    "title": "San Francisco political support data shows true alignment",
    "section": "Conclusions",
    "text": "Conclusions\nThe nominal clustering analysis worked well at identifying similar groups and quantifying relative similarity. One weakness of this clustering analysis is that it weights all ballot measures and races as the same. For an individual voter, some topics and races may have more salience or effect, and this analysis cannot take that into account.\nBroadly, these results support the idea that an empirical approach can reveal more about the character of an organization than the words in its name, and that this analysis is useful for determining action-based political alignment."
  },
  {
    "objectID": "posts/2024_01_22-scRNA-seq.html",
    "href": "posts/2024_01_22-scRNA-seq.html",
    "title": "scRNA-seq Analysis: Messy Mouse Brain",
    "section": "",
    "text": "In this data analysis exercise, I analyze a mysterious 10x single-cell RNA-seq data file, which consists of a collection of single cells from an unknown tissue with unknown cell types. This is standard 10x mouse single cell RNA-seq data output and we are curious what type of tissue and cells these are.\n\n\n\nQuality control and filtering. Perform a basic QC of the data, explaining the rationale behind each step and the choice of parameters. How do the data look? What would you examine before moving forward to downstream analysis? Why?\nDimension reduction and visualization. How can we make sense of all this data? Perform dimensional reduction with any methods at your choice, explaining the rationale behind the choice and caveats of other potential dimensional reduction methods. Plot these out in a suitable visualization(s).\nMarker genes, clusters tissue, and cell types. Identify genes and gene-sets that define the tissue and are differentially expressed. What tissue are we looking at? How many cell types are present, and what kind?\n\nCell states can be very dynamic within the same cell type. For some of the most abundant cell types, feel free to dig deeper on any observed heterogeneity and the biological underpinning."
  },
  {
    "objectID": "posts/2024_01_22-scRNA-seq.html#introduction",
    "href": "posts/2024_01_22-scRNA-seq.html#introduction",
    "title": "scRNA-seq Analysis: Messy Mouse Brain",
    "section": "",
    "text": "In this data analysis exercise, I analyze a mysterious 10x single-cell RNA-seq data file, which consists of a collection of single cells from an unknown tissue with unknown cell types. This is standard 10x mouse single cell RNA-seq data output and we are curious what type of tissue and cells these are.\n\n\n\nQuality control and filtering. Perform a basic QC of the data, explaining the rationale behind each step and the choice of parameters. How do the data look? What would you examine before moving forward to downstream analysis? Why?\nDimension reduction and visualization. How can we make sense of all this data? Perform dimensional reduction with any methods at your choice, explaining the rationale behind the choice and caveats of other potential dimensional reduction methods. Plot these out in a suitable visualization(s).\nMarker genes, clusters tissue, and cell types. Identify genes and gene-sets that define the tissue and are differentially expressed. What tissue are we looking at? How many cell types are present, and what kind?\n\nCell states can be very dynamic within the same cell type. For some of the most abundant cell types, feel free to dig deeper on any observed heterogeneity and the biological underpinning."
  },
  {
    "objectID": "posts/2024_01_22-scRNA-seq.html#data-description",
    "href": "posts/2024_01_22-scRNA-seq.html#data-description",
    "title": "scRNA-seq Analysis: Messy Mouse Brain",
    "section": "Data description",
    "text": "Data description\n\ncounts: matrix matrix.mtx.gz\ncell barcodes: barcodes.tsv.gz\ngene features: features.tsv.gz"
  },
  {
    "objectID": "posts/2024_01_22-scRNA-seq.html#features",
    "href": "posts/2024_01_22-scRNA-seq.html#features",
    "title": "scRNA-seq Analysis: Messy Mouse Brain",
    "section": "Features",
    "text": "Features\n\nVlnPlot(koala, features = c(\"nCount_RNA\", \"nFeature_RNA\"), pt.size = .1) +\n  geom_hline(yintercept = 1100) +\n  geom_hline(yintercept = 2000, linetype = \"dashed\")\n\nWarning: Default search for \"data\" layer in \"RNA\" assay yielded no results;\nutilizing \"counts\" layer instead.\n\n\n\n\n\n\n\n\n\n\nkoala@meta.data$nCount_RNA %&gt;%\n  as_tibble() %&gt;%\n  ggplot(aes(x = \"koala\", y = value)) +\n  geom_violin(fill = \"pink\") + geom_jitter(size = 0.2, alpha = 0.5) +\n  labs(y = \"nCount_RNA\") +\n  theme_bw()\n\n\n\n\n\n\n\n\nThese are both skewed distributions, but RNA counts is more extremely skewed than features. Let’s see how they scatter:\n\nfeatures_by_counts_scatter_table &lt;- bind_rows(koala$nCount_RNA, koala$nFeature_RNA) %&gt;%\n  t() %&gt;%\n  as_tibble() %&gt;%\n  dplyr::rename(\"nCount_RNA\" = 1, \"nFeature_RNA\" = 2)\n\nfeatures_by_counts_scatter &lt;- FeatureScatter(\n  koala, feature1 = \"nCount_RNA\", feature2 = \"nFeature_RNA\") #+\n  # stat_smooth(formula = \"y ~ x*log(x)\", method = glm) +\n  # stat_smooth(formula = \"y ~ log(x)\", method = glm, color = \"yellow\") +\n  # geom_smooth(formula = y ~ (Vm * x)/(K + x),\n  #             #data = features_by_counts_scatter_table,\n  #             method = \"nls\", color = \"green\", se = FALSE,\n  #             method.args = list(start = c(K = 10000, Vm = 6000)))\n\nfeatures_by_counts_scatter\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfeatures_by_counts_scatter + scale_x_log10() + scale_y_log10()\n\n\n\n\n\n\n\n\nThe feature count appears to increase approximately logarithmicly with RNA count. The Pearson correlation is 0.95, but the non linearity indicates the relationship may be stronger than the correlation coefficient indicates. This observation is consistent with an RNA-seq experiment wherein there is a fixed number of potentially expressed RNAs and the number of detected transcripts begins to saturate the and approach the maximum number able to be detected.\nThe log-log transformed axis plot shows: - There are only a few cells/droplets with fewer than 300 RNA counts, which is great for an scRNA-seq experiment. - There is still some curve to the line, meaning the relationship is more trancendental (not simply a power-law, like polynomial)."
  },
  {
    "objectID": "posts/2024_01_22-scRNA-seq.html#filter-on-feature-count",
    "href": "posts/2024_01_22-scRNA-seq.html#filter-on-feature-count",
    "title": "scRNA-seq Analysis: Messy Mouse Brain",
    "section": "Filter on feature count",
    "text": "Filter on feature count\nI am going to keep droplets (“cells”) with 1100 features or fewer\n\nkoala_filtered &lt;- subset(koala, nFeature_RNA &lt;= 1100)\n\nLet’s quickly confirm that the filtering changed the number of features throughout the Seurat object by using Seurat size commands to query the number of observations in the pre-filter and post-filter Seurat objects:\n\nlength(koala$orig.ident); length(koala_filtered$orig.ident)\n\n[1] 4449\n\n\n[1] 1410\n\n\nThe feature count decreased from 4449 to 1410 upon filtering.\n(The orig.ident matrix within the Seurat object stores the cell metadata, and counting its number of entries can tell us number of unique observations.)\n\nhead(koala_filtered$orig.ident)\n\nATGGCTGTCGATTTGA-1 GGTACAAAGTTCCTGC-1 ATTCAACCATAGGCGA-1 TCTCCTCGTCAATACG-1 \n             koala              koala              koala              koala \nTTTCTCACAGCACCAT-1 TTCCTTGAGGATCACT-1 \n             koala              koala \nLevels: koala\n\n\n\nFeatures\n\nVlnPlot(koala_filtered, features = c(\"nCount_RNA\", \"nFeature_RNA\"), pt.size = .1)\n\nWarning: Default search for \"data\" layer in \"RNA\" assay yielded no results;\nutilizing \"counts\" layer instead.\n\n\n\n\n\n\n\n\n\nPost filtering, the RNA count plot looks more typical, with one major “peak” and a long tail. The features plot looks fairly evenly distributed because of the filtering cut off so close to the “peak” of the distribution, but I hypothesize it was necessary due to the hypothesized doublet peak right at 2000 features per droplet right near by.\n\nfeatures_by_counts_scatter_table &lt;- bind_rows(koala_filtered$nCount_RNA,\n                                              koala_filtered$nFeature_RNA) %&gt;%\n  t() %&gt;%\n  as_tibble() %&gt;%\n  dplyr::rename(\"nCount_RNA\" = 1, \"nFeature_RNA\" = 2)\n\nfeatures_by_counts_scatter &lt;- FeatureScatter(\n  koala_filtered, feature1 = \"nCount_RNA\", feature2 = \"nFeature_RNA\") #+\n  # stat_smooth(formula = \"y ~ x*log(x)\", method = glm) +\n  # stat_smooth(formula = \"y ~ log(x)\", method = glm, color = \"yellow\") +\n  # geom_smooth(formula = y ~ (Vm * x)/(K + x),\n  #             #data = features_by_counts_scatter_table,\n  #             method = \"nls\", color = \"green\", se = FALSE,\n  #             method.args = list(start = c(K = 10000, Vm = 6000)))\n\nfeatures_by_counts_scatter"
  },
  {
    "objectID": "posts/2024_01_22-scRNA-seq.html#normalization",
    "href": "posts/2024_01_22-scRNA-seq.html#normalization",
    "title": "scRNA-seq Analysis: Messy Mouse Brain",
    "section": "Normalization",
    "text": "Normalization\n\nkoala_norm &lt;- NormalizeData(koala_filtered)\n\nNormalizing layer: counts\n\n\nThe above is a log-normalization. This procedure divides each feature’s abundance by the sample mean for that cell and takes the natural log (log() in R).\n\nkoala_features &lt;- FindVariableFeatures(koala_norm, selection.method = \"vst\")\n\nFinding variable features for layer counts\n\n\nThe vst method is the default feature selection method, but I’m just making it explicit, because a later (cluster identification) package refers to this fact. The variance stabilizing transformation makes the variances (standard deviations) more uniform and stops them from being related to the mean value within a group, which facilitates downstream linear regression-based techniques (e.g. PCA)."
  },
  {
    "objectID": "posts/2024_01_22-scRNA-seq.html#feature-selection-by-pca",
    "href": "posts/2024_01_22-scRNA-seq.html#feature-selection-by-pca",
    "title": "scRNA-seq Analysis: Messy Mouse Brain",
    "section": "Feature Selection by PCA",
    "text": "Feature Selection by PCA\n\ntop_koala_features &lt;- head(VariableFeatures(koala_features), 10)\n\ntop_koala_features_plot &lt;- VariableFeaturePlot(koala_features) %&gt;%\n  LabelPoints(points = top_koala_features, repel = TRUE)\n\ntop_koala_features_plot\n\nWarning: Transformation introduced infinite values in continuous x-axis\n\n\n\n\n\n\n\n\n\n\ntop_koala_features\n\n [1] \"Nrxn1\"  \"Ank3\"   \"Nkain2\" \"Sntg1\"  \"Glul\"   \"Rspo3\"  \"Reln\"   \"Aoah\"  \n [9] \"Slc1a2\" \"Spp1\"  \n\n\nThe most highly expressed gene is MEG3 (maternally expressed 3), a maternally expressed, imprinted long non-coding RNA (lncRNA). This likely means the tissue analyzed here is an egg cell, recently fertilized egg, or young embryo."
  },
  {
    "objectID": "posts/2024_01_22-scRNA-seq.html#scale",
    "href": "posts/2024_01_22-scRNA-seq.html#scale",
    "title": "scRNA-seq Analysis: Messy Mouse Brain",
    "section": "Scale",
    "text": "Scale\nPre-process to center at 0 and make sd = 1 prior to PCA.\n\ngene_names &lt;- rownames(koala_features)\nkoala_features &lt;- ScaleData(koala_features, features = gene_names)\n\nCentering and scaling data matrix"
  },
  {
    "objectID": "posts/2024_01_22-scRNA-seq.html#run-pca",
    "href": "posts/2024_01_22-scRNA-seq.html#run-pca",
    "title": "scRNA-seq Analysis: Messy Mouse Brain",
    "section": "Run PCA",
    "text": "Run PCA\nLinear dimensionality reduction\nI’m going to go with all features and use the Elbow plot to determine which features are still important after this step.\n\nkoala_pca &lt;- RunPCA(koala_features, features = VariableFeatures(koala_features) )\n\n\nVisualize PCA Results\n\nprint(koala_pca[[\"pca\"]], dims = 1:4)\n\nPC_ 1 \nPositive:  Ptprb, Lrmda, Prkg1, Plekhg1, Cemip2, Plpp1, Rasal2, Meis2, Plxnc1, Adam23 \n       Sptbn1, Stox2, Ets1, Mrc1, F8, Fyn, Syne1, Hecw2, Slc9a9, Fbxl7 \nNegative:  Pck1, Ppara, Ttc39c, Gm29966, G6pc, Abcc2, Mlxipl, Errfi1, Egfr, Gfra1 \n       Ahsg, Neat1, Trf, Slc27a2, Fam214a, Slc38a3, Slc7a2, Dpyd, Hc, Alas1 \nPC_ 2 \nPositive:  Nrxn1, Reln, Rbms3, Dcn, Ntm, Bmp5, Lhfp, Abcc9, Arhgap24, Nkain2 \n       Pde3a, Tln2, Ngf, Sox5, Pde1a, Robo2, Hand2os1, Hgf, Ccbe1, Agtr1a \nNegative:  Ptprb, Rasal2, Cemip2, Plpp1, Adam23, Stox2, Fyn, Mrc1, Kdr, F8 \n       Prickle1, Dab2, Adgrf5, Cyyr1, Plcb4, Hecw2, Maf, Arhgap31, Nrp1, Cd55 \nPC_ 3 \nPositive:  Slc8a1, Elmo1, Ptprc, Runx1, Cd5l, Clec4f, Dock2, Adgb, Entpd1, Dock10 \n       Aoah, Gm26740, Bank1, Adgre1, Arhgap15, Ikzf1, E230029C05Rik, Epsti1, Adgre4, Cd163 \nNegative:  Ptprb, Plekhg1, Cemip2, Meis2, Tshz2, Prkg1, Pard3b, Plpp1, Adgrl2, Plxnc1 \n       Stox2, Rasal2, F8, Prickle1, Kdr, Hecw2, Fbxl7, Sptbn1, Adam23, Syne1 \nPC_ 4 \nPositive:  Gm2682, Skap1, Themis, Cd226, Satb1, Kcnq5, Ms4a4b, Grap2, Dock2, Arhgap15 \n       Bcl11b, Ripor2, Inpp4b, Ipcef1, Il7r, Atp8a2, Lef1, Camk4, Cyfip2, Ikzf3 \nNegative:  Clec4f, Slc8a1, Frmd4b, Aoah, Slc40a1, Cd5l, Tcf7l2, Kcnk13, Tbxas1, Adgb \n       Myo9a, Hdac9, Entpd1, Pde7b, Cd86, Adgre1, Lgmn, Ksr2, Zeb2, E230029C05Rik \n\n\nQuick print out all of the positive and negative features in the top four fitted principle components.\n\n(dim_reduc_plot &lt;- VizDimLoadings(koala_pca, dims = 1:4, reduction = \"pca\") &\n  theme(axis.text.y = element_text(size = 5)))\n\n\n\n\n\n\n\n\n\n(pc_1_2_scatterplot &lt;- DimPlot(koala_pca, reduction = \"pca\"))\n\n\n\n\n\n\n\n\n\nDimHeatmap(koala_pca, dims = 1:15)"
  },
  {
    "objectID": "posts/2024_01_22-scRNA-seq.html#determine-the-dimensionality-of-the-dataset",
    "href": "posts/2024_01_22-scRNA-seq.html#determine-the-dimensionality-of-the-dataset",
    "title": "scRNA-seq Analysis: Messy Mouse Brain",
    "section": "Determine the dimensionality of the dataset",
    "text": "Determine the dimensionality of the dataset\nUsing jackstraw\n\nkoala_js &lt;- JackStraw(koala_pca, num.replicate = 100)\n\n\nkoala_js_score &lt;- ScoreJackStraw(koala_js, dims = 1:20)\n\n\nJackStrawPlot(koala_js_score, dims = 1:20)\n\nWarning: Removed 28212 rows containing missing values (`geom_point()`).\n\n\n\n\n\n\n\n\n\n\nElbowPlot(koala_js_score)\n\n\n\n\n\n\n\n\nDeciding that the elbow occurs at 9 principle components, so should retain dimensions 1 to 10. However, due to the strange behavior of this dataset, I am going to run FindClusters() on all 20 principle components and see what happens. It may confirm my findings without intervention."
  },
  {
    "objectID": "posts/2024_01_22-scRNA-seq.html#identify-cluster-biomarkers",
    "href": "posts/2024_01_22-scRNA-seq.html#identify-cluster-biomarkers",
    "title": "scRNA-seq Analysis: Messy Mouse Brain",
    "section": "Identify cluster biomarkers",
    "text": "Identify cluster biomarkers\n\nCluster 3\n\nkoala_umap_cluster_4 &lt;- FindMarkers(koala_umap, ident.1 = 4, min.pct = 0.25)\nhead(koala_umap_cluster_4, n = 10)\n\n               p_val avg_log2FC pct.1 pct.2    p_val_adj\nmt-Co2  7.527182e-31  1.2245951 0.985 0.670 1.311687e-26\nMalat1  1.723282e-29 -0.7632667 1.000 0.999 3.002992e-25\nmt-Co1  5.977587e-27  1.1122765 0.971 0.790 1.041654e-22\nGm42418 3.151082e-26  0.5404391 1.000 1.000 5.491075e-22\nCamk1d  3.573460e-26  0.8369697 0.993 0.950 6.227112e-22\nCmss1   5.424007e-26  0.8626727 0.993 0.932 9.451874e-22\nApoe    6.872890e-26  1.2087947 0.919 0.635 1.197670e-21\nmt-Nd2  8.808615e-25  1.2449740 0.897 0.524 1.534989e-20\nStab2   1.176373e-24  0.8467994 0.875 0.327 2.049947e-20\nmt-Atp6 1.815371e-24  1.1416188 0.949 0.667 3.163465e-20\n\n# find all markers distinguishing cluster 5 from clusters 0 through 3\nkoala_umap_cluster_4_diff &lt;- FindMarkers(koala_umap, ident.1 = 4, ident.2 = 0:3, min.pct = 0.25)\nhead(koala_umap_cluster_4_diff, n = 10)\n\n               p_val avg_log2FC pct.1 pct.2    p_val_adj\nmt-Co2  9.312486e-27  1.1041138 0.985 0.678 1.622794e-22\nMalat1  2.704755e-26 -0.7462688 1.000 0.999 4.713307e-22\nGm42418 3.811073e-26  0.5477534 1.000 1.000 6.641176e-22\nCamk1d  1.292259e-25  0.8488007 0.993 0.945 2.251891e-21\nApoe    9.025020e-25  1.1895949 0.919 0.622 1.572700e-20\nCmss1   2.670717e-24  0.8297866 0.993 0.925 4.653991e-20\nmt-Co1  7.586908e-23  0.9905739 0.971 0.803 1.322095e-18\nLars2   1.597419e-22  0.8533974 1.000 0.832 2.783662e-18\nmt-Atp6 2.901863e-20  0.9995626 0.949 0.680 5.056787e-16\nmt-Nd2  3.537213e-20  1.0947916 0.897 0.557 6.163948e-16\n\n\n\n\nAll marker analysis\n\n# find markers for every cluster compared to all other cells, keep only the positive ones\nkoala_umap_markers &lt;- FindAllMarkers(koala_umap, only.pos = TRUE, min.pct = 0.25, logfc.threshold = 0.25)\n\nCalculating cluster 0\n\n\nCalculating cluster 1\n\n\nCalculating cluster 2\n\n\nCalculating cluster 3\n\n\nCalculating cluster 4\n\n\nCalculating cluster 5\n\n\nCalculating cluster 6\n\n\nCalculating cluster 7\n\n\nCalculating cluster 8\n\nkoala_umap_markers_10_per_cluster &lt;- koala_umap_markers %&gt;%\n  group_by(cluster) %&gt;%\n  slice_max(n = 10, order_by = avg_log2FC)\nkoala_umap_markers_10_per_cluster\n\n# A tibble: 90 × 7\n# Groups:   cluster [9]\n       p_val avg_log2FC pct.1 pct.2 p_val_adj cluster gene    \n       &lt;dbl&gt;      &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;     &lt;dbl&gt; &lt;fct&gt;   &lt;chr&gt;   \n 1 6.94e- 80       3.90 0.488 0.066 1.21e- 75 0       Bmp6    \n 2 2.11e- 46       3.86 0.281 0.03  3.68e- 42 0       Col13a1 \n 3 8.78e- 66       3.67 0.406 0.052 1.53e- 61 0       Galnt18 \n 4 1.10e-126       3.61 0.73  0.113 1.93e-122 0       Adam23  \n 5 2.37e- 48       3.60 0.313 0.04  4.13e- 44 0       Dnase1l3\n 6 5.07e- 46       3.56 0.294 0.035 8.83e- 42 0       Srgap1  \n 7 6.73e- 42       3.52 0.283 0.039 1.17e- 37 0       Clec4g  \n 8 6.99e-172       3.49 0.929 0.186 1.22e-167 0       Stab2   \n 9 4.34e- 77       3.40 0.488 0.069 7.57e- 73 0       Rasgrp3 \n10 4.35e- 46       3.34 0.322 0.048 7.59e- 42 0       Gm15675 \n# ℹ 80 more rows\n\n\n\nkoala_umap_markers_10_per_nest &lt;- koala_umap_markers_10_per_cluster %&gt;%\n  dplyr::select(gene) %&gt;%\n  nest() %&gt;%\n  mutate(data = as.list(map(data, ~.x[[1]] )))\n\nAdding missing grouping variables: `cluster`\n\n\n\n\nSet up function for all\n\ngo_query_fun &lt;- function(gene_name_vector){\n  go_result &lt;- gost(query = gene_name_vector,\n                    organism = \"mmusculus\", ordered_query = FALSE, \n                    multi_query = FALSE, significant = TRUE, exclude_iea = FALSE, \n                    measure_underrepresentation = FALSE, evcodes = FALSE, \n                    user_threshold = 0.05, correction_method = \"fdr\", \n                    domain_scope = \"annotated\", custom_bg = NULL, \n                    numeric_ns = \"\", sources = \"GO:MF\", as_short_link = FALSE)\n  \n  return(go_result)\n}\n\n\n\nRun the functon in df env\n\nkoala_umap_markers_10_per_nest_go_ano &lt;- koala_umap_markers_10_per_nest %&gt;% \n  mutate(\"go_table\" = map(data, go_query_fun))\n\nNo results to show\nPlease make sure that the organism is correct or set significant = FALSE\nNo results to show\nPlease make sure that the organism is correct or set significant = FALSE\n\n\n\nkoala_umap_markers_10_go_df &lt;- koala_umap_markers_10_per_nest_go_ano %&gt;%\n  unnest(go_table) %&gt;%\n  filter(row_number() %% 2 != 0) %&gt;%\n  unnest(go_table) %&gt;%\n  relocate(term_name, .after = cluster) %&gt;%\n  arrange(cluster, p_value) %&gt;%\n  select(!c(\"data\", \"query\", \"significant\"))\nhead(koala_umap_markers_10_go_df)\n\n# A tibble: 6 × 13\n# Groups:   cluster [1]\n  cluster term_name     p_value term_size query_size intersection_size precision\n  &lt;fct&gt;   &lt;chr&gt;           &lt;dbl&gt;     &lt;int&gt;      &lt;int&gt;             &lt;int&gt;     &lt;dbl&gt;\n1 0       virus corece…  0.0317         1         10                 1       0.1\n2 0       polysacchari…  0.0453        26         10                 1       0.1\n3 0       protein-lipi…  0.0453        30         10                 1       0.1\n4 0       lipoprotein …  0.0453        30         10                 1       0.1\n5 0       BMP receptor…  0.0453        14         10                 1       0.1\n6 0       transmembran…  0.0453        21         10                 1       0.1\n# ℹ 6 more variables: recall &lt;dbl&gt;, term_id &lt;chr&gt;, source &lt;chr&gt;,\n#   effective_domain_size &lt;int&gt;, source_order &lt;int&gt;, parents &lt;list&gt;\n\n\n\n\nAll marker analysis\nwithout requiring uniqueness\nLet’s run the analysis without requiring Variable genes be uniquely upregulated or downregulated in each cluster.\n\n# find markers for every cluster, keep only the positive ones\nkoala_umap_markers &lt;- FindAllMarkers(koala_umap, only.pos = FALSE, min.pct = 0.25, logfc.threshold = 0.25)\n\nCalculating cluster 0\n\n\nCalculating cluster 1\n\n\nCalculating cluster 2\n\n\nCalculating cluster 3\n\n\nCalculating cluster 4\n\n\nCalculating cluster 5\n\n\nCalculating cluster 6\n\n\nCalculating cluster 7\n\n\nCalculating cluster 8\n\nkoala_umap_markers_10_per_cluster &lt;- koala_umap_markers %&gt;%\n  group_by(cluster) %&gt;%\n  slice_max(n = 10, order_by = avg_log2FC)\nkoala_umap_markers_10_per_cluster\n\n# A tibble: 90 × 7\n# Groups:   cluster [9]\n       p_val avg_log2FC pct.1 pct.2 p_val_adj cluster gene    \n       &lt;dbl&gt;      &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;     &lt;dbl&gt; &lt;fct&gt;   &lt;chr&gt;   \n 1 6.94e- 80       3.90 0.488 0.066 1.21e- 75 0       Bmp6    \n 2 2.11e- 46       3.86 0.281 0.03  3.68e- 42 0       Col13a1 \n 3 8.78e- 66       3.67 0.406 0.052 1.53e- 61 0       Galnt18 \n 4 1.10e-126       3.61 0.73  0.113 1.93e-122 0       Adam23  \n 5 2.37e- 48       3.60 0.313 0.04  4.13e- 44 0       Dnase1l3\n 6 5.07e- 46       3.56 0.294 0.035 8.83e- 42 0       Srgap1  \n 7 6.73e- 42       3.52 0.283 0.039 1.17e- 37 0       Clec4g  \n 8 6.99e-172       3.49 0.929 0.186 1.22e-167 0       Stab2   \n 9 4.34e- 77       3.40 0.488 0.069 7.57e- 73 0       Rasgrp3 \n10 4.35e- 46       3.34 0.322 0.048 7.59e- 42 0       Gm15675 \n# ℹ 80 more rows\n\n\n\nkoala_umap_markers_10_per_nest &lt;- koala_umap_markers_10_per_cluster %&gt;%\n  dplyr::select(gene) %&gt;%\n  nest() %&gt;%\n  mutate(data = as.list(map(data, ~.x[[1]] )))\n\nAdding missing grouping variables: `cluster`\n\n\n\n\nRun the functon in df env\n\nkoala_umap_markers_10_per_nest_go_ano &lt;- koala_umap_markers_10_per_nest %&gt;% \n  mutate(\"go_table\" = map(data, go_query_fun))\n\nNo results to show\nPlease make sure that the organism is correct or set significant = FALSE\nNo results to show\nPlease make sure that the organism is correct or set significant = FALSE\n\n\n\nkoala_umap_2way_markers_10_go_df &lt;- koala_umap_markers_10_per_nest_go_ano %&gt;%\n  unnest(go_table) %&gt;%\n  filter(row_number() %% 2 != 0) %&gt;%\n  unnest(go_table) %&gt;%\n  relocate(term_name, .after = cluster) %&gt;%\n  arrange(cluster, desc(p_value))\nhead(koala_umap_markers_10_go_df)\n\n# A tibble: 6 × 13\n# Groups:   cluster [1]\n  cluster term_name     p_value term_size query_size intersection_size precision\n  &lt;fct&gt;   &lt;chr&gt;           &lt;dbl&gt;     &lt;int&gt;      &lt;int&gt;             &lt;int&gt;     &lt;dbl&gt;\n1 0       virus corece…  0.0317         1         10                 1       0.1\n2 0       polysacchari…  0.0453        26         10                 1       0.1\n3 0       protein-lipi…  0.0453        30         10                 1       0.1\n4 0       lipoprotein …  0.0453        30         10                 1       0.1\n5 0       BMP receptor…  0.0453        14         10                 1       0.1\n6 0       transmembran…  0.0453        21         10                 1       0.1\n# ℹ 6 more variables: recall &lt;dbl&gt;, term_id &lt;chr&gt;, source &lt;chr&gt;,\n#   effective_domain_size &lt;int&gt;, source_order &lt;int&gt;, parents &lt;list&gt;\n\n\n\nwrite_csv(koala_umap_2way_markers_10_go_df, \"koala_umap_2way_markers_10_go_bdf.csv\")\n\n\nkoala_umap_cluster_7 &lt;- FindMarkers(koala_umap, ident.1 = 7, min.pct = 0.25)\nhead(koala_umap_cluster_7, n = 10)[0]\n\ndata frame with 0 columns and 10 rows\n\n\n\n\nCluster 7\n\nkoala_umap_cluster_unique_7 &lt;- FindMarkers(koala_umap, ident.1 = 7, ident.2 = (1:8)[!(1:8) == 7], min.pct = 0.5)\nhead(as_tibble(koala_umap_cluster_unique_7, rownames = \"gene\"), n = 20)\n\n# A tibble: 20 × 6\n   gene        p_val avg_log2FC pct.1 pct.2 p_val_adj\n   &lt;chr&gt;       &lt;dbl&gt;      &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;     &lt;dbl&gt;\n 1 Mecom    2.22e-75       7.23 0.5   0.011  3.86e-71\n 2 Jam2     5.96e-62       4.89 0.587 0.029  1.04e-57\n 3 Heg1     4.21e-42       4.27 0.652 0.071  7.33e-38\n 4 Cyyr1    3.32e-41       4.26 0.674 0.08   5.78e-37\n 5 Pecam1   1.37e-38       4.35 0.587 0.061  2.39e-34\n 6 Ptprb    1.13e-35       2.97 0.891 0.181  1.96e-31\n 7 Plcb4    5.14e-32       3.71 0.543 0.063  8.96e-28\n 8 Meis2    9.37e-32       3.24 0.717 0.122  1.63e-27\n 9 Cdh13    1.61e-30       4.63 0.5   0.058  2.81e-26\n10 Prex2    7.70e-28       3.09 0.761 0.176  1.34e-23\n11 Cemip2   2.88e-27       3.52 0.674 0.126  5.02e-23\n12 Crim1    2.23e-26       3.40 0.652 0.129  3.88e-22\n13 Adgrf5   3.18e-25       3.29 0.522 0.076  5.54e-21\n14 Calcrl   9.21e-21       2.85 0.609 0.132  1.61e-16\n15 Arhgap31 8.63e-20       3.32 0.5   0.092  1.50e-15\n16 Il6st    3.91e-18       2.71 0.652 0.183  6.82e-14\n17 Eng      6.85e-18       2.88 0.5   0.099  1.19e-13\n18 Ptprm    1.08e-15       2.31 0.587 0.152  1.88e-11\n19 Plekhg1  2.40e-15       2.48 0.5   0.113  4.18e-11\n20 Arl15    6.65e-14       2.69 0.717 0.325  1.16e- 9\n\n\n## postsynaptic density protein 95 clustering 6 2 .00 &gt; 100 + 5.20E-06 8.18E-03 ## postsynaptic membrane organization 31 2 .01 &gt; 100 + 9.74E-05 3.00E-02 ## postsynaptic density organization 28 2 .01 &gt; 100 + 8.03E-05 2.81E-02 ## postsynaptic specialization organization 34 2 .02 &gt; 100 + 1.16E-04 3.45E-02 ## NMDA glutamate receptor clustering 6 2 .00 &gt; 100 + 5.20E-06 7.43E-03 ## neurotransmitter-gated ion channel clustering 15 2 .01 &gt; 100 + 2.52E-05 1.80E-02 ## positive regulation of synapse maturation 10 2 .00 &gt; 100 + 1.22E-05 1.38E-02 ## regulation of synapse maturation 23 2 .01 &gt; 100 + 5.54E-05 2.64E-02\nCluster 7 looks like it may be"
  },
  {
    "objectID": "posts/2024_01_22-scRNA-seq.html#using-garnett",
    "href": "posts/2024_01_22-scRNA-seq.html#using-garnett",
    "title": "scRNA-seq Analysis: Messy Mouse Brain",
    "section": "Using garnett",
    "text": "Using garnett\nGarnett is a semi-supervised method of cell-type assignment for single cell data that is compatible with Seurat objects. It consists of four components. First, Garnett defines a markup language for specifying cell types using the genes that they specifically express. The markup language is hierarchical in that a cell type can have subtypes (for example, CD4+ and CD8+ are subsets of T cells). Second, Garnett includes a parser that processes the markup file together with a single-cell dataset, identifying representative cells bearing markers that unambiguously identify them as one of the cell types defined in the file. Third, Garnett trains a classifier that recognizes additional cells as belonging to each cell type based on their similarity to representative cells, similar to an approach that our groups recently developed for annotating a single-cell mouse atlas of chromatin accessibility. Garnett does not require that cells be organized into clusters, but it can optionally extend classifications to additional cells using either its own internal clustering routines or those of other tools. Finally, Garnett provides a method for applying a classifier trained on one dataset to rapidly annotate additional datasets.\n\nClassifier\nGarnett’s directory of already-available classifiers indicates that one is available for Mouse Brain and spinal cord tissues, which I hypothesize is the primary content of this sample I am analyzed based on the gene ontology terms displayed and remarked upon in the previous section. The data are from Zeisel’s and Linnarrson’s et al. “Molecular Architecture of the Mouse Nervous System” and were trained and deposited by Pliner & Trapnell et al..\n\n\n# download.file(\"https://cole-trapnell-lab.github.io/garnett/classifiers/mmBrain_20191017.RDS\",\n#               \"mmBrain_20191017.RDS\")\ndownload.file(\"https://cole-trapnell-lab.github.io/garnett/marker_files/mmBrain_markers.txt\",\n              \"mmBrain_markers.txt\")\n\n\n\nPrepare scRNA-seq data for garnett\n\n# use Seurat to convert Seurat dimensionally reduced object to a CellDataSet object\nkoala_umap_cds &lt;- as.CellDataSet(koala_umap)\n\n# generate size factors for normalization later\nkoala_umap_cds &lt;- estimateSizeFactors(koala_umap_cds)\n\n\n\nPrepare trained classified from heirarchical marker gene file\n\nlibrary(org.Mm.eg.db)\n\nLoading required package: AnnotationDbi\n\n\nLoading required package: IRanges\n\n\nLoading required package: S4Vectors\n\n\n\nAttaching package: 'S4Vectors'\n\n\nThe following objects are masked from 'package:Matrix':\n\n    expand, unname\n\n\nThe following object is masked from 'package:tidyr':\n\n    expand\n\n\nThe following objects are masked from 'package:dplyr':\n\n    first, rename\n\n\nThe following object is masked from 'package:utils':\n\n    findMatches\n\n\nThe following objects are masked from 'package:base':\n\n    expand.grid, I, unname\n\n\n\nAttaching package: 'IRanges'\n\n\nThe following object is masked from 'package:sp':\n\n    %over%\n\n\nThe following object is masked from 'package:purrr':\n\n    reduce\n\n\nThe following objects are masked from 'package:dplyr':\n\n    collapse, desc, slice\n\n\n\nAttaching package: 'AnnotationDbi'\n\n\nThe following object is masked from 'package:dplyr':\n\n    select\n\n\n\n\nmarker_file_path &lt;- \"mmBrain_markers.txt\"\n\nmarker_check &lt;- check_markers(koala_umap_cds, marker_file_path,\n                              db = org.Mm.eg.db,\n                              cds_gene_id_type = \"SYMBOL\",\n                              marker_file_gene_id_type = \"SYMBOL\")\n\nThere are 144 cell type definitions\n\n\n\nmarker_cell_types_analysis &lt;- marker_check %&gt;%\n  mutate(\"n_type\" = n(), .by = c(\"cell_type\", \"parent\")) %&gt;%\n  mutate(\"n_cds\" = n(), .by = c(\"cell_type\", \"parent\", \"in_cds\")) %&gt;%\n  arrange(desc(n_type)) %&gt;%\n  dplyr::select(c(\"cell_type\", \"parent\", \"in_cds\", \"n_type\", \"n_cds\")) %&gt;%\n  distinct()\nmarker_cell_types_analysis\n\n                                                             cell_type\n1                                                              Neurons\n2                                                              Neurons\n3                    Cholinergic monoaminergic and peptidergic neurons\n4                    Cholinergic monoaminergic and peptidergic neurons\n5                                                             CNS glia\n6                                                             CNS glia\n7                                        Di- and mesencephalon neurons\n8                                        Di- and mesencephalon neurons\n9                                           Telencephalon interneurons\n10                                          Telencephalon interneurons\n11                               Cholinergic and monoaminergic neurons\n12                               Cholinergic and monoaminergic neurons\n13                                    Telencephalon projecting neurons\n14                                    Telencephalon projecting neurons\n15                                                Astroependymal cells\n16                                                Astroependymal cells\n17                                          Peripheral sensory neurons\n18                                          Peripheral sensory neurons\n19                               Telencephalon inhibitory interneurons\n20                               Telencephalon inhibitory interneurons\n21                            Di- and mesencephalon excitatory neurons\n22                            Di- and mesencephalon excitatory neurons\n23                                              Neural crest-like glia\n24                                              Neural crest-like glia\n25                                                 Peptidergic neurons\n26                                                 Peptidergic neurons\n27                                                    Oligodendrocytes\n28                                                    Oligodendrocytes\n29                                                      Vascular cells\n30                                                      Vascular cells\n31                         Telencephalon projecting excitatory neurons\n32                         Telencephalon projecting excitatory neurons\n33                            Di- and mesencephalon inhibitory neurons\n34                            Di- and mesencephalon inhibitory neurons\n35                                                          Astrocytes\n36                                                          Astrocytes\n37                          Peripheral sensory non-peptidergic neurons\n38                          Peripheral sensory non-peptidergic neurons\n39                                                     Enteric neurons\n40                                                     Enteric neurons\n41                                  Excitatory neurons cerebral cortex\n42                                  Excitatory neurons cerebral cortex\n43                                                 Spinal cord neurons\n44                                                 Spinal cord neurons\n45                         Telencephalon projecting inhibitory neurons\n46                         Telencephalon projecting inhibitory neurons\n47                                                        Enteric glia\n48                                                        Enteric glia\n49                                                     Immature neural\n50                                                     Immature neural\n51                              Peripheral sensory peptidergic neurons\n52                              Peripheral sensory peptidergic neurons\n53                                        Olfactory inhibitory neurons\n54                                        Olfactory inhibitory neurons\n55                                      Inhibitory neurons midbrain di\n56                                      Inhibitory neurons midbrain di\n57                                                Serotonergic neurons\n58                                                Serotonergic neurons\n59                                                        Immune cells\n60                                                        Immune cells\n61                                                 Sympathetic neurons\n62                                                 Sympathetic neurons\n63                                                   Hindbrain neurons\n64                                                   Hindbrain neurons\n65                                         Cholinergic enteric neurons\n66                                         Cholinergic enteric neurons\n67                                                  Cerebellum neurons\n68                                                  Cerebellum neurons\n69                                                           Microglia\n70                                                           Microglia\n71                                         Excitatory neurons midbrain\n72                                         Excitatory neurons midbrain\n73                                             Mature oligodendrocytes\n74                                             Mature oligodendrocytes\n75                                      Spinal cord excitatory neurons\n76                                      Spinal cord excitatory neurons\n77                                                     Ependymal cells\n78                                                     Ependymal cells\n79                                           Glutamatergic neuroblasts\n80                                           Glutamatergic neuroblasts\n81                                   Sympathetic noradrenergic neurons\n82                                   Sympathetic noradrenergic neurons\n83                                                           Pericytes\n84                                                           Pericytes\n85                            Peripheral sensory neurofilament neurons\n86                            Peripheral sensory neurofilament neurons\n87                                       Vascular leptomeningeal cells\n88                                       Vascular leptomeningeal cells\n89                                    Peptidergic neurons hypothalamus\n90                                    Peptidergic neurons hypothalamus\n91                                       Non-glutamatergic neuroblasts\n92                                       Non-glutamatergic neuroblasts\n93                                      Spinal cord inhibitory neurons\n94                                      Spinal cord inhibitory neurons\n95                     R-LM border Cck interneurons cortex/hippocampus\n96                                   Inhibitory neurons olfactory bulb\n97                                   Inhibitory neurons olfactory bulb\n98                                      Excitatory neurons spinal cord\n99                                    D1 medium spiny neurons striatum\n100                                   D1 medium spiny neurons striatum\n101                                    Myelin forming oligodendrocytes\n102                                    Myelin forming oligodendrocytes\n103                               Noradrenergic neurons of the medulla\n104                               Noradrenergic neurons of the medulla\n105                                          Nitrergic enteric neurons\n106                                          Nitrergic enteric neurons\n107                                  Excitatory neurons hindbrain hind\n108                                  Excitatory neurons hindbrain hind\n109                                              Neuroblasts olfactory\n110                                       Non-telencephalon astrocytes\n111                                       Non-telencephalon astrocytes\n112                                Inhibitory neurons spinal cord spin\n113                                                     Satellite glia\n114                                                     Satellite glia\n115                                      Newly formed oligodendrocytes\n116                                      Newly formed oligodendrocytes\n117                                      Dentate gyrus granule neurons\n118                                      Dentate gyrus granule neurons\n119 Sleep-active long-range projection interneurons cortex/hippocampus\n120 Sleep-active long-range projection interneurons cortex/hippocampus\n121                                    Inhibitory neurons hindbrain di\n122                                    Inhibitory neurons hindbrain di\n123                                       Vascular smooth muscle cells\n124                                       Vascular smooth muscle cells\n125                                    Excitatory neurons hypothalamus\n126                                                     Purkinje cells\n127                                                     Purkinje cells\n128                           Afferent nuclei of cranial nerves VI-XII\n129                           Afferent nuclei of cranial nerves VI-XII\n130                                           Perivascular macrophages\n131                                           Perivascular macrophages\n132                           Cholinergic neurons midbrain red nucleus\n133                                   Inhibitory neurons telencephalon\n134                     Non-border Cck interneurons cortex/hippocampus\n135                                  Central canal neurons spinal cord\n136                                           Choroid epithelial cells\n137                                    Enteric mesothelial fibroblasts\n138                           Dopaminergic neurons periaqueductal grey\n139                External plexiform layer interneuron olfactory bulb\n140                              Adrenergic cell groups of the medulla\n141                              Adrenergic cell groups of the medulla\n142                                        Excitatory neurons thalamus\n143                                        Excitatory neurons thalamus\n144              Interneuron-selective interneurons cortex/hippocampus\n145              Interneuron-selective interneurons cortex/hippocampus\n146                              Subcommissural organ hypendymal cells\n147                                           Telencephalon astrocytes\n148                                   D2 medium spiny neurons striatum\n149                                   D2 medium spiny neurons striatum\n150                                  Excitatory neurons hindbrain spin\n151                                      Granule neurons dentate gyrus\n152                                      Granule neurons dentate gyrus\n153                                    Sympathetic cholinergic neurons\n154                                    Sympathetic cholinergic neurons\n155                                   Committed oligodendrocytes cells\n156                                   Committed oligodendrocytes cells\n157                                        Olfactory ensheathing cells\n158                                        Olfactory ensheathing cells\n159                                       Excitatory neurons hindbrain\n160                                         Vascular endothelial cells\n161                               Inner horizontal cell olfactory bulb\n162                               Inner horizontal cell olfactory bulb\n163                         Subventricular zone radial glia-like cells\n164                         Subventricular zone radial glia-like cells\n165                                  Inhibitory neurons hindbrain hind\n166                                  Inhibitory neurons hindbrain hind\n167                                         Matrix D1 neurons striatum\n168                                                      Bergmann Glia\n169                 CGE-derived neurogliaform cells cortex/hippocampus\n170                                        Neuroblasts cerebellum glut\n171                                    Cajal-Retzius cells hippocampus\n172                               Dentate gyrus radial glia-like cells\n173              Glutamatergic projection neurons of the raphe nucleus\n174                                   Inhibitory neurons midbrain pept\n175                                  Granule neuroblasts dentate gyrus\n176                                      Cholinergic neurons hindbrain\n177                                       Patch D1/D2 neurons striatum\n178     Cholinergic neurons septal nucleus Meissnert and diagonal band\n179                                 Inhibitory neurons hypothalamus di\n180                                         Granule neurons cerebellum\n181                              Neuronal intermidate progenitor cells\n182                                               Olfactory astrocytes\n183                                         Neuroblasts olfactory bulb\n184                                   Oligodendrocytes precursor cells\n185                                        Inhibitory neurons thalamus\n186                                Inhibitory interneurons hippocampus\n187                             Granule neuroblasts dentate gyrus dent\n188                                        Inhibitory neurons midbrain\n189                                                      Schwann cells\n190                                             Neuroblasts cerebellum\n191                            Molecular layer interneurons cerebellum\n192                                           Neuroblast-like habenula\n193                              Oxytocin-producing cells hypothalamus\n194                                          Pmch neurons hypothalamus\n195                           Vasopressin-producing cells hypothalamus\n196         Ivy and MGE-derived neurogliaform cells cortex/hippocampus\n197                                                 Neuroblasts septum\n198                                     Inhibitory neurons spinal cord\n199                                 Excitatory neurons hippocampus CA1\n200                   Basket and bistratified cells cortex/hippocampus\n201                                 Excitatory neurons hippocampus CA3\n202                             Cholinergic interneurons telencephalon\n203                            Afferent nuclei of cranial nerves III-V\n204                                        Inhibitory neurons pallidum\n205                                   Inhibitory neurons thalamus tele\n206                                    Inhibitory neurons hypothalamus\n207             Dopaminergic periglomerular interneuron olfactory bulb\n208                     Hippocamposeptal projection cortex/hippocampus\n209                                       Trilaminar cells hippocampus\n210                              Dopaminergic neurons ventral midbrain\n211                             Granular layer interneurons cerebellum\n212                                      Axo-axonic cortex/hippocampus\n213                     Dorsal midbrain Myoc-expressing astrocyte-like\n214                                        Excitatory neurons amygdala\n215                              Orexin-producing neurons hypothalamus\n216                                  Inhibitory neurons septal nucleus\n217                                       Inhibitory neurons hindbrain\n218                                       Cholinergic neurons habenula\n                                               parent in_cds n_type n_cds\n1                                                root  FALSE    197   119\n2                                                root   TRUE    197    78\n3                                             Neurons  FALSE     42    26\n4                                             Neurons   TRUE     42    16\n5                                                root   TRUE     38    17\n6                                                root  FALSE     38    21\n7                                             Neurons  FALSE     31    19\n8                                             Neurons   TRUE     31    12\n9                                             Neurons  FALSE     28    18\n10                                            Neurons   TRUE     28    10\n11  Cholinergic monoaminergic and peptidergic neurons   TRUE     25    10\n12  Cholinergic monoaminergic and peptidergic neurons  FALSE     25    15\n13                                            Neurons  FALSE     25    14\n14                                            Neurons   TRUE     25    11\n15                                           CNS glia   TRUE     24    11\n16                                           CNS glia  FALSE     24    13\n17                                            Neurons  FALSE     23    14\n18                                            Neurons   TRUE     23     9\n19                         Telencephalon interneurons  FALSE     20    12\n20                         Telencephalon interneurons   TRUE     20     8\n21                      Di- and mesencephalon neurons  FALSE     18    14\n22                      Di- and mesencephalon neurons   TRUE     18     4\n23                                               root   TRUE     18    12\n24                                               root  FALSE     18     6\n25  Cholinergic monoaminergic and peptidergic neurons  FALSE     16    10\n26  Cholinergic monoaminergic and peptidergic neurons   TRUE     16     6\n27                                           CNS glia  FALSE     14     8\n28                                           CNS glia   TRUE     14     6\n29                                               root  FALSE     13     5\n30                                               root   TRUE     13     8\n31                   Telencephalon projecting neurons   TRUE     13     5\n32                   Telencephalon projecting neurons  FALSE     13     8\n33                      Di- and mesencephalon neurons   TRUE     13     8\n34                      Di- and mesencephalon neurons  FALSE     13     5\n35                               Astroependymal cells  FALSE     12     5\n36                               Astroependymal cells   TRUE     12     7\n37                         Peripheral sensory neurons  FALSE     11     9\n38                         Peripheral sensory neurons   TRUE     11     2\n39                                            Neurons  FALSE     10     7\n40                                            Neurons   TRUE     10     3\n41        Telencephalon projecting excitatory neurons   TRUE     10     4\n42        Telencephalon projecting excitatory neurons  FALSE     10     6\n43                                            Neurons  FALSE     10     5\n44                                            Neurons   TRUE     10     5\n45                   Telencephalon projecting neurons  FALSE      9     4\n46                   Telencephalon projecting neurons   TRUE      9     5\n47                             Neural crest-like glia  FALSE      9     3\n48                             Neural crest-like glia   TRUE      9     6\n49                                            Neurons  FALSE      9     5\n50                                            Neurons   TRUE      9     4\n51                         Peripheral sensory neurons  FALSE      8     3\n52                         Peripheral sensory neurons   TRUE      8     5\n53                         Telencephalon interneurons  FALSE      8     6\n54                         Telencephalon interneurons   TRUE      8     2\n55           Di- and mesencephalon inhibitory neurons  FALSE      8     3\n56           Di- and mesencephalon inhibitory neurons   TRUE      8     5\n57              Cholinergic and monoaminergic neurons   TRUE      8     5\n58              Cholinergic and monoaminergic neurons  FALSE      8     3\n59                                               root   TRUE      8     4\n60                                               root  FALSE      8     4\n61                                            Neurons  FALSE      7     3\n62                                            Neurons   TRUE      7     4\n63                                            Neurons  FALSE      7     5\n64                                            Neurons   TRUE      7     2\n65                                    Enteric neurons   TRUE      7     2\n66                                    Enteric neurons  FALSE      7     5\n67                                            Neurons  FALSE      7     5\n68                                            Neurons   TRUE      7     2\n69                                       Immune cells   TRUE      6     3\n70                                       Immune cells  FALSE      6     3\n71           Di- and mesencephalon excitatory neurons  FALSE      6     4\n72           Di- and mesencephalon excitatory neurons   TRUE      6     2\n73                                   Oligodendrocytes  FALSE      6     4\n74                                   Oligodendrocytes   TRUE      6     2\n75                                Spinal cord neurons  FALSE      5     3\n76                                Spinal cord neurons   TRUE      5     2\n77                               Astroependymal cells  FALSE      5     4\n78                               Astroependymal cells   TRUE      5     1\n79                                    Immature neural  FALSE      5     4\n80                                    Immature neural   TRUE      5     1\n81                                Sympathetic neurons   TRUE      5     3\n82                                Sympathetic neurons  FALSE      5     2\n83                                     Vascular cells  FALSE      4     1\n84                                     Vascular cells   TRUE      4     3\n85                         Peripheral sensory neurons  FALSE      4     2\n86                         Peripheral sensory neurons   TRUE      4     2\n87                                     Vascular cells   TRUE      4     3\n88                                     Vascular cells  FALSE      4     1\n89                                Peptidergic neurons  FALSE      4     3\n90                                Peptidergic neurons   TRUE      4     1\n91                                    Immature neural   TRUE      4     3\n92                                    Immature neural  FALSE      4     1\n93                                Spinal cord neurons   TRUE      4     1\n94                                Spinal cord neurons  FALSE      4     3\n95              Telencephalon inhibitory interneurons   TRUE      3     3\n96                       Olfactory inhibitory neurons   TRUE      3     1\n97                       Olfactory inhibitory neurons  FALSE      3     2\n98                     Spinal cord excitatory neurons  FALSE      3     3\n99        Telencephalon projecting inhibitory neurons   TRUE      3     2\n100       Telencephalon projecting inhibitory neurons  FALSE      3     1\n101                                  Oligodendrocytes   TRUE      3     1\n102                                  Oligodendrocytes  FALSE      3     2\n103             Cholinergic and monoaminergic neurons  FALSE      3     1\n104             Cholinergic and monoaminergic neurons   TRUE      3     2\n105                                   Enteric neurons  FALSE      3     2\n106                                   Enteric neurons   TRUE      3     1\n107                                 Hindbrain neurons  FALSE      3     2\n108                                 Hindbrain neurons   TRUE      3     1\n109                         Glutamatergic neuroblasts  FALSE      3     3\n110                                        Astrocytes  FALSE      3     1\n111                                        Astrocytes   TRUE      3     2\n112                    Spinal cord inhibitory neurons  FALSE      3     3\n113                            Neural crest-like glia  FALSE      3     2\n114                            Neural crest-like glia   TRUE      3     1\n115                                  Oligodendrocytes   TRUE      3     2\n116                                  Oligodendrocytes  FALSE      3     1\n117                  Telencephalon projecting neurons  FALSE      3     2\n118                  Telencephalon projecting neurons   TRUE      3     1\n119             Telencephalon inhibitory interneurons  FALSE      2     1\n120             Telencephalon inhibitory interneurons   TRUE      2     1\n121          Di- and mesencephalon inhibitory neurons   TRUE      2     1\n122          Di- and mesencephalon inhibitory neurons  FALSE      2     1\n123                                    Vascular cells  FALSE      2     1\n124                                    Vascular cells   TRUE      2     1\n125          Di- and mesencephalon excitatory neurons  FALSE      2     2\n126                                Cerebellum neurons  FALSE      2     1\n127                                Cerebellum neurons   TRUE      2     1\n128             Cholinergic and monoaminergic neurons  FALSE      2     1\n129             Cholinergic and monoaminergic neurons   TRUE      2     1\n130                                      Immune cells  FALSE      2     1\n131                                      Immune cells   TRUE      2     1\n132          Di- and mesencephalon excitatory neurons  FALSE      2     2\n133                               Peptidergic neurons  FALSE      2     2\n134             Telencephalon inhibitory interneurons  FALSE      2     2\n135                               Peptidergic neurons   TRUE      2     2\n136                              Astroependymal cells  FALSE      2     2\n137                            Neural crest-like glia   TRUE      2     2\n138             Cholinergic and monoaminergic neurons  FALSE      2     2\n139                      Olfactory inhibitory neurons  FALSE      2     2\n140             Cholinergic and monoaminergic neurons   TRUE      2     1\n141             Cholinergic and monoaminergic neurons  FALSE      2     1\n142          Di- and mesencephalon excitatory neurons   TRUE      2     1\n143          Di- and mesencephalon excitatory neurons  FALSE      2     1\n144             Telencephalon inhibitory interneurons   TRUE      2     1\n145             Telencephalon inhibitory interneurons  FALSE      2     1\n146                              Astroependymal cells   TRUE      2     2\n147                                        Astrocytes   TRUE      2     2\n148       Telencephalon projecting inhibitory neurons   TRUE      2     1\n149       Telencephalon projecting inhibitory neurons  FALSE      2     1\n150                    Spinal cord excitatory neurons   TRUE      2     2\n151                     Dentate gyrus granule neurons  FALSE      2     1\n152                     Dentate gyrus granule neurons   TRUE      2     1\n153                               Sympathetic neurons   TRUE      2     1\n154                               Sympathetic neurons  FALSE      2     1\n155                                  Oligodendrocytes  FALSE      2     1\n156                                  Oligodendrocytes   TRUE      2     1\n157                            Neural crest-like glia  FALSE      2     1\n158                            Neural crest-like glia   TRUE      2     1\n159          Di- and mesencephalon excitatory neurons  FALSE      2     2\n160                                    Vascular cells  FALSE      2     2\n161                      Olfactory inhibitory neurons  FALSE      2     1\n162                      Olfactory inhibitory neurons   TRUE      2     1\n163                              Astroependymal cells   TRUE      2     1\n164                              Astroependymal cells  FALSE      2     1\n165                                 Hindbrain neurons  FALSE      2     1\n166                                 Hindbrain neurons   TRUE      2     1\n167       Telencephalon projecting inhibitory neurons   TRUE      1     1\n168                                        Astrocytes   TRUE      1     1\n169             Telencephalon inhibitory interneurons  FALSE      1     1\n170                         Glutamatergic neuroblasts   TRUE      1     1\n171          Di- and mesencephalon excitatory neurons  FALSE      1     1\n172                              Astroependymal cells  FALSE      1     1\n173             Cholinergic and monoaminergic neurons  FALSE      1     1\n174                               Peptidergic neurons  FALSE      1     1\n175                     Non-glutamatergic neuroblasts  FALSE      1     1\n176                                 Hindbrain neurons  FALSE      1     1\n177       Telencephalon projecting inhibitory neurons   TRUE      1     1\n178             Cholinergic and monoaminergic neurons  FALSE      1     1\n179          Di- and mesencephalon inhibitory neurons   TRUE      1     1\n180                                Cerebellum neurons  FALSE      1     1\n181                     Non-glutamatergic neuroblasts   TRUE      1     1\n182                                        Astrocytes   TRUE      1     1\n183                     Non-glutamatergic neuroblasts   TRUE      1     1\n184                            Neural crest-like glia   TRUE      1     1\n185                               Peptidergic neurons   TRUE      1     1\n186             Telencephalon inhibitory interneurons   TRUE      1     1\n187                     Dentate gyrus granule neurons  FALSE      1     1\n188                                Cerebellum neurons  FALSE      1     1\n189                            Neural crest-like glia   TRUE      1     1\n190                                Cerebellum neurons  FALSE      1     1\n191                                Cerebellum neurons  FALSE      1     1\n192                     Non-glutamatergic neuroblasts   TRUE      1     1\n193                               Peptidergic neurons  FALSE      1     1\n194             Cholinergic and monoaminergic neurons  FALSE      1     1\n195                               Peptidergic neurons   TRUE      1     1\n196             Telencephalon inhibitory interneurons   TRUE      1     1\n197                         Glutamatergic neuroblasts  FALSE      1     1\n198                                 Hindbrain neurons  FALSE      1     1\n199       Telencephalon projecting excitatory neurons  FALSE      1     1\n200             Telencephalon inhibitory interneurons  FALSE      1     1\n201       Telencephalon projecting excitatory neurons  FALSE      1     1\n202             Cholinergic and monoaminergic neurons  FALSE      1     1\n203             Cholinergic and monoaminergic neurons  FALSE      1     1\n204          Di- and mesencephalon inhibitory neurons  FALSE      1     1\n205             Telencephalon inhibitory interneurons  FALSE      1     1\n206                               Peptidergic neurons  FALSE      1     1\n207                      Olfactory inhibitory neurons  FALSE      1     1\n208             Telencephalon inhibitory interneurons  FALSE      1     1\n209             Telencephalon inhibitory interneurons  FALSE      1     1\n210             Cholinergic and monoaminergic neurons  FALSE      1     1\n211                                Cerebellum neurons   TRUE      1     1\n212             Telencephalon inhibitory interneurons  FALSE      1     1\n213                                        Astrocytes  FALSE      1     1\n214       Telencephalon projecting excitatory neurons   TRUE      1     1\n215             Cholinergic and monoaminergic neurons  FALSE      1     1\n216                               Peptidergic neurons  FALSE      1     1\n217                    Spinal cord inhibitory neurons   TRUE      1     1\n218          Di- and mesencephalon excitatory neurons  FALSE      1     1\n\n\n\nwrite_csv(marker_check_analysis, \"mmBrain_markers_marker_check_analysis.csv\")\n\nMake a table showing percent of genes for each cell type sub-classification that are present so I can filter and subset the marker genes to decrease the complexity of the model.\n\nmarker_cell_types_prefilter &lt;- marker_cell_types_analysis %&gt;%\n  dplyr::select(!n_type) %&gt;%\n  pivot_wider(id_cols = c(\"cell_type\", \"parent\"), values_from = \"n_cds\",\n              names_from = \"in_cds\", names_glue = \"gene_present_{in_cds}\") %&gt;%\n  mutate(\"percent_genes_present\" = gene_present_TRUE / (gene_present_TRUE + gene_present_FALSE)) %&gt;%\n  relocate(gene_present_TRUE, percent_genes_present, .after = parent) %&gt;%\n  arrange(desc(gene_present_TRUE), desc(percent_genes_present))\nhead(marker_cell_types_prefilter)\n\n# A tibble: 6 × 5\n  cell_type    parent gene_present_TRUE percent_genes_present gene_present_FALSE\n  &lt;chr&gt;        &lt;chr&gt;              &lt;int&gt;                 &lt;dbl&gt;              &lt;int&gt;\n1 Neurons      root                  78                 0.396                119\n2 CNS glia     root                  17                 0.447                 21\n3 Cholinergic… Neuro…                16                 0.381                 26\n4 Neural cres… root                  12                 0.667                  6\n5 Di- and mes… Neuro…                12                 0.387                 19\n6 Astroependy… CNS g…                11                 0.458                 13\n\n\n\nmarker_cell_types_postfilter &lt;- marker_cell_types_prefilter %&gt;%\n  filter(parent == \"root\" | gene_present_TRUE &gt; 8 | percent_genes_present &gt; 0.49)\nhead(marker_cell_types_postfilter)\n\n# A tibble: 6 × 5\n  cell_type    parent gene_present_TRUE percent_genes_present gene_present_FALSE\n  &lt;chr&gt;        &lt;chr&gt;              &lt;int&gt;                 &lt;dbl&gt;              &lt;int&gt;\n1 Neurons      root                  78                 0.396                119\n2 CNS glia     root                  17                 0.447                 21\n3 Cholinergic… Neuro…                16                 0.381                 26\n4 Neural cres… root                  12                 0.667                  6\n5 Di- and mes… Neuro…                12                 0.387                 19\n6 Astroependy… CNS g…                11                 0.458                 13\n\n\n\nmarker_df_filtered &lt;- marker_check %&gt;%\n  # filter for cell_types retained by filter line in \"postfilter\"\n  semi_join(marker_cell_types_postfilter, by = \"cell_type\")\nhead(marker_df_filtered)\n\n  marker_gene            gene_id                                parent\n1       Crhbp ENSMUSG00000021680 Telencephalon inhibitory interneurons\n2       Tacr1 ENSMUSG00000030043 Telencephalon inhibitory interneurons\n3         Trh ENSMUSG00000005892                               Neurons\n4        Trdn ENSMUSG00000019787                               Neurons\n5      Nccrp1 ENSMUSG00000047586                               Neurons\n6        Dlx5 ENSMUSG00000029755                               Neurons\n                                                           cell_type in_cds\n1 Sleep-active long-range projection interneurons cortex/hippocampus  FALSE\n2 Sleep-active long-range projection interneurons cortex/hippocampus   TRUE\n3                                         Telencephalon interneurons  FALSE\n4                                         Telencephalon interneurons   TRUE\n5                                         Telencephalon interneurons  FALSE\n6                                         Telencephalon interneurons  FALSE\n  nominates total_nominated exclusion_dismisses inclusion_ambiguates\n1        NA              NA                  NA                   NA\n2         1               1                   1                    0\n3        NA              NA                  NA                   NA\n4         1             158                   1                    1\n5        NA              NA                  NA                   NA\n6        NA              NA                  NA                   NA\n        most_overlap ambiguity marker_score         summary\n1               &lt;NA&gt;        NA           NA      Not in CDS\n2               &lt;NA&gt;         0 1.000000e+02              Ok\n3               &lt;NA&gt;        NA           NA      Not in CDS\n4 Cerebellum neurons         1 6.266449e-03 High ambiguity?\n5               &lt;NA&gt;        NA           NA      Not in CDS\n6               &lt;NA&gt;        NA           NA      Not in CDS\n\nmarker_df_filtered_orphans &lt;- marker_df_filtered %&gt;%\n  anti_join(., ., by = c(\"cell_type\" = \"parent\"))\nhead(marker_df_filtered_orphans)\n\n  marker_gene            gene_id                                parent\n1       Crhbp ENSMUSG00000021680 Telencephalon inhibitory interneurons\n2       Tacr1 ENSMUSG00000030043 Telencephalon inhibitory interneurons\n3         Trh ENSMUSG00000005892                               Neurons\n4        Trdn ENSMUSG00000019787                               Neurons\n5      Nccrp1 ENSMUSG00000047586                               Neurons\n6        Dlx5 ENSMUSG00000029755                               Neurons\n                                                           cell_type in_cds\n1 Sleep-active long-range projection interneurons cortex/hippocampus  FALSE\n2 Sleep-active long-range projection interneurons cortex/hippocampus   TRUE\n3                                         Telencephalon interneurons  FALSE\n4                                         Telencephalon interneurons   TRUE\n5                                         Telencephalon interneurons  FALSE\n6                                         Telencephalon interneurons  FALSE\n  nominates total_nominated exclusion_dismisses inclusion_ambiguates\n1        NA              NA                  NA                   NA\n2         1               1                   1                    0\n3        NA              NA                  NA                   NA\n4         1             158                   1                    1\n5        NA              NA                  NA                   NA\n6        NA              NA                  NA                   NA\n        most_overlap ambiguity marker_score         summary\n1               &lt;NA&gt;        NA           NA      Not in CDS\n2               &lt;NA&gt;         0 1.000000e+02              Ok\n3               &lt;NA&gt;        NA           NA      Not in CDS\n4 Cerebellum neurons         1 6.266449e-03 High ambiguity?\n5               &lt;NA&gt;        NA           NA      Not in CDS\n6               &lt;NA&gt;        NA           NA      Not in CDS\n\nmarker_df_filtered_orph_rem &lt;-  anti_join(marker_df_filtered, marker_df_filtered_orphans, by = \"marker_gene\")\nhead(marker_df_filtered_orph_rem)\n\n  marker_gene            gene_id  parent                  cell_type in_cds\n1      Gm7271               &lt;NA&gt; Neurons Peripheral sensory neurons  FALSE\n2     Fam19a4               &lt;NA&gt; Neurons Peripheral sensory neurons  FALSE\n3        Tlx3 ENSMUSG00000040610 Neurons Peripheral sensory neurons  FALSE\n4      Mrgprd ENSMUSG00000051207 Neurons Peripheral sensory neurons  FALSE\n5        Otoa ENSMUSG00000034990 Neurons Peripheral sensory neurons   TRUE\n6     Mrgpra3 ENSMUSG00000078698 Neurons Peripheral sensory neurons  FALSE\n  nominates total_nominated exclusion_dismisses inclusion_ambiguates\n1        NA              NA                  NA                   NA\n2        NA              NA                  NA                   NA\n3        NA              NA                  NA                   NA\n4        NA              NA                  NA                   NA\n5         1             275                   0                    0\n6        NA              NA                  NA                   NA\n  most_overlap ambiguity marker_score    summary\n1         &lt;NA&gt;        NA           NA  Not in db\n2         &lt;NA&gt;        NA           NA  Not in db\n3         &lt;NA&gt;        NA           NA Not in CDS\n4         &lt;NA&gt;        NA           NA Not in CDS\n5         &lt;NA&gt;         0    0.3636364         Ok\n6         &lt;NA&gt;        NA           NA Not in CDS\n\n\nI also have to head off an error about parent cell types referred to in the parent field of other entries not being present by doing a recursive semi_join. See the error copied below: Error in check_markers(koala_umap_cds, marker_file_path, db = org.Mm.eg.db, : Subtype Telencephalon inhibitory interneurons is not defined in marker file.Subtype Cerebellum neurons is not defined in marker file.Subtype root is not defined in marker file.Subtype Di- and mesencephalon excitatory neurons is not defined in marker file.Subtype Dentate gyrus granule neurons is not defined in marker file.Subtype Oligodendrocytes is not defined in marker file.Subtype Immature neural is not defined in marker file.Subtype Olfactory inhibitory neurons is not defined in marker file.Subtype Hindbrain neurons is not defined in marker file.\n2023-05-29 14:36 PM Where I left off: Marker checks are writing to disk and are parsing. But missing parents (orphaned cell types) are still in the marker .txt specs, and I have misplaced the dataframes that actually contain the gene info.\n\nwrite new marker file to disk\nThe basic structure of the Garnett marker file is a series of entries, each describing elements of a cell type. After the cell name, each additional line will be a descriptor, which begins with a keyword, followed by a colon (‘:’). After the colon, a series of specifications can be added, separated by commas (‘,’). Descriptors may spill onto following lines so long as you do not split a specification across multiple lines (i.e. if breaking up a long descriptor across multiple lines, all but the last line should end with a comma). Each new descriptor should begin on a new line. A generic cell type entry looks like this:\n“’ &gt; cell type name descriptor: spec1, spec2, spec3, spec4 descriptor2: spec1 “’\n\n\ndefine new writer function\nThe joy of for loops\n\nwrite_garnett_marker_file &lt;- function(marker_df, filename){\n  \n  marker_df &lt;- marker_df %&gt;%\n  dplyr::select(cell_type, parent, marker_gene) %&gt;%\n  summarize(\"marker_gene\" = paste(marker_gene, collapse = \", \"),\n            .by = c(cell_type, parent))\n  \n  marker_file_lines = c()\n  for (rowNum in 1:nrow(marker_df)){\n    marker_file_lines = c(marker_file_lines, as.character(paste0(\"&gt;\", marker_df[rowNum, \"cell_type\"], sep = \"\")))\n    \n      if(is.na(marker_df[rowNum, \"parent\"])) {\n        \n      } else if(marker_df[rowNum, \"parent\"] == \"root\") {\n        \n      } else if(!is.na(marker_df[rowNum, \"parent\"])) {\n        marker_file_lines = c(marker_file_lines, as.character(paste(\"subtype of:\", marker_df[rowNum, \"parent\"], sep = \" \")))\n      }\n    \n    marker_file_lines = c(marker_file_lines, as.character(paste(\"expressed:\", marker_df[rowNum, \"marker_gene\"], sep = \" \")))\n    marker_file_lines = c(marker_file_lines, \"\")\n  }\n  \n  fileConn &lt;- file(filename)\n  writeLines(marker_file_lines, fileConn)\n  close(fileConn)\n}\n\n\nwrite_garnett_marker_file(marker_df_filtered_orph_rem, \"mmBrain_markers_filtered.txt\")\n\n\n\n\nPrepare trained classified from heirarchical marker gene file\n\nlibrary(org.Mm.eg.db)\n\nmarker_file_path &lt;- \"mmBrain_markers_filtered.txt\"\n\nmarker_check &lt;- check_markers(koala_umap_cds, marker_file_path,\n                              db = org.Mm.eg.db,\n                              cds_gene_id_type = \"SYMBOL\",\n                              marker_file_gene_id_type = \"SYMBOL\")\n\nThere are 13 cell type definitions\n\n\n\nmarker_check_plot &lt;- plot_markers(marker_check)\n\nThe marker plot is too large to be viewed in R or in the Rmarkdown output. (It errors). Please view “mmBrain_markers_check_plot.png” in the google drive filesystem. It is exported with manually-found dimensions that work for display and do not error.\n\nggsave(\"mmBrain_markers_check_plot.png\", marker_check_plot, width = 10, height = 20, limitsize = FALSE)\n\nBasically, this is a really big model.\n\n\nTrain the classifier\n\n# import previoously trained classifier\nmmBrain_classifier &lt;- readRDS(\"../../pdcherry_github_data/scRNAseq/2023_06_03-13_cell_def_mmBrain_classifier.Rds\")\n\n\n\nPerform garnett classify\n\nkoala_features_classified &lt;- classify_cells(koala_umap_cds, mmBrain_classifier,\n                                            db = org.Mm.eg.db,\n                                            cluster_extend = TRUE,\n                                            cds_gene_id_type = \"SYMBOL\")\n\nThis graph was created by an old(er) igraph version.\n  Call upgrade_graph() on it to use with the current igraph version\n  For now we convert it on the fly...\n\nkoala_features_classified\n\nCellDataSet (storageMode: environment)\nassayData: 17426 features, 1410 samples \n  element names: exprs \nprotocolData: none\nphenoData\n  sampleNames: ATGGCTGTCGATTTGA-1 GGTACAAAGTTCCTGC-1 ...\n    TCGCCCATCTAATTGG-1 (1410 total)\n  varLabels: orig.ident nCount_RNA ... cluster_ext_type (9 total)\n  varMetadata: labelDescription\nfeatureData\n  featureNames: Xkr4 Rp1 ... AC149090.1 (17426 total)\n  fvarLabels: vf_vst_counts_mean vf_vst_counts_variance ...\n    gene_short_name (9 total)\n  fvarMetadata: labelDescription\nexperimentData: use 'experimentData(object)'\nAnnotation:  \n\n\n\nsuppressPackageStartupMessages(library(tidyverse))\n\n\npData(koala_features_classified) %&gt;%\n  count(cell_type)\n\n                          cell_type   n\n1                        Astrocytes  89\n2              Astroependymal cells  33\n3                          CNS glia 111\n4     Di- and mesencephalon neurons  35\n5            Neural crest-like glia  34\n6                           Neurons  83\n7        Peripheral sensory neurons  57\n8  Telencephalon projecting neurons 126\n9                           Unknown 830\n10                   Vascular cells  12\n\n\n\npData(koala_features_classified) %&gt;%\n  count(cluster_ext_type)\n\n                   cluster_ext_type   n\n1                        Astrocytes 645\n2              Astroependymal cells  16\n3                          CNS glia  46\n4     Di- and mesencephalon neurons  22\n5            Neural crest-like glia  32\n6                           Neurons  35\n7        Peripheral sensory neurons  17\n8  Telencephalon projecting neurons  96\n9                           Unknown 490\n10                   Vascular cells  11\n\n\n\nkoala_features_classified_df &lt;- inner_join(\n  rownames_to_column(as.data.frame(pData(koala_features_classified))),\n  rownames_to_column(as.data.frame(koala_features_classified@reducedDimS)),\n  by = \"rowname\")\n\n\nclassified_umap_plot &lt;- ggplot(koala_features_classified_df) +\n  geom_point(aes(x = umap_1, y = umap_2, color = cluster_ext_type), alpha = 0.5) +\n  theme_bw() +\n  scale_color_viridis_d(option = \"H\")\nclassified_umap_plot\n\n\n\n\n\n\n\n\n\nclassified_umap_drop_unknowns_plot &lt;-\n  koala_features_classified_df %&gt;%\n  filter(cluster_ext_type != \"Unknown\") %&gt;%\n  ggplot() +\n  geom_point(aes(x = umap_1, y = umap_2, color = cluster_ext_type), alpha = 0.5) +\n  theme_bw() +\n  scale_color_viridis_d(option = \"H\")\nclassified_umap_drop_unknowns_plot\n\n\n\n\n\n\n\n\n\nclassified_umap_drop_unknowns_plot &lt;-\n  koala_features_classified_df %&gt;%\n  filter(cell_type != \"Unknown\") %&gt;%\n  ggplot() +\n  geom_point(aes(x = umap_1, y = umap_2, color = cell_type), alpha = 0.5) +\n  theme_bw() +\n  scale_color_viridis_d(option = \"H\")\nclassified_umap_drop_unknowns_plot"
  },
  {
    "objectID": "posts/2024_01_22-scRNA-seq.html#htp-go-anlaysis-for-all-10-clusters",
    "href": "posts/2024_01_22-scRNA-seq.html#htp-go-anlaysis-for-all-10-clusters",
    "title": "scRNA-seq Analysis: Messy Mouse Brain",
    "section": "HTP GO Anlaysis for all 10 clusters",
    "text": "HTP GO Anlaysis for all 10 clusters\n\nkoala_umap_markers_for_GO &lt;- koala_umap_markers %&gt;%\n  group_by(cluster) %&gt;% slice_max(n = 20, order_by = avg_log2FC)\nkoala_umap_markers_for_GO %&gt;% ungroup() %&gt;% dplyr::select(\"gene\") %&gt;% slice_tail(n = 167) %&gt;% dput()\n\nstructure(list(gene = c(\"Plpp1\", \"Kdr\", \"Flt4\", \"F8\", \"Fgd5\", \n\"Fcgr2b\", \"Adgrl4\", \"Gm35696\", \"Uroc1\", \"Cxcl1\", \"Tedc2\", \"Hal\", \n\"Grm8\", \"Gldc\", \"Hsd17b13\", \"Gcnt2\", \"BC024386\", \"Itih3\", \"Noct\", \n\"Ftcd\", \"Osgin1\", \"Amdhd1\", \"Gls2\", \"Ctcflos\", \"Gm50136\", \"Gramd1c\", \n\"Serpina10\", \"Vtn\", \"mt-Co1\", \"mt-Nd4\", \"Gm48099\", \"mt-Co2\", \n\"mt-Nd1\", \"mt-Cytb\", \"Serpina1c\", \"Il31ra\", \"Ces1c\", \"Lars2\", \n\"mt-Nd3\", \"mt-Atp6\", \"mt-Nd2\", \"Serpinf2\", \"Cmss1\", \"Cdk8\", \"Gm15564\", \n\"mt-Co3\", \"Serpina1e\", \"Nr1h5\", \"Mamdc2\", \"Arvcf\", \"Ngf\", \"Ank3\", \n\"Gpc6\", \"Pde3a\", \"Cacna2d1\", \"Bmp5\", \"Nrxn1\", \"Gucy1a1\", \"Fendrr\", \n\"Abcc9\", \"Ntm\", \"Reln\", \"Pde1a\", \"Col5a1\", \"Carmn\", \"Nkain2\", \n\"Lhfp\", \"Mup17\", \"mt-Cytb\", \"Il31ra\", \"mt-Atp8\", \"mt-Nd2\", \"mt-Nd4\", \n\"mt-Co2\", \"Apoe\", \"Ppfia2\", \"mt-Co3\", \"mt-Atp6\", \"Pgrmc1\", \"Plxnc1\", \n\"mt-Co1\", \"Dab2\", \"Erg\", \"mt-Nd5\", \"Chchd2\", \"Serpina3k\", \"Fcgr2b\", \n\"Cyp2c38\", \"Gm13775\", \"Lhpp\", \"Slc1a2\", \"Rnf43\", \"Prodh\", \"Atf3\", \n\"Glt1d1\", \"Cyp3a59\", \"Serpina6\", \"Glul\", \"Tox\", \"Slc16a10\", \"Klb\", \n\"Slc25a25\", \"Irs1\", \"Tenm3\", \"Kank1\", \"Nr0b2\", \"Hnf4aos\", \"Adgre4\", \n\"Fam129a\", \"Cd5l\", \"Adgb\", \"Bank1\", \"E230029C05Rik\", \"Clec4f\", \n\"Slc8a1\", \"Entpd1\", \"Abr\", \"Fyb\", \"Gm26740\", \"Hdac9\", \"Madd\", \n\"Unc93b1\", \"Elmo1\", \"Runx1\", \"Ctsc\", \"Slc40a1\", \"Cadm1\", \"Nuak1\", \n\"Wnt9b\", \"Vwf\", \"Dnm3\", \"Mecom\", \"Eln\", \"Thsd7a\", \"Rspo3\", \"Pgm5\", \n\"Unc13b\", \"Ptpn14\", \"Fbn1\", \"Zfp521\", \"Jam2\", \"Heg1\", \"Pecam1\", \n\"Plxna4\", \"March3\", \"Myo1d\", \"Tbc1d4\", \"Bcl11b\", \"Atp8a2\", \"Gm2682\", \n\"Themis\", \"Cd226\", \"Itk\", \"Skap1\", \"Ms4a4b\", \"Grap2\", \"Satb1\", \n\"Kcnq5\", \"Ptpn22\", \"Pde7a\", \"Arhgap15\", \"Dock2\", \"Inpp4b\", \"Epsti1\", \n\"Itgal\", \"Pik3cd\", \"Ripor2\")), row.names = c(NA, -167L), class = c(\"tbl_df\", \n\"tbl\", \"data.frame\"))\n\n\n\nSeurat::FeaturePlot(koala_umap, features = c(\"Ptprb\", \"Stab2\", \"Lrmda\", \"Prkg1\"), ncol = 2)"
  },
  {
    "objectID": "posts/2024_01_02-why_you_should_elect_a_HDHP.html",
    "href": "posts/2024_01_02-why_you_should_elect_a_HDHP.html",
    "title": "Why you should elect a high-deductible health plan",
    "section": "",
    "text": "The Misunderstood Spider of the annual enrollment process just wants to cuddle."
  },
  {
    "objectID": "posts/2024_01_02-why_you_should_elect_a_HDHP.html#background-basics-medical-benefit-plan-definitions",
    "href": "posts/2024_01_02-why_you_should_elect_a_HDHP.html#background-basics-medical-benefit-plan-definitions",
    "title": "Why you should elect a high-deductible health plan",
    "section": "Background: Basics medical benefit plan definitions",
    "text": "Background: Basics medical benefit plan definitions\n\nPremium: the amount you pay for your plan from your paycheck\nDeductible: a fixed amount that you must pay out-of-pocket before your plan begins paying for expenses\nCo-pay/co-insurance: a flat (percentage) rate that you pay for each medical event\nOut-of-pocket maximum: an upper bound on what you pay from your personal accounts in a given plan year; after this is hit, plan will cover everything at 100% (no co-pay/co-insurance)\nMedical Spending Account: account for pre-tax money diverted from your paycheck to be used for qualifying medical expenses:\n\nFlexible Spending Account (FSA): traditional “use it or lose it” annual account for PPOs\nHealth Savings Account (HSA): only available to high-deductible plan participants"
  },
  {
    "objectID": "posts/2024_01_02-why_you_should_elect_a_HDHP.html#so-why-are-we-instinctively-afraid-of-high-deductible-plans",
    "href": "posts/2024_01_02-why_you_should_elect_a_HDHP.html#so-why-are-we-instinctively-afraid-of-high-deductible-plans",
    "title": "Why you should elect a high-deductible health plan",
    "section": "So why are we instinctively afraid of high-deductible plans?",
    "text": "So why are we instinctively afraid of high-deductible plans?\nOver the years, we’ve been conditioned to think about healthcare in certain ways. For example, we think that Premiums work like: “you pay more for more doctor options”, or “deductible: smaller is better”. But we lose sight of our sunk costs, like premiums and taxes. FSA example: if you put $1,000 in an FSA, and lose $200 because you can’t spend it, that feels terrible and you are likely to put in less next year, because you’ve lost sight of what would have happened if that money were taxed— if your tax bracket is 30%, you are still $100 ahead!\nWe also tend to think in annual cycles for health care. But if there were the ability save or ‘carry over’ unspent dollars from year to year, that situation would open up to budgeting healthcare over multiple years. And one thing actuaries know about budgeting for unpredictable events with a high spread of potential costs: averaging over time makes the ending outcome more predictable. (See the central limit theorem).\nWhat we haven’t been conditioned to think about is: premiums as a function of deductibles; costs summed / averaged over multiple years; tax & retirement benefits of healthcare budgeting."
  },
  {
    "objectID": "posts/2024_01_02-why_you_should_elect_a_HDHP.html#the-case-for-hgih-deductible-health-plans-the-health-savings-account-hsa",
    "href": "posts/2024_01_02-why_you_should_elect_a_HDHP.html#the-case-for-hgih-deductible-health-plans-the-health-savings-account-hsa",
    "title": "Why you should elect a high-deductible health plan",
    "section": "The case for hgih-deductible health plans: the health savings account (HSA)",
    "text": "The case for hgih-deductible health plans: the health savings account (HSA)\n\nThe high deductible sounds scary, but it’s covered by the combination of your employer’s contribution to your HSA and the money you save on monthly premiums. You are paying it with “house money,” and if you don’t spend all of that, you keep it.\nThe HSA is the very best supplemental retirement savings vehicle there is; in some ways, it’s even better than your 401K, which every financial planner tells you is the first thing you should max out.\nThe upper bound (out-of-pocket max) on HDHPs means the scenarios in which you could end up paying more than you would on a PPO or EPO/HMO are probably pretty narrow even in a single year, and across multiple years the risk is very low.\nHDHP plans are generally the same plan network as that insurer’s PPO or EPO/HMO. Everything about it is the same, except for how you pay for it. Your doctor doesn’t care. Switch, switch back, no issue."
  },
  {
    "objectID": "posts/2024_01_02-why_you_should_elect_a_HDHP.html#but-what-if-i-have-an-expensive-year",
    "href": "posts/2024_01_02-why_you_should_elect_a_HDHP.html#but-what-if-i-have-an-expensive-year",
    "title": "Why you should elect a high-deductible health plan",
    "section": "But what if I have an expensive year?",
    "text": "But what if I have an expensive year?\nMy 2020, among other ongoing medical events:\n\n\n\nLeft: an X-ray of a fracture of the left radial head, annotated in red; right: Another X-ray view of a fractured radial head\n\n\nYou can have a bad year, but it won’t be as bad as it may seem at first:\n\n$28k billed\n$12k allowed by insurance\n$3.5k is what I had to pay"
  },
  {
    "objectID": "posts/2024_01_02-why_you_should_elect_a_HDHP.html#an-example-2023-comparative-cost-model",
    "href": "posts/2024_01_02-why_you_should_elect_a_HDHP.html#an-example-2023-comparative-cost-model",
    "title": "Why you should elect a high-deductible health plan",
    "section": "An example 2023 comparative cost model",
    "text": "An example 2023 comparative cost model\nThese numbers are purely hypothetical and in no way related to my or any specific employer.\n\nMake cost model data frame\n\nppo_deductible &lt;- 250\nppo_oop_max &lt;- 2250\nppo_employer_contributes &lt;- 0\nppo_premium &lt;- 0\nppo_co_insurance &lt;- .9\n\nhdhp_deductible &lt;- 1600\nhdhp_oop_max &lt;- 3500\nhdhp_employer_contributes &lt;- -3850\nhdhp_premium &lt;- 0\nhdhp_co_insurance &lt;- .9\n\nhealth_spending_model &lt;- function(raw_expenditure,\n                                  deductible,\n                                  co_insurance,\n                                  oop_max,\n                                  emp_contribution,\n                                  premium){\n  \n  actual_expenditure &lt;- if_else(\n    raw_expenditure &lt;= deductible, raw_expenditure, if_else(\n      (deductible + ((raw_expenditure - deductible) * co_insurance) ) &gt;= oop_max, oop_max,\n        (deductible + ((raw_expenditure - deductible) * co_insurance) )\n      )\n    )  + emp_contribution + premium\n  \n  return(actual_expenditure)\n}\n\ncostsdf &lt;- seq(0, 10000, 50) %&gt;%\n  as_tibble() %&gt;%\n  rename(\"raw_expenditure\" = 1) %&gt;%\n  mutate(\"PPO\" = health_spending_model(raw_expenditure, ppo_deductible, ppo_co_insurance, ppo_oop_max,\n                                       ppo_employer_contributes, ppo_premium),\n         \"HDHP\" = health_spending_model(raw_expenditure, hdhp_deductible, hdhp_co_insurance, hdhp_oop_max,\n                                       hdhp_employer_contributes, hdhp_premium)) %&gt;%\n  pivot_longer(cols = c(\"PPO\", \"HDHP\"), values_to = \"your_cost\", names_to = \"plan_type\")\n\n\n\nPlot cost model\n\ncostsdf %&gt;%\n  ggplot(aes(x = raw_expenditure, y = your_cost, color = plan_type)) +\n  geom_line() +\n  scale_color_viridis_d(option = \"D\", begin = 0.3, end = 0.75) +\n  geom_hline(yintercept = 0, linetype = \"dotdash\", color = \"red\") +\n  scale_x_continuous(label = scales::label_currency()) +\n  scale_y_continuous(label = scales::label_currency()) +\n  labs(title = \"Plot of personal cost versus raw allowed health expenditure\",\n       x = \"Raw allowed healthcare expenditure ($)\",\n       y = \"Your cost ($)\",\n       color = \"Plan type\")\n\n\n\n\n\n\n\n\nAssumes 100% in-network providers, co-insurances are 90% of total accepted expenditure.\nThe HDHP is actually less expensive than PPO until &gt;$11,000 of raw expense. Because both plans have 90% co-insurance, the amount paid by each is similar when under the OOP Max.\nHDHP costs 11.1% more than PPO until reaching the deductible.\nBecause the OOP Max for the HDHP is lower than the HSA contribution (from the employer), there is no medical expense scenario when this model keeps less than $350 at the end of the year."
  },
  {
    "objectID": "posts/2024_01_02-why_you_should_elect_a_HDHP.html#the-hsa-a-very-different-medical-spending-account",
    "href": "posts/2024_01_02-why_you_should_elect_a_HDHP.html#the-hsa-a-very-different-medical-spending-account",
    "title": "Why you should elect a high-deductible health plan",
    "section": "The HSA: a very different medical spending account",
    "text": "The HSA: a very different medical spending account\n\n“From a tax standpoint, an HSA is the best thing out there because it has a triple tax advantage,” Fronstin says. “The money goes in tax free, it builds up tax free and it comes out tax free” if withdrawn for qualified medical expenses.\nNYT The Triple Tax Break You May Be Missing: A Health Savings Account\n\nCA, NJ, and AL tax HSA contributions; NH and TN tax earnings.\n\nNo “use it or lose it”— it’s your money.\nTreated like a 401K account: pre-tax, interest-earning, able to be invested in stocks, etc.\nNot tied to your employer: your HSA goes with you, can be rolled over into another HSA (like 401K)\n\n$4,150 individual contribution limit; $8,300 contribution family limit (2024 IRS limits)\nEmployer may contribute some or most of that, as an employee benefit.\nIf 55 or over, extra $1,000/year “catch-up” contributions are permitted\n\nInterest/investment growth is tax-free..\n\nCA, NJ, and AL tax HSA contributions; NH and TN tax earnings.\n\nAt retirement age, can withdraw and use for any reason, but taxed as income (with no penalty) (like traditional IRA).\n\nWithdrawal after retirement age decreases the number of tax advantages from 3 to 2.\n\nIf used for qualifying medical expenses, neither the principal nor the growth is ever taxed!"
  },
  {
    "objectID": "posts/2024_01_02-why_you_should_elect_a_HDHP.html#multi-year-thinking",
    "href": "posts/2024_01_02-why_you_should_elect_a_HDHP.html#multi-year-thinking",
    "title": "Why you should elect a high-deductible health plan",
    "section": "Multi-Year Thinking",
    "text": "Multi-Year Thinking\nWe’ve been taught to think in annual cycles, and to over-value downside risk. Think about the upside benefit of a light year: one year in which I spend only half of my premium savings + employer contribution “stake” can cover the downside risk of years when I spend more. PPO premiums are sunk costs—you will never see that money again.\nMultiply your contribution (not your employer’s contribution) by your tax bracket—that is free money (in that it would have been taxed at that marginal rate if it were instead kept in your paycheck).\nYour employer’s contribution is free money.\nCA, NJ, and AL tax HSA contributions; NH and TN tax earnings. IRS Publication 969\nIf you meet your deductible in 2024, pack all your annual checkups into the end of 2024 and the beginning of 2026, and look to have a light year in 2025.\nBanking your receipts: you can claim your HSA reimbursements at any time, so you can “bank up” your reimbursable expenses across years, allowing your money to grow tax-free in the HSA, but leaving you the option to reimburse yourself tax-free for multiple years worth of expenses at any time. No reason or justification is required; just keep the receipts and records of when each was withdrawn from the HSA in case the IRS asks to see.\nIRS Publication 969"
  },
  {
    "objectID": "posts/2024_01_02-why_you_should_elect_a_HDHP.html#qualifying-to-contribute-to-an-hsa",
    "href": "posts/2024_01_02-why_you_should_elect_a_HDHP.html#qualifying-to-contribute-to-an-hsa",
    "title": "Why you should elect a high-deductible health plan",
    "section": "Qualifying to contribute to an HSA",
    "text": "Qualifying to contribute to an HSA\n\nRequirements\n\nYou are enrolled in a high-deductible health insurance plan.\n\nIRS Publication 969\n\n\nDisqualifications\n\nYou must NOT be covered by a disqualifying health plan (like another plan) (except for dental, vision, and other specific exceptions).\n\nTo be disqualified, you must be actively covered, not just eligible to get coverage (say, during open enrollment).\n\nYou must NOT be enrolled in medicare.\nYou must NOT be claimed as a dependent on someone else’s tax filing."
  },
  {
    "objectID": "posts/2024_01_02-why_you_should_elect_a_HDHP.html#the-fine-print-things-to-watch-out-for",
    "href": "posts/2024_01_02-why_you_should_elect_a_HDHP.html#the-fine-print-things-to-watch-out-for",
    "title": "Why you should elect a high-deductible health plan",
    "section": "The fine print: things to watch out for",
    "text": "The fine print: things to watch out for\n\nYou are responsible for record-keeping—IRS can audit, so you need records for at least 3 years, probably 6 (IRS page on audits)\n\ntaxes + 20% penalty due for any money withdrawn that you can’t prove was “qualified”\ncount years from when you withdrew from the HSA, not when the medical expense happened\n\nThe State of California (among others) taxes contributions, interest, and capital gains of HSAs. (Employers document this on W-2; state vs. federal taxable incomes will be different.)\nHSA contributions are taxable to California residents; use Schedule CA (540) “other earned income.”\nYou will need to file an extra schedule with your taxes (IRS form 8889).\nYou will become a savvier medical consumer—it’s your money! Watch for mis-billing, look at service costs up front.\nDon’t underestimate the possibility you will end up going out-of-network when you do your calculations.\nIf you invest your HSA money in index funds, it may grow faster, but not be FDIC-insured."
  },
  {
    "objectID": "posts/2024_01_02-why_you_should_elect_a_HDHP.html#in-summary-what-have-we-learned",
    "href": "posts/2024_01_02-why_you_should_elect_a_HDHP.html#in-summary-what-have-we-learned",
    "title": "Why you should elect a high-deductible health plan",
    "section": "In summary: what have we learned?",
    "text": "In summary: what have we learned?\nPlaying with house money: with your employer’s contribution, your premium savings, and the money you would have put in an FSA, you’re already better than break-even on the deductible; if you don’t meet your deductible in a given a year, you get that benefit instead of the insurance company.\nThink multi-year when assessing risk: it’s possible you might pay a little more in a really expensive year, but you will pay a lot less in a good year; across years, it’s hard to lose.\nHSAs are awesome: max out your contribution of pre-tax money to the HSA and get even better tax advantages than your 401(k); avoid taxes on it completely if you continue to use it for medical expenses after you retire."
  },
  {
    "objectID": "posts/2024_01_02-why_you_should_elect_a_HDHP.html#resources-further-reading",
    "href": "posts/2024_01_02-why_you_should_elect_a_HDHP.html#resources-further-reading",
    "title": "Why you should elect a high-deductible health plan",
    "section": "Resources & Further Reading",
    "text": "Resources & Further Reading\n\nIRS Publication 969\nFidelity HSA contribution limits and eligibility rules\nInstructions for California Franchise Tax Board Schedule CA (540)\nBogleheads Health Savings Account"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Frameshift",
    "section": "",
    "text": "I am hiring.\n\n\n\nHi everyone, I am hiring for a Research Associate to join the BillionToOne Research and Development team in Menlo Park to help work on making our Oncology tests more sensitive and broader in scope. I am looking for a BS or MS in Molecular / Cell Biology or related fields with 1-2 years research experience in standard molecular biology techniques, and the ability to quickly learn experimental, mathematical, and statistical concepts. BillionToOne can offer interesting and impactful work, great coworkers, and great benefits. Apply using the link below, or DM me to recommend someone you think would be a good fit.\nJob Post | Research Associate | BillionToOne | Core Development, Oncology\n\n\nA blog of indeterminate subject matter and publication frequency from a bioinformatician and data scientist by way of molecular biology.\nLikely topics are molecular biology, biological data science, economics, policy, California ballot measure discussion, and outdoor adventures.\n \n \n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          Title\n        \n         \n          Date - Oldest\n        \n         \n          Date - Newest\n        \n         \n          Author\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\n\n\n\n\n\nSan Francisco political support clustering\n\n\n\n\n\n\npolitics\n\n\n\nIn the spirit of last March’s primary election recommendations analysis, by popular demand, I am again running clustering analysis on the ballot measure and political race recommendations by the various political organizations in San Francisco that issue endorsements of issues and candidates. San Francisco (and much of the Bay Area) has a curious political idiosyncrasy where brand-name Republican candidates and issues get so little traction among voters so as to be considered irrelevant.\n\n\n\n\n\nOct 8, 2024\n\n\nPatrick Cherry\n\n\n\n\n\n\n\n\n\n\n\n\nSan Francisco’s November 2024 ballot review\n\n\n\n\n\n\npolitics\n\n\nopinions\n\n\n\nSan Francisco has a big ballot incoming to voters this November, with 25 total ballot measures for voters to decide upon before election day.\n\n\n\n\n\nAug 29, 2024\n\n\nPatrick Cherry\n\n\n\n\n\n\n\n\n\n\n\n\nCopy-number-variant (CNV) TE Panel Analysis\n\n\n\n\n\n\ndata\n\n\ncode\n\n\ntarget enrichment\n\n\nCNV\n\n\nnext generation sequencing\n\n\ngenetics\n\n\ngenomics\n\n\n\n\n\n\n\n\n\nJul 15, 2024\n\n\nPatrick Cherry\n\n\n\n\n\n\n\n\n\n\n\n\nCITE-seq analysis proof-of-concept\n\n\n\n\n\n\nmulti-modal analysis\n\n\nCITE-seq\n\n\nscRNA-seq\n\n\ncode\n\n\ndata\n\n\n\n\n\n\n\n\n\nJun 20, 2024\n\n\nPatrick Cherry\n\n\n\n\n\n\n\n\n\n\n\n\nemmeans: estimated marginal means\n\n\n\n\n\n\ndata\n\n\ncode\n\n\nexperimental analysis\n\n\nDoE\n\n\nunbalanced DoE\n\n\ncausal inference\n\n\n\n\n\n\n\n\n\nMay 19, 2024\n\n\nPatrick Cherry\n\n\n\n\n\n\n\n\n\n\n\n\nDoE: Design of Experiment\n\n\n\n\n\n\nDoE\n\n\ndesign of experiment\n\n\ncode\n\n\n\n\n\n\n\n\n\nApr 5, 2024\n\n\nPatrick Cherry\n\n\n\n\n\n\n\n\n\n\n\n\nSan Francisco political support data shows true alignment\n\n\n\n\n\n\npolitics\n\n\n\n\n\n\n\n\n\nMar 3, 2024\n\n\nPatrick Cherry\n\n\n\n\n\n\n\n\n\n\n\n\nSan Francisco tree classification model\n\n\n\n\n\n\ndata\n\n\ncode\n\n\ntree models\n\n\n\n\n\n\n\n\n\nFeb 10, 2024\n\n\nPatrick Cherry\n\n\n\n\n\n\n\n\n\n\n\n\nscRNA-seq Analysis: Messy Mouse Brain\n\n\n\n\n\n\ncode\n\n\nscRNA-seq\n\n\nRNA-seq\n\n\n\n\n\n\n\n\n\nJan 22, 2024\n\n\nPatrick Cherry\n\n\n\n\n\n\n\n\n\n\n\n\nGTEX RNA-seq Liver-specific Process and TF Identification\n\n\n\n\n\n\ncode\n\n\nRNA-seq\n\n\n\nUse publicly-available GTEX bulk RNA-seq data to identify uniquely expressed genes in liver tissue, as well as pathways analysis and gene ontology enrichment analysis. Also use TFEA_ChIP to identify transcription factors enriched or depleted in the liver given the gene expression data.\n\n\n\n\n\nJan 3, 2024\n\n\nPatrick Cherry\n\n\n\n\n\n\n\n\n\n\n\n\nWhy you should elect a high-deductible health plan\n\n\n\n\n\n\nfinance\n\n\nhealthcare\n\n\n\n\n\n\n\n\n\nJan 2, 2024\n\n\nPatrick Cherry\n\n\n\n\n\n\n\n\n\n\n\n\nHow I run and deploy this Quarto blog\n\n\n\n\n\n\nnews\n\n\ncode\n\n\ncommunity\n\n\n\n\n\n\n\n\n\nDec 29, 2023\n\n\nPatrick Cherry\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "I am hiring.\n\n\n\nHi everyone, I am hiring for a Research Associate to join the BillionToOne Research and Development team in Menlo Park to help work on making our Oncology tests more sensitive and broader in scope. I am looking for a BS or MS in Molecular / Cell Biology or related fields with 1-2 years research experience in standard molecular biology techniques, and the ability to quickly learn experimental, mathematical, and statistical concepts. BillionToOne can offer interesting and impactful work, great coworkers, and great benefits. Apply using the link below, or DM me to recommend someone you think would be a good fit.\nJob Post | Research Associate | BillionToOne | Core Development, Oncology\n\n\n\nExperience\nBillionToOne | Senior Scientist, Oncology R&D | Sept. 2024 - Current\nTwist Bioscience | Senior R&D Scientist | Jan. 2021 - Apr. 2024\nZymergen | NGS Scientist | May 2019 - Dec. 2020\n\n\nEducation\nPhD in Molecular Biology | University of Colorado Anschutz Medical Campus\nB.A. in Biochemistry and Molecular Biology | Hendrix College\n\n\nBio\nPatrick invents products and procedures for manipulating DNA, RNA, and their sequence information in novel and helpful ways. He focuses on writing reproducible bioinformatic analysis pipelines that cater to users of all levels. Patrick is known for inventing the Twist Pan-cancer Reference Standards (v1 & v2), the Fragmentome Calibration Control, and the RNA Fusion Positive Control.\n\n\nInterests\nPatrick is a PhD scientist skilled in bioinformatics, biological data science, data visualization, statistical modeling, next-generation sequencing (NGS), and tool-building. Patrick has coded reproducible and rigorous pipelines for high-throughput experimental designs and genomic analyses, launched best-in-class oncology reference standards, and invented new molecular methods for DNA and microbe manipulation. Originally trained in Molecular Biology, Patrick is interested in taking his knowledge and practice of data science / bioinformatics to the next level.\n\nRésumé and CV\nView CV in browser\n Download resume as pdf\nResume and CV git repo\n\n\n\nMiscellaneous\nPatrick is an avid outdoorsman and indoorsman. Outdoor pursuits include rock climbing, skiing, trail running, and landscape photography. Indoor hobbies include table top games, cooking, baking, photographic printing / framing / design."
  },
  {
    "objectID": "posts/2023_12_29-How_I_host_quarto_blog.html",
    "href": "posts/2023_12_29-How_I_host_quarto_blog.html",
    "title": "How I run and deploy this Quarto blog",
    "section": "",
    "text": "I started a blog! Isn’t that grand!?"
  },
  {
    "objectID": "posts/2023_12_29-How_I_host_quarto_blog.html#why-do-i-want-to-blog",
    "href": "posts/2023_12_29-How_I_host_quarto_blog.html#why-do-i-want-to-blog",
    "title": "How I run and deploy this Quarto blog",
    "section": "Why do I want to blog?",
    "text": "Why do I want to blog?\nI’ve always had a lot of thoughts and opinions on many topics. And when I have a thought, idea, or opinion I really want to develop, I often use writing (privately, for myself) as an exercise for exploring, evaluating, and making more rigorous the thought.\n\nWhen I sit down to write a book, I do not say to myself, ‘I am going to produce a work of art.’ I write it because there is some lie that I want to expose, some fact to which I want to draw attention, and my initial concern is to get a hearing.\n-George Orwell, “Why I Write”\n\nI suppose I’m passionate about some topics, some of which are clearly in my lane (e.g. Molecular Biology, Photography), and some of which are veering for me (e.g. Economics, Finance, Business Trends). That being said, I feel a duty as a scientist to explore these ideas honestly and with every intent of uncovering truth—especially to a standard that would meet those of the scientific community or journalism community.\nAnd most practically, I sometimes need more space to discuss an idea than is allowed in a tweet or mastodon post. (And those threads never seem to fully connect, anyway.)"
  },
  {
    "objectID": "posts/2023_12_29-How_I_host_quarto_blog.html#introduction-to-self-hosted-blogging",
    "href": "posts/2023_12_29-How_I_host_quarto_blog.html#introduction-to-self-hosted-blogging",
    "title": "How I run and deploy this Quarto blog",
    "section": "Introduction to self-hosted blogging",
    "text": "Introduction to self-hosted blogging\n\nWhich is really an introduction to the publishing ecosystem\nI have chosen to set up a self-hosted blog for many reasons. Self hosting has always seemed like the platonic ideal of a technically capable individual, and so I have set out to manifest this idea as a weekend project. As I will describe below, the default state of this is not ideal, and I’ve learned a lot about git, Github, Github Actions, Rmarkdown, Quarto, YAML, and TOML along the way.\nSelf hosting doesn’t literally mean I have set up a server in my office nook or anything so physically present. Self hosting just means I’m using my own html to render the content you see on the webpage before you. But why might that be worth it?\nThe state of online publishing today is a morass, to say the least. Some problems are quotidian, such as not being able to view a blog page without being bombarded with obnoxious popovers asking to log in, subscribe on the platform, or subscribe to the newsletter by email. Worse, the economics of certain high-profile blogging platforms recruiting writers to post their content there for a six-figure salary requires such platforms, in turn, to either monetize charge other, ‘lesser’ subscribers or readers. With leadership that doesn’t recognize how the mass-dissemination of hate speech can be a threat to democracy, platforms can accrue a hate speech problem, and be financially motivated to keep it.\nSelf-hosted blogging side-steps a lot of these problems. By self-hosting, I can craft a good web experience for the reader: no ads and no obnoxious popovers. I can post content without supporting these ethically dubious platforms with more content and more users (which would then be subjected to their recommendation algorithm). Should I devote the time, I could add an RSS feed, which is reminiscent of the time when all publications (aka blogs) were easily available and sync-able and readable as you wish: kind of like how podcasts still are today. (Can we make NetNewsWire relevant again?)\nPlus, Quarto and Hugo makes for a blazing fast-loading website. How cyber-punk is that?!"
  },
  {
    "objectID": "posts/2023_12_29-How_I_host_quarto_blog.html#why-quarto",
    "href": "posts/2023_12_29-How_I_host_quarto_blog.html#why-quarto",
    "title": "How I run and deploy this Quarto blog",
    "section": "Why Quarto",
    "text": "Why Quarto\nWhy would I choose Quarto as the mechanism of munging my writing and coding into a website? Well, the question partly answers itself.\nI write tons of R markdown scripts already. R Markdown is a display wrapper language that allows for the execution of code in “chunks”. It makes for beautiful documents and reports where the code, figures/tables, and descriptions are fully self-contained for reproducible data analysis. The outputs can be useful and beautiful: as simple as a 1-page PDF, or as interactive as a Shiny web application.\nI already have my data-driven resume in R Markdown. So I have some experience manipulating the rendering code to make documents pretty and multi-output compatible (e.g. PDF, Github Markdown, html). And, in theory, these documents should be easily compatible when translated into a website / blog.\nI plan on posting lots of analysis and code, and the outputs. I have been, on occasion, posting these analyses to my github project repos, like for statistics, scRNA-seq, or bulk RNA-seq. Having a proper blog will be a great home to host all these posts together, and their future posts I can even tag them, so readers who are interested in one type can keep focused on posts of that topic.\nQuarto is the next generation of scientific publishing systems, following-up where R Markdown left off. Quarto natively renders to HTML, PDF, MS Word, ePub (all by first passing through Pandoc, one of the most widely-supported markdown systems). And Quarto natively supports running Python, R, Julia, and Observable JS code, because yes, contrary to popular belief, I can code in Python. (Also, I may mess around with Observable JS in the future; it sounds nice for dashboards and interactive web data explorations.)"
  },
  {
    "objectID": "posts/2023_12_29-How_I_host_quarto_blog.html#sec-road-less-trodden",
    "href": "posts/2023_12_29-How_I_host_quarto_blog.html#sec-road-less-trodden",
    "title": "How I run and deploy this Quarto blog",
    "section": "Deploying without weirdness (The road less trodden)",
    "text": "Deploying without weirdness (The road less trodden)\nBut, it turns out, Quarto’s own recommended implementation of a “Quarto Blog” involves some weird git and deploy mechanics. Quarto recommends either rendering the HTML locally and pushing it to git (using the quarto publish shell command), or setting up a GitHub action.\n\nThe “render HTML locally and push” option is not optimal, because it makes for a very large git repo with large changes for even small updates, all of which are generated programmatically from the Quarto code.\nThe quarto publish shell command creates a new branch of the repo to contain the HTML pages (still checking HTML into git), but this branch is never supposed to be merged with the main/HEAD branch. (Furthermore, it cannot be merged, because it is not descended from the main branch, and contains no copies of files in it main branch.)\nThe last option, which is Quarto’s recommended Github Action, still carries out code execution in the Action, requiring a fully copy of the R environment that solves for all possible code/projects ever run. I got many failures on installing reticulate to the docker image just so I could say print('Hello, world') using Python. Even more annoyingly, Rmarkdown was required to evaluate some code chunks. Both reticulate and Rmarkdown are notoriously difficult and long to install to a new environment.\n\n\n\n\n\n\n\nSince June of 2024, I have made some changes to render and deploy\n\n\n\nAs of June 22, 2024, I realized that the specifics were different than I described in this section. The following section (Section 5) for details on the update.\n\n\nIan Taylor notes this in his blog post about GitHub actions. So, similarly to Ian, I added execute: freeze: auto lines to this blogs _quarto.yml so that 100% of Quarto would be pre-executed locally on my machine, and only if it changed. And those pre-rendered results are committed to git. Thus, this allows for the Github Action to be very sparse, only requiring an installation of Quarto on the shell PATH. From there, Quarto renders the HTML from the frozen quarto documents, and deploys it to Github Pages with an artifact transfer. The GitHub action takes ~ 45 seconds to deploy the site, and my locally run render takes less than 10 seconds. Nice!\n\nRolling your own\nI learned a lot from this adventure. From troubleshooting those malfunctioning Github Action deploys for so long, it really struck me that for this blog, as is so often the case in life, in the outdoors, and in data science, the road less traveled is sometimes a road more suitable. And with good documentation, it’s not too bad to implement.\n\nprint(\"Hello, world\")\n\n[1] \"Hello, world\"\n\n\n\nprint('Hello, world')\n\nHello, world"
  },
  {
    "objectID": "posts/2023_12_29-How_I_host_quarto_blog.html#sec-update-render-deploy",
    "href": "posts/2023_12_29-How_I_host_quarto_blog.html#sec-update-render-deploy",
    "title": "How I run and deploy this Quarto blog",
    "section": "2024-06-22 Update on workings of render and deploy",
    "text": "2024-06-22 Update on workings of render and deploy\nIn June of 2024, I was reviewing the .github/workflows files and the logs of the GitHub actions, and realized that I was doing none of the publish and deploy paths I had described above (Section 4).\n\nIn contrast to bullet point 1, I am rendering the HTML locally (by virtue of the bash quarto render command, which outputs the HTML site artifact to the /docs directory). Then, this version of the repository gets committed to git, and ultimately pushed to GitHub. Thus, I am checking programmatically generated / rendered content into git, in contrast to my previous plan.\n\n\n\n\nScreen capture of GitHub repository languages breakdown\n\n\n\nIn contrast to bullet point 2, I do commit the HTML to git (including the main / HEAD branch).\nI am following bullet point 3. No notes to past Patrick; even with more experience, I still can’t imagine installing reticulate to a virtual machine on a compute node just to publish the next version of a blog.\n\nMy GitHub publish.yml action workflow is very sparse due to entirely local execution and rendering, far more sparse than whatever Quarto has recommended. For example, the publish.yml of this blog doesn’t even install / activate quarto on the compute node, because no quarto rendering processes are needed.\nWhile it is inelegant (and against best practice of avoiding committing programmatically-generated code), I find committing the HTML very simple, and so I go with this. (This decision may not be best for everyone else.) I don’t use the quarto publish command or a different branch for the HTML.\n\nPro: This keeps it simple (one command to publish to the web), and it also keeps the published version aligned with the GitHub-hosted main branch: each push represents a publication event.\nCon: In order to store or back-up an intermediate piece of writing or analysis, I have to keep the start of the .qmd file labeled as “XXXX-XX-XX”; those files are excluded from the render, which I enforce as with the line of code render: - \"!*xxxx_xx_xx*\" in the _quarto.yml file.\n\nI’m a little cagey about putting unfinished work in publicly-visible git repositories anyway, so these files are typically very close to being ready for publication. (I rely on local backups, like using Apple’s OS X Time Machine and Proton Drive to back up works-in-progress, as well as other, independent, and private GitHub repos on a project-specific basis.)\n\n\nSo it works! This process get the job done on a good enough basis for me, and has stood up to numerous updates to the blog, including new analysis posts with packages that were novel to me at the time. What a nice win for streamlined science communication.\n\nUpdate from 2024-08-30\nI encountered the error “fatal: the remote end hung up unexpectedly” while trying to execute git push. This occurred both in the terminal and in R Studio’s nice git GUI. After searching up the error, I was able to fix it by running git config http.postBuffer 524288000 in my git-enabled project directory. All subsequent git pushes have worked.\nSo it would appear one downside of checking into git the entire website artifact is that the size of the git delta can overwhelm the git http transfer (when not configured specially). Word to the wise."
  },
  {
    "objectID": "posts/2024_01_03-GTEX_RNA_seq_liver.html",
    "href": "posts/2024_01_03-GTEX_RNA_seq_liver.html",
    "title": "GTEX RNA-seq Liver-specific Process and TF Identification",
    "section": "",
    "text": "I use the publicly available bulk RNA-Seq data from GTEX (v8) identify biological pathways and processes specific to the liver. I also identify putative transcriptional regulators of these pathways and processes. To ensure that the analysis fits into local memory, I restrict the features in scope to be protein-coding genes, and the tissues in scope to be the following following: heart, kidney, liver, lung, muscle, pancreas, spleen, stomach, pituitary gland, and thyroid.\n\n\nThe GTEx Consortium atlas of genetic regulatory effects across human tissues The Genotype-Tissue Expression (GTEx) project was established to characterize genetic effects on the transcriptome across human tissues and to link these regulatory mechanisms to trait and disease associations.\nI’m interpreting “specific to the liver” to mean uniquely expressed in the liver compared to each other tissue in scope. I will express this in the analysis by running instructing DEseq to run a one-to-many test by ranking liver first among the tissue factors, and then running a p-value meta-analysis on the p-value results for features (protein-coding genes) in all comparisons. (Meaning, it only takes one liver-to-tissue comparison revealing that a gene is NOT up-regulated in the liver to remove that gene from consideration.)\n\n\n\nGiven this is liver RNA-seq, I expect to see genes implicated in the liver main roles, namely:\n\nconditioning the blood by secreting important proteins into it, like serum albumin, immune complement proteins, C-reactive protein, clotting factors (pre-pro-thrombin, fibrinogen, plasminogen), etc.\ncytochrome P450 proteins (CYPxxx), by which the liver catabolizes xenobiotics\nglycolysis, gluconeogenesis, and fatty acid catabolism\nbile salts catabolism and anabolism (cholesterols, hemoglobin/porphyrin)\namino acid conversion and catabolism\n\n\nlibrary(usethis)\nlibrary(readr)                  # for reading and writing csvs\nlibrary(fs)                     # for filesystem navigation in R\nlibrary(dplyr)                  # for dataframe manipulation\nlibrary(tidyr)                  # for dataframe group nesting and manipulation\nlibrary(purrr)                  # for functional programming, including on nested dataframes\nlibrary(readxl)                 # for reading excel files\nlibrary(stringr)                # for efficient string manipulation\nlibrary(magrittr)               # for enhanced pipes\nlibrary(broom)                  # for model manipulation\nlibrary(forcats)                # for factor manipulation\nlibrary(ggplot2)                # for additional plotting features\nlibrary(ensembldb)\nlibrary(DESeq2)\nlibrary(AnnotationDbi)\nlibrary(org.Hs.eg.db)\nlibrary(gage)\nlibrary(gageData)\nlibrary(pathview)\nlibrary(TFEA.ChIP)              # analyze transcription factor enrichment in a gene set\nlibrary(BiocParallel)           # speed up some parallelizeable processing\nregister(MulticoreParam(4))     # set core parallelization to 4 CPU cores\ntheme_set(theme_bw())           # set the default ggplot theme to be clear & cartooney"
  },
  {
    "objectID": "posts/2024_01_03-GTEX_RNA_seq_liver.html#notes-on-approach",
    "href": "posts/2024_01_03-GTEX_RNA_seq_liver.html#notes-on-approach",
    "title": "GTEX RNA-seq Liver-specific Process and TF Identification",
    "section": "",
    "text": "The GTEx Consortium atlas of genetic regulatory effects across human tissues The Genotype-Tissue Expression (GTEx) project was established to characterize genetic effects on the transcriptome across human tissues and to link these regulatory mechanisms to trait and disease associations.\nI’m interpreting “specific to the liver” to mean uniquely expressed in the liver compared to each other tissue in scope. I will express this in the analysis by running instructing DEseq to run a one-to-many test by ranking liver first among the tissue factors, and then running a p-value meta-analysis on the p-value results for features (protein-coding genes) in all comparisons. (Meaning, it only takes one liver-to-tissue comparison revealing that a gene is NOT up-regulated in the liver to remove that gene from consideration.)"
  },
  {
    "objectID": "posts/2024_01_03-GTEX_RNA_seq_liver.html#patricks-hypothesis",
    "href": "posts/2024_01_03-GTEX_RNA_seq_liver.html#patricks-hypothesis",
    "title": "GTEX RNA-seq Liver-specific Process and TF Identification",
    "section": "",
    "text": "Given this is liver RNA-seq, I expect to see genes implicated in the liver main roles, namely:\n\nconditioning the blood by secreting important proteins into it, like serum albumin, immune complement proteins, C-reactive protein, clotting factors (pre-pro-thrombin, fibrinogen, plasminogen), etc.\ncytochrome P450 proteins (CYPxxx), by which the liver catabolizes xenobiotics\nglycolysis, gluconeogenesis, and fatty acid catabolism\nbile salts catabolism and anabolism (cholesterols, hemoglobin/porphyrin)\namino acid conversion and catabolism\n\n\nlibrary(usethis)\nlibrary(readr)                  # for reading and writing csvs\nlibrary(fs)                     # for filesystem navigation in R\nlibrary(dplyr)                  # for dataframe manipulation\nlibrary(tidyr)                  # for dataframe group nesting and manipulation\nlibrary(purrr)                  # for functional programming, including on nested dataframes\nlibrary(readxl)                 # for reading excel files\nlibrary(stringr)                # for efficient string manipulation\nlibrary(magrittr)               # for enhanced pipes\nlibrary(broom)                  # for model manipulation\nlibrary(forcats)                # for factor manipulation\nlibrary(ggplot2)                # for additional plotting features\nlibrary(ensembldb)\nlibrary(DESeq2)\nlibrary(AnnotationDbi)\nlibrary(org.Hs.eg.db)\nlibrary(gage)\nlibrary(gageData)\nlibrary(pathview)\nlibrary(TFEA.ChIP)              # analyze transcription factor enrichment in a gene set\nlibrary(BiocParallel)           # speed up some parallelizeable processing\nregister(MulticoreParam(4))     # set core parallelization to 4 CPU cores\ntheme_set(theme_bw())           # set the default ggplot theme to be clear & cartooney"
  },
  {
    "objectID": "posts/2024_01_03-GTEX_RNA_seq_liver.html#filter-sample-table-to-our-scoped-tissue-types",
    "href": "posts/2024_01_03-GTEX_RNA_seq_liver.html#filter-sample-table-to-our-scoped-tissue-types",
    "title": "GTEX RNA-seq Liver-specific Process and TF Identification",
    "section": "Filter sample table to our scoped tissue types",
    "text": "Filter sample table to our scoped tissue types\n\ngtex_samples_filtered &lt;- gtex_samples %&gt;%\n  dplyr::filter(tissue_id %in% tissue_keep) %&gt;%\n  # on the next line, set order of factors with liver first\n  mutate(\"tissue_id\" = fct_relevel(as_factor(tissue_id), tissue_keep) )\ndplyr::count(gtex_samples_filtered)\n\n     n\n1 4421\n\n\n4421 / 17382 = .254 . We are keeping ~ 25% of samples that were in GTEx v8.\n\ngtex_samples_filtered %&gt;%\n  dplyr::count(tissue_id) %&gt;%\n  mutate(\"percent\" = signif(n / sum(n) * 100, digits = 2)) %&gt;%\n  arrange(desc(n))\n\n                tissue_id   n percent\n1         Muscle_Skeletal 803   18.00\n2                 Thyroid 653   15.00\n3                    Lung 578   13.00\n4    Heart_Left_Ventricle 432    9.80\n5  Heart_Atrial_Appendage 429    9.70\n6                 Stomach 359    8.10\n7                Pancreas 328    7.40\n8               Pituitary 283    6.40\n9                  Spleen 241    5.50\n10                  Liver 226    5.10\n11          Kidney_Cortex  85    1.90\n12         Kidney_Medulla   4    0.09"
  },
  {
    "objectID": "posts/2024_01_03-GTEX_RNA_seq_liver.html#import-the-related-bulk-rnaseq-counts",
    "href": "posts/2024_01_03-GTEX_RNA_seq_liver.html#import-the-related-bulk-rnaseq-counts",
    "title": "GTEX RNA-seq Liver-specific Process and TF Identification",
    "section": "Import the related bulk RNAseq counts",
    "text": "Import the related bulk RNAseq counts\nBulk RNAseq gct files came from: https://www.gtexportal.org/home/downloads/adult-gtex\nI’ll use read counts because that’s what DEseq2’s statistical modeling requires. Unzip it first:\n\ncd ..\ngunzip *.gz\n\n\nrna_counts &lt;- read.delim(\"../../GTEX-liver-parent-dir/bulk-gex_v8_rna-seq_GTEx_Analysis_2017-06-05_v8_RNASeQCv1.1.9_gene_reads.gct\",\n                         sep = \"\\t\", skip = 2) %&gt;%\n  tibble::column_to_rownames(var = \"Name\")\n\n\nTroubleshoot filtering samples/matrix columns\n\nrna_counts_cols &lt;- colnames(rna_counts)\n\n\nlength(gtex_samples_filtered[['sample_id']] %in% rna_counts_cols)\n\n[1] 4421\n\n\n\nanti_join(gtex_samples_filtered, as_tibble(rna_counts_cols),\n          by = c(\"sample_id\" = \"value\"))\n\n[1] sample_id    donor_id     has_genotype tissue_id   \n&lt;0 rows&gt; (or 0-length row.names)\n\n\n0 is the desired outcome of an anti-join.\n\nrna_counts_filtered &lt;- rna_counts %&gt;%\n  dplyr::select(gtex_samples_filtered[['sample_id']]) %&gt;%\n  as.matrix()\n\n\ndim(rna_counts_filtered)\n\n[1] 56200  4421\n\n\nGreat: filtering went correctly. The dashes-to-periods issue was irksome. We have y = 4421 samples, and 56200 features.\n\nall(gtex_samples_filtered[['sample_id']] %in% colnames(rna_counts_filtered))\n\n[1] TRUE\n\n\n\nall(gtex_samples_filtered[['sample_id']] == colnames(rna_counts_filtered))\n\n[1] TRUE\n\n\nGreat, we are good to continue to DEseq2 DESeqDataSet"
  },
  {
    "objectID": "posts/2024_01_03-GTEX_RNA_seq_liver.html#filter-features-to-protein-coding-genes",
    "href": "posts/2024_01_03-GTEX_RNA_seq_liver.html#filter-features-to-protein-coding-genes",
    "title": "GTEX RNA-seq Liver-specific Process and TF Identification",
    "section": "Filter features to protein-coding genes",
    "text": "Filter features to protein-coding genes\nplease restrict your analyses to protein-coding genes and the following tissues:\n\nkeytypes(org.Hs.eg.db)\n\n [1] \"ACCNUM\"       \"ALIAS\"        \"ENSEMBL\"      \"ENSEMBLPROT\"  \"ENSEMBLTRANS\"\n [6] \"ENTREZID\"     \"ENZYME\"       \"EVIDENCE\"     \"EVIDENCEALL\"  \"GENENAME\"    \n[11] \"GENETYPE\"     \"GO\"           \"GOALL\"        \"IPI\"          \"MAP\"         \n[16] \"OMIM\"         \"ONTOLOGY\"     \"ONTOLOGYALL\"  \"PATH\"         \"PFAM\"        \n[21] \"PMID\"         \"PROSITE\"      \"REFSEQ\"       \"SYMBOL\"       \"UCSCKG\"      \n[26] \"UNIPROT\"     \n\n\n\nensgs_to_filter &lt;- tibble(\"ENSG\" = dimnames(rna_counts_filtered)[[1]])\n\n\nensgs_filtered_protein &lt;- ensgs_to_filter %&gt;%\n  mutate(\"short_ensg\" = str_remove(ENSG, \"(?&lt;=ENSG\\\\d{1,14})\\\\.{0,1}\\\\d{0,3}$\"),\n         \"genetype\" = mapIds(org.Hs.eg.db,\n                           keys = short_ensg,\n                           column = \"GENETYPE\",\n                           keytype = \"ENSEMBL\",\n                           multiVals = \"first\"))\n\n'select()' returned 1:many mapping between keys and columns\n\ndplyr::count(ensgs_filtered_protein, genetype) %&gt;% arrange(desc(n))\n\n# A tibble: 10 × 2\n   genetype           n\n   &lt;chr&gt;          &lt;int&gt;\n 1 &lt;NA&gt;           21144\n 2 protein-coding 19198\n 3 pseudo          8918\n 4 ncRNA           5820\n 5 snoRNA           654\n 6 other            368\n 7 snRNA             75\n 8 rRNA              20\n 9 scRNA              2\n10 unknown            1\n\nensgs_filtered_protein &lt;- dplyr::filter(ensgs_filtered_protein, genetype == \"protein-coding\")\n\nActually apply the filter below\n\nrna_counts_filtered &lt;- rna_counts_filtered[ensgs_filtered_protein[[1]], ]\ndim(rna_counts_filtered)\n\n[1] 19198  4421\n\n\n\nNumber of features\n\ndplyr::count(ensgs_to_filter)[[1]]\n\n[1] 56200\n\n\n19184/56200 = 34%, so we are keeping 34% of features in the counts matrix, because ENSEMBL annotates them as protein-coding. Thus we are jettisoning 66% of features as being non-protein coding. What the ENCODE db indicates is that annotated ENCODE entries are the most common, followed by pseudo, ncRNA, snoRNA, “other,” snRNA, rRNA, scRNA, and “unknown.”"
  },
  {
    "objectID": "posts/2024_01_03-GTEX_RNA_seq_liver.html#prepare-data-object-for-deseq2",
    "href": "posts/2024_01_03-GTEX_RNA_seq_liver.html#prepare-data-object-for-deseq2",
    "title": "GTEX RNA-seq Liver-specific Process and TF Identification",
    "section": "Prepare data object for DEseq2",
    "text": "Prepare data object for DEseq2\n\ntissue_DE &lt;- DESeqDataSetFromMatrix(countData = rna_counts_filtered,\n                              colData = gtex_samples_filtered,\n                              design = ~ tissue_id)\ntissue_DE\n\nclass: DESeqDataSet \ndim: 19198 4421 \nmetadata(1): version\nassays(1): counts\nrownames(19198): ENSG00000186092.4 ENSG00000187634.11 ...\n  ENSG00000198695.2 ENSG00000198727.2\nrowData names(0):\ncolnames(4421): GTEX.1117F.0426.SM.5EGHI GTEX.1117F.0726.SM.5GIEN ...\n  GTEX.ZZPU.1426.SM.5GZZ6 GTEX.ZZPU.2626.SM.5E45Y\ncolData names(4): sample_id donor_id has_genotype tissue_id\n\n\n\nFilter for minimum counts\nFilter for features (genes) where there are less than 113 or more samples with normalized counts greater than or equal to 5. (113 is half the number of liver samples in the data, allowing for at least some dispersion in at least among the samples of the tissue type we want to understand.)\n\ntissue_DE &lt;- estimateSizeFactors(tissue_DE)\nidx &lt;- rowSums( counts(tissue_DE, normalized = TRUE) &gt;= 5 ) &gt;= 113\n\n\ntissue_DE &lt;- tissue_DE[idx,]\ndim(tissue_DE)\n\n[1] 18023  4421\n\n\n\n(56200-33387);\n\n[1] 22813\n\n(56200-33387)/56200\n\n[1] 0.4059253\n\n(19184-18013)/19184\n\n[1] 0.06104045\n\n\nOriginally, when filtering for features with a minimum number of counts over the minimum number of genes, I filtered out 22,813 (40.6%) based on low counts / coverage. However, now the I’m filtering genes for counts after filtering for protein coding genes, only 6.1% of features are dropped. This difference in proportionality indicates that low count features and protein coding genes are not necessarily independent. In fact, the non-protein-coding features were enriched for low expression levels across many of the samples."
  },
  {
    "objectID": "posts/2024_01_03-GTEX_RNA_seq_liver.html#run-deseq2-analysis-1",
    "href": "posts/2024_01_03-GTEX_RNA_seq_liver.html#run-deseq2-analysis-1",
    "title": "GTEX RNA-seq Liver-specific Process and TF Identification",
    "section": "Run DEseq2 analysis",
    "text": "Run DEseq2 analysis\n\nrm(gtex_samples, gtex_samples_filtered, rna_counts_filtered, rna_counts)\n\n\ntissue_DE &lt;- DESeq(tissue_DE)\n\nusing pre-existing size factors\n\n\nestimating dispersions\n\n\ngene-wise dispersion estimates\n\n\nmean-dispersion relationship\n\n\nfinal dispersion estimates\n\n\nfitting model and testing\n\n\n-- replacing outliers and refitting for 237 genes\n-- DESeq argument 'minReplicatesForReplace' = 7 \n-- original counts are preserved in counts(dds)\n\n\nestimating dispersions\n\n\nfitting model and testing\n\n\n\ncontrasts_no_intercept &lt;- resultsNames(tissue_DE)[2:length(resultsNames(tissue_DE))]\ncontrasts_no_intercept\n\n [1] \"tissue_id_Heart_Left_Ventricle_vs_Liver\"  \n [2] \"tissue_id_Heart_Atrial_Appendage_vs_Liver\"\n [3] \"tissue_id_Kidney_Cortex_vs_Liver\"         \n [4] \"tissue_id_Kidney_Medulla_vs_Liver\"        \n [5] \"tissue_id_Lung_vs_Liver\"                  \n [6] \"tissue_id_Muscle_Skeletal_vs_Liver\"       \n [7] \"tissue_id_Pancreas_vs_Liver\"              \n [8] \"tissue_id_Spleen_vs_Liver\"                \n [9] \"tissue_id_Stomach_vs_Liver\"               \n[10] \"tissue_id_Pituitary_vs_Liver\"             \n[11] \"tissue_id_Thyroid_vs_Liver\"               \n\n\n\nExtract all contrast data from DEseq\n\ncombine_contrast_results &lt;- function(deseq_obj){\n  \n  contrasts_no_intercept &lt;- resultsNames(deseq_obj)[2:length(resultsNames(deseq_obj))]\n  \n  bind_rows(purrr::map(contrasts_no_intercept, ~ mutate(\n    tibble::rownames_to_column(as.data.frame(results(deseq_obj, name = .x)),\n                               \"ENSG\"),\n    \"contrast\" = .x)\n    )\n  )\n}\n\n\ntissue_DE_results_long &lt;- combine_contrast_results(tissue_DE) %&gt;%\n  mutate(\"contrast\" = str_remove(contrast, \"^tissue_id_\"))\n\ndplyr::count(tissue_DE_results_long, contrast)\n\n                          contrast     n\n1  Heart_Atrial_Appendage_vs_Liver 18023\n2    Heart_Left_Ventricle_vs_Liver 18023\n3           Kidney_Cortex_vs_Liver 18023\n4          Kidney_Medulla_vs_Liver 18023\n5                    Lung_vs_Liver 18023\n6         Muscle_Skeletal_vs_Liver 18023\n7                Pancreas_vs_Liver 18023\n8               Pituitary_vs_Liver 18023\n9                  Spleen_vs_Liver 18023\n10                Stomach_vs_Liver 18023\n11                Thyroid_vs_Liver 18023"
  },
  {
    "objectID": "posts/2024_01_03-GTEX_RNA_seq_liver.html#prepare-data-with-additional-annotations",
    "href": "posts/2024_01_03-GTEX_RNA_seq_liver.html#prepare-data-with-additional-annotations",
    "title": "GTEX RNA-seq Liver-specific Process and TF Identification",
    "section": "Prepare data with additional annotations",
    "text": "Prepare data with additional annotations\n\nCheck if ENSG string manipulation prodcuces unique values\n\ndplyr::count(as_tibble(str_remove(row.names(tissue_DE_results_long),\n           \"(?&lt;=ENSG\\\\d{1,14})\\\\.{0,1}\\\\d{0,3}$\")), value) %&gt;%\n  dplyr::count(n);\n\n# A tibble: 1 × 2\n      n     nn\n  &lt;int&gt;  &lt;int&gt;\n1     1 198253\n\ndplyr::count(as_tibble(row.names(tissue_DE_results_long)), value) %&gt;%\n  dplyr::count(n)\n\n# A tibble: 1 × 2\n      n     nn\n  &lt;int&gt;  &lt;int&gt;\n1     1 198253\n\n\n\ntissue_DE_results_long &lt;- tissue_DE_results_long %&gt;%\n  mutate(\"short_ensg\" = str_remove(ENSG, \"(?&lt;=ENSG\\\\d{1,14})\\\\.{0,1}\\\\d{0,3}$\"),\n         \"symbol\" = mapIds(org.Hs.eg.db,\n                           keys = short_ensg,\n                           column = \"SYMBOL\",\n                           keytype = \"ENSEMBL\",\n                           multiVals = \"first\"),\n         \"entrez\" = mapIds(org.Hs.eg.db,\n                           keys = short_ensg,\n                           column = \"ENTREZID\",\n                           keytype = \"ENSEMBL\",\n                           multiVals = \"first\"),\n         \"name\" = mapIds(org.Hs.eg.db,\n                         keys = short_ensg,\n                         column = \"GENENAME\",\n                         keytype = \"ENSEMBL\",\n                         multiVals = \"first\")\n         )\n\n'select()' returned 1:many mapping between keys and columns\n'select()' returned 1:many mapping between keys and columns\n'select()' returned 1:many mapping between keys and columns\n\n\n\n\nFurther explore the contrasts\n\ntop_10_hits_summary &lt;- tissue_DE_results_long %&gt;%\n  mutate(\"log2FoldChange\" = -1*log2FoldChange) %&gt;%\n  group_by(contrast) %&gt;%\n  arrange(stat, log2FoldChange) %&gt;%\n  slice_head(n = 10) %&gt;%\n  relocate(\"contrast\", \"short_ensg\", \"symbol\", \"entrez\", \"name\", \"log2FoldChange\")\n\ntop_10_hits_summary %&gt;% dplyr::select(\"contrast\", \"symbol\", \"name\", \"log2FoldChange\")\n\n# A tibble: 110 × 4\n# Groups:   contrast [11]\n   contrast                        symbol  name                   log2FoldChange\n   &lt;chr&gt;                           &lt;chr&gt;   &lt;chr&gt;                           &lt;dbl&gt;\n 1 Heart_Atrial_Appendage_vs_Liver SLC27A5 solute carrier family…           7.77\n 2 Heart_Atrial_Appendage_vs_Liver RDH16   retinol dehydrogenase…           9.76\n 3 Heart_Atrial_Appendage_vs_Liver SLC22A1 solute carrier family…          11.8 \n 4 Heart_Atrial_Appendage_vs_Liver CYP2E1  cytochrome P450 famil…          11.5 \n 5 Heart_Atrial_Appendage_vs_Liver ASGR1   asialoglycoprotein re…          10.1 \n 6 Heart_Atrial_Appendage_vs_Liver CYP2D6  cytochrome P450 famil…           8.74\n 7 Heart_Atrial_Appendage_vs_Liver CPS1    carbamoyl-phosphate s…           8.98\n 8 Heart_Atrial_Appendage_vs_Liver APOM    apolipoprotein M                 7.20\n 9 Heart_Atrial_Appendage_vs_Liver ATF5    activating transcript…           7.22\n10 Heart_Atrial_Appendage_vs_Liver MST1    macrophage stimulatin…           7.25\n# ℹ 100 more rows\n\n\nThis is looking promising. When sorted by statistic and the top ten genes are displayed from each tissue, there are many common genes that are relatively up-regulated (in mRNA expression) in liver compared to each of the other tissues. SLC27A5 is very commonly (and very strongly) up-regulated in liver; RDH16 and CPS1 are as well.\n\n\nMA Plot (analysis QC)\n\nma_plot &lt;- tissue_DE_results_long %&gt;%\n  ggplot(aes(y = log2FoldChange, x = baseMean)) +\n  geom_point(alpha = 0.1, size = .1) +\n  geom_density_2d() +\n  stat_smooth(formula = y ~ x, method = lm, color = \"yellow\", linewidth = 0.3) +\n  scale_x_log10() +\n  labs(title = \"MA-plot: a scatter plot of log2 fold changes\",\n       x = \"mean of normalized counts\",\n       y = \"log2 fold change\") +\n  facet_wrap(~ contrast)\nma_plot\n\n\n\n\n\n\n\n\nFor all contrasts, the data points (gene IDs) are roughly symmetric around the x-axis (indicating no systematic bias), and the majority are close to the x-axis, indicating many genes are not differentially expressed.\n\nma_hist &lt;- tissue_DE_results_long %&gt;%\n  ggplot(aes(log2FoldChange)) +\n  geom_histogram(binwidth = 1) +\n  labs(title = \"MA-plot: histogram of log2 fold changes\",\n       y = \"number of genes\",\n       x = \"log2 fold change\") +\n  facet_wrap(~ contrast)\nma_hist\n\n\n\n\n\n\n\n\n\nma_hist_stats &lt;- tissue_DE_results_long %&gt;%\n  group_by(contrast) %&gt;%\n  dplyr::summarize(\"mean log2FoldChange\" = mean(log2FoldChange),\n                   \"S.D. log2FoldChange\" = sd(log2FoldChange),\n                   \"n features\" = n())\nma_hist_stats\n\n# A tibble: 11 × 4\n   contrast             `mean log2FoldChange` `S.D. log2FoldChange` `n features`\n   &lt;chr&gt;                                &lt;dbl&gt;                 &lt;dbl&gt;        &lt;int&gt;\n 1 Heart_Atrial_Append…               -0.0807                  2.49        18023\n 2 Heart_Left_Ventricl…               -0.160                   2.53        18023\n 3 Kidney_Cortex_vs_Li…                0.120                   2.10        18023\n 4 Kidney_Medulla_vs_L…               -0.0501                  2.29        18023\n 5 Lung_vs_Liver                       0.134                   2.37        18023\n 6 Muscle_Skeletal_vs_…               -0.342                   2.77        18023\n 7 Pancreas_vs_Liver                  -0.0455                  2.21        18023\n 8 Pituitary_vs_Liver                  0.229                   2.69        18023\n 9 Spleen_vs_Liver                    -0.156                   2.36        18023\n10 Stomach_vs_Liver                    0.112                   2.27        18023\n11 Thyroid_vs_Liver                   -0.0922                  2.37        18023\n\n\nAs a clearer summary plot, the histograms for each contrast a preponderance of genes are close to the 0 on the x-axis, indicating many features have limited fold change between samples.\n\nstat_hist &lt;- tissue_DE_results_long %&gt;%\n  ggplot(aes(stat)) +\n  geom_histogram(bins = 40) +\n  labs(title = \"Stat (statistic)\",\n       y = \"number of genes\",\n       x = \"Statistic\") +\n  facet_wrap(~ contrast)\nstat_hist\n\n\n\n\n\n\n\n\nWhile the test statistic outputted by DEseq2 is less “clipped” to zero than the p-values (many of which exhaust the range and get reported as 0.000000e+00), the statistic range/distribution is not the same for all contrasts, notably for the Kidney Medulla vs Liver comparison. This can be explained from the Filter sample table to our scoped tissue types section of this document, which shows the Kidney Medulla GTEx tissue set as having far fewer samples (n = 4) than the other tissue types (mean = 368, sd = 230).\nAs long as we group_by() when ranking, sorting, and otherwise comparing (in long format), this should be okay. Once pivoted into wide format, this can present a problem because not every column of values will be able to react similarly to the same ranking, sorting, or cut-offs."
  },
  {
    "objectID": "posts/2024_01_03-GTEX_RNA_seq_liver.html#summarize-by-feature",
    "href": "posts/2024_01_03-GTEX_RNA_seq_liver.html#summarize-by-feature",
    "title": "GTEX RNA-seq Liver-specific Process and TF Identification",
    "section": "Summarize by feature",
    "text": "Summarize by feature\nWhich is effectively a wide format, appropriate for joining. (Grouped-by calculations in the same column run more efficiently and are easier to program than row-wise multi-column calculations.\n\ntissue_DE_results_feature_summary &lt;- tissue_DE_results_long %&gt;%\n  summarize(across(.cols = c(\"log2FoldChange\", \"stat\"),\n                   .fns = c(\"mean\" = mean, \"sd\" = sd,\n                            \"below_zero_min\" = ~ min( (.x[.x &lt;0]) ) ),\n                   .names = \"{.fn}_{.col}\"),\n            across(.cols = c(\"lfcSE\", \"pvalue\", \"padj\"),\n                   .fns = c(\"mean\" = mean, \"sd\" = sd,\n                            \"min\" = min),\n                   .names = \"{.fn}_{.col}\"),\n            .by = c(\"ENSG\", \"short_ensg\", \"symbol\", \"entrez\", \"name\"))\n\nWarning: There were 4798 warnings in `summarize()`.\nThe first warning was:\nℹ In argument: `across(...)`.\nℹ In group 7: `ENSG = \"ENSG00000188290.10\"`, `short_ensg = \"ENSG00000188290\"`,\n  `symbol = \"HES4\"`, `entrez = \"57801\"`, `name = \"hes family bHLH transcription\n  factor 4\"`.\nCaused by warning in `min()`:\n! no non-missing arguments to min; returning Inf\nℹ Run `dplyr::last_dplyr_warnings()` to see the 4797 remaining warnings.\n\n\nTo explain why I’m contriving these summary statistics, I have to first acknowledge that downstream processing (GO analysis, TF.ChIP) expects continuous data ( e.g. log2FoldChange, adj.p.val) for both the up-regulated and down-regulated features. Thus, in drawing conclusions from the comparisons, I am balancing maintaining continuous variables that can be used later with summary statistics that suggest consistency across all the tissue type comparisons made (and in the case of the highly confident features/genes, these suggestive consistency metrics indicate high levels of agreement).\nThese metrics are the mean_log2FoldChange, sd_log2FoldChange, and the below_zero_min_log2FoldChange, (as well as these versions on stat and padj). Together, these continuous feature summary metrics describe how consistently the metrics are across comparisons (e.g. liver to thyroid, liver to lung, etc.). When a feature is specific to the liver, the mean will be negative and large, the sd will be smaller than the mean, and the min_below_zero will not be far away from the mean. Such an outcome indicates that all the comparisons agree that a gene is specifically up-regulated in the liver compared to all other tissues considered here.\nApplying these summary transformations to the log2FoldChange, pvalue, and padj are reasonable because these metrics either do not depend on the number of samples (log2FoldChange), or account for the number of samples in the condition (pvalue, and padj), explicitly allowing for comparisons between conditions."
  },
  {
    "objectID": "posts/2024_01_03-GTEX_RNA_seq_liver.html#pivot-to-wide",
    "href": "posts/2024_01_03-GTEX_RNA_seq_liver.html#pivot-to-wide",
    "title": "GTEX RNA-seq Liver-specific Process and TF Identification",
    "section": "Pivot to wide",
    "text": "Pivot to wide\n\ntissue_DE_results_wide &lt;- tissue_DE_results_long %&gt;%\n  pivot_wider(id_cols = c(\"ENSG\", \"short_ensg\", \"symbol\", \"entrez\", \"name\"),\n              names_from = \"contrast\",\n              values_from = c(\"baseMean\", \"log2FoldChange\", \"lfcSE\", \"stat\", \"pvalue\", \"padj\")) %&gt;%\n  left_join(tissue_DE_results_feature_summary,\n            by = c(\"ENSG\", \"short_ensg\", \"symbol\", \"entrez\", \"name\")) %&gt;%\n  relocate(short_ensg, mean_log2FoldChange, mean_stat, symbol, name,\n           sd_log2FoldChange, below_zero_min_log2FoldChange, sd_stat, below_zero_min_stat, mean_lfcSE,\n           sd_lfcSE, min_lfcSE, mean_pvalue, sd_pvalue, min_pvalue, mean_padj, sd_padj, min_padj) %&gt;%\n  arrange(mean_padj, mean_log2FoldChange)"
  },
  {
    "objectID": "posts/2024_01_03-GTEX_RNA_seq_liver.html#pathway-analysis",
    "href": "posts/2024_01_03-GTEX_RNA_seq_liver.html#pathway-analysis",
    "title": "GTEX RNA-seq Liver-specific Process and TF Identification",
    "section": "Pathway analysis",
    "text": "Pathway analysis\nwith GAGE\n\nPrepare GAGE’s needed data\n\ndata(kegg.sets.hs)\ndata(sigmet.idx.hs)\nkegg.sets.hs = kegg.sets.hs[sigmet.idx.hs]\n\n\n\nPerpare DEseq2 result for GAGE\n\nfoldchanges = tissue_DE_results_wide$mean_log2FoldChange\nnames(foldchanges) = tissue_DE_results_wide$entrez\nhead(foldchanges)\n\n     10998       8608       1373          1        432       1571 \n -7.601432  -9.367489  -9.478086  -8.152599  -9.564476 -10.454284"
  },
  {
    "objectID": "posts/2024_01_03-GTEX_RNA_seq_liver.html#run-gage",
    "href": "posts/2024_01_03-GTEX_RNA_seq_liver.html#run-gage",
    "title": "GTEX RNA-seq Liver-specific Process and TF Identification",
    "section": "Run GAGE",
    "text": "Run GAGE\n\nkeggres = gage(foldchanges, gsets = kegg.sets.hs, same.dir = TRUE)\n\n\nView Results\nRemember that “down-regulated” (i.e. the “$less” table) is up-regulated in liver, due to the DEseq contrasts.\n\nas.data.frame(head(keggres$less, 20)) %&gt;%\n  dplyr::select(\"p.geomean\", \"stat.mean\", \"p.val\", \"set.size\")\n\n                                                         p.geomean stat.mean\nhsa00830 Retinol metabolism                           2.779301e-15 -9.570937\nhsa00982 Drug metabolism - cytochrome P450            1.480861e-13 -8.552114\nhsa00980 Metabolism of xenobiotics by cytochrome P450 3.742608e-12 -7.909572\nhsa00140 Steroid hormone biosynthesis                 7.829862e-12 -7.983658\nhsa00983 Drug metabolism - other enzymes              3.227821e-11 -7.785412\nhsa04610 Complement and coagulation cascades          1.590380e-10 -7.112876\nhsa00260 Glycine, serine and threonine metabolism     8.543085e-08 -6.071404\nhsa00053 Ascorbate and aldarate metabolism            3.398045e-07 -6.247135\nhsa04146 Peroxisome                                   3.456135e-07 -5.215038\nhsa00071 Fatty acid metabolism                        8.363971e-07 -5.220379\nhsa00040 Pentose and glucuronate interconversions     8.446235e-07 -5.659101\nhsa00860 Porphyrin and chlorophyll metabolism         3.474540e-06 -4.994513\nhsa00500 Starch and sucrose metabolism                5.047958e-06 -4.774060\nhsa00380 Tryptophan metabolism                        1.180799e-05 -4.535570\nhsa00280 Valine, leucine and isoleucine degradation   2.437706e-05 -4.277734\nhsa03320 PPAR signaling pathway                       4.831137e-05 -4.070571\nhsa04976 Bile secretion                               5.608400e-05 -4.037952\nhsa04975 Fat digestion and absorption                 8.538312e-05 -4.013194\nhsa00120 Primary bile acid biosynthesis               1.087369e-04 -4.465205\nhsa00591 Linoleic acid metabolism                     1.465698e-04 -4.016737\n                                                             p.val set.size\nhsa00830 Retinol metabolism                           2.779301e-15       60\nhsa00982 Drug metabolism - cytochrome P450            1.480861e-13       68\nhsa00980 Metabolism of xenobiotics by cytochrome P450 3.742608e-12       66\nhsa00140 Steroid hormone biosynthesis                 7.829862e-12       52\nhsa00983 Drug metabolism - other enzymes              3.227821e-11       48\nhsa04610 Complement and coagulation cascades          1.590380e-10       69\nhsa00260 Glycine, serine and threonine metabolism     8.543085e-08       32\nhsa00053 Ascorbate and aldarate metabolism            3.398045e-07       22\nhsa04146 Peroxisome                                   3.456135e-07       78\nhsa00071 Fatty acid metabolism                        8.363971e-07       43\nhsa00040 Pentose and glucuronate interconversions     8.446235e-07       28\nhsa00860 Porphyrin and chlorophyll metabolism         3.474540e-06       38\nhsa00500 Starch and sucrose metabolism                5.047958e-06       50\nhsa00380 Tryptophan metabolism                        1.180799e-05       42\nhsa00280 Valine, leucine and isoleucine degradation   2.437706e-05       44\nhsa03320 PPAR signaling pathway                       4.831137e-05       70\nhsa04976 Bile secretion                               5.608400e-05       70\nhsa04975 Fat digestion and absorption                 8.538312e-05       44\nhsa00120 Primary bile acid biosynthesis               1.087369e-04       16\nhsa00591 Linoleic acid metabolism                     1.465698e-04       28\n\n\nWhat’s down-regulated in liver compared to other tissues in the scope of our analysis?\n\nas.data.frame(head(keggres$greater, 30)) %&gt;%\n  dplyr::select(\"p.geomean\", \"stat.mean\", \"p.val\", \"set.size\")\n\n                                                            p.geomean stat.mean\nhsa04260 Cardiac muscle contraction                      4.226930e-05 4.0485431\nhsa04510 Focal adhesion                                  8.259308e-05 3.8042683\nhsa04020 Calcium signaling pathway                       4.162910e-04 3.3711842\nhsa04971 Gastric acid secretion                          4.992409e-04 3.3629263\nhsa04540 Gap junction                                    2.260180e-03 2.8795187\nhsa04512 ECM-receptor interaction                        1.063049e-02 2.3255219\nhsa00512 Mucin type O-Glycan biosynthesis                1.216787e-02 2.3178454\nhsa04310 Wnt signaling pathway                           1.365919e-02 2.2195964\nhsa04010 MAPK signaling pathway                          1.744613e-02 2.1151951\nhsa04740 Olfactory transduction                          1.772475e-02 2.1215165\nhsa04144 Endocytosis                                     1.777225e-02 2.1102659\nhsa04360 Axon guidance                                   2.267219e-02 2.0114313\nhsa04810 Regulation of actin cytoskeleton                2.364354e-02 1.9896256\nhsa04070 Phosphatidylinositol signaling system           4.524494e-02 1.7041610\nhsa04742 Taste transduction                              4.633914e-02 1.7021994\nhsa04666 Fc gamma R-mediated phagocytosis                5.200090e-02 1.6354378\nhsa00603 Glycosphingolipid biosynthesis - globo series   5.488971e-02 1.6593012\nhsa04916 Melanogenesis                                   6.589818e-02 1.5133800\nhsa04960 Aldosterone-regulated sodium reabsorption       7.526571e-02 1.4512414\nhsa04970 Salivary secretion                              7.787447e-02 1.4259647\nhsa04966 Collecting duct acid secretion                  9.503672e-02 1.3287753\nhsa04720 Long-term potentiation                          1.029613e-01 1.2717033\nhsa04722 Neurotrophin signaling pathway                  1.100258e-01 1.2305040\nhsa04012 ErbB signaling pathway                          1.306016e-01 1.1275052\nhsa00604 Glycosphingolipid biosynthesis - ganglio series 1.335755e-01 1.1341216\nhsa04730 Long-term depression                            1.385772e-01 1.0911741\nhsa04330 Notch signaling pathway                         1.424132e-01 1.0774610\nhsa04962 Vasopressin-regulated water reabsorption        1.465997e-01 1.0579483\nhsa03010 Ribosome                                        1.579660e-01 1.0084068\nhsa00562 Inositol phosphate metabolism                   1.619385e-01 0.9910216\n                                                                p.val set.size\nhsa04260 Cardiac muscle contraction                      4.226930e-05       76\nhsa04510 Focal adhesion                                  8.259308e-05      200\nhsa04020 Calcium signaling pathway                       4.162910e-04      176\nhsa04971 Gastric acid secretion                          4.992409e-04       73\nhsa04540 Gap junction                                    2.260180e-03       88\nhsa04512 ECM-receptor interaction                        1.063049e-02       84\nhsa00512 Mucin type O-Glycan biosynthesis                1.216787e-02       30\nhsa04310 Wnt signaling pathway                           1.365919e-02      148\nhsa04010 MAPK signaling pathway                          1.744613e-02      262\nhsa04740 Olfactory transduction                          1.772475e-02       97\nhsa04144 Endocytosis                                     1.777225e-02      201\nhsa04360 Axon guidance                                   2.267219e-02      129\nhsa04810 Regulation of actin cytoskeleton                2.364354e-02      209\nhsa04070 Phosphatidylinositol signaling system           4.524494e-02       78\nhsa04742 Taste transduction                              4.633914e-02       43\nhsa04666 Fc gamma R-mediated phagocytosis                5.200090e-02       93\nhsa00603 Glycosphingolipid biosynthesis - globo series   5.488971e-02       14\nhsa04916 Melanogenesis                                   6.589818e-02       99\nhsa04960 Aldosterone-regulated sodium reabsorption       7.526571e-02       42\nhsa04970 Salivary secretion                              7.787447e-02       85\nhsa04966 Collecting duct acid secretion                  9.503672e-02       27\nhsa04720 Long-term potentiation                          1.029613e-01       69\nhsa04722 Neurotrophin signaling pathway                  1.100258e-01      127\nhsa04012 ErbB signaling pathway                          1.306016e-01       87\nhsa00604 Glycosphingolipid biosynthesis - ganglio series 1.335755e-01       15\nhsa04730 Long-term depression                            1.385772e-01       68\nhsa04330 Notch signaling pathway                         1.424132e-01       47\nhsa04962 Vasopressin-regulated water reabsorption        1.465997e-01       43\nhsa03010 Ribosome                                        1.579660e-01       87\nhsa00562 Inositol phosphate metabolism                   1.619385e-01       57\n\n\nNote that the p-values for pathways down-regulated in the liver are less significant than those of pathways up-regulated, likely due to by high dispersion among the comparison tissues.\n\n\nPathway plots\n\nkeggrespathways &lt;- data.frame(id = rownames(keggres$less), keggres$less) %&gt;% \n  as_tibble() %&gt;%\n  dplyr::slice_head(n = 5) %&gt;% \n  .$id %&gt;% \n  as.character() %&gt;%\n  # top 5, plus some pet pathways part of my starting hypothesis\n  append(\"hsa04976 Bile secretion\") %&gt;%\n  append(\"hsa00860 Porphyrin and chlorophyll metabolism\") %&gt;%\n  append(\"hsa00280 Valine, leucine and isoleucine degradation\")\n\nkeggresids = str_sub(keggrespathways, start = 1, end = 8)\n\nkeggrespathways\n\n[1] \"hsa00830 Retinol metabolism\"                          \n[2] \"hsa00982 Drug metabolism - cytochrome P450\"           \n[3] \"hsa00980 Metabolism of xenobiotics by cytochrome P450\"\n[4] \"hsa00140 Steroid hormone biosynthesis\"                \n[5] \"hsa00983 Drug metabolism - other enzymes\"             \n[6] \"hsa04976 Bile secretion\"                              \n[7] \"hsa00860 Porphyrin and chlorophyll metabolism\"        \n[8] \"hsa00280 Valine, leucine and isoleucine degradation\"  \n\n\n\nsetwd(\"./2024_01_03-GTEX_RNA_seq_liver/\")\n# Define plotting function for applying later\nplot_pathway &lt;- function(pid) {pathview(gene.data = foldchanges,\n                                        pathway.id = pid, species = \"hsa\", new.signature = FALSE)}\n\n# plot multiple pathways (plots saved to disk and returns a throwaway list object)\ntmp = sapply(keggresids, plot_pathway)\nsetwd(\"..\")\n\nTypically, expression heat maps use the color-blind-unfriendly and unintuitive red for up-regulated expression, and green for decreased expression.\nHowever, here, because I never inverted (multiplied by -1) the log2-fold-change values, green is for increased relative expression, and red is for decreased relative expression.\n\nhsa00830 Retinol metabolism\n\n\n\nhsa00830 Retinol metabolism\n\n\n\n\nhsa00982 Drug metabolism - cytochrome P450\n\n\n\nhsa00982 Drug metabolism - cytochrome P450\n\n\n\n\nhsa00980 Metabolism of xenobiotics by cytochrome P450\n\n\n\nhsa00980 Metabolism of xenobiotics by cytochrome P450\n\n\n\n\nhsa00983 Drug metabolism - other enzymes\n\n\n\nhsa00983 Drug metabolism - other enzymes\n\n\n\n\nhsa00140 Steroid hormone biosynthesis\n\n\n\nhsa00140 Steroid hormone biosynthesis\n\n\n\n\nhsa00983 Drug metabolism - other enzymes\n\n\n\nhsa00983 Drug metabolism - other enzymes\n\n\n\n\nhsa04976 Bile secretion\n\n\n\nhsa04976 Bile secretion\n\n\nThe bile secretion graphic is particularly interesting because it depicts spatial regulation across cell types, and those expectations (hypotheses) are upheld by the bulk RNA-seq data from GTEx. Most hepatocyte genes are up-regulated, whereas most cholangiocyte (epithelial cells of the bile duct) genes are not up-regulated.\n\n\nhsa00860 Porphyrin and chlorophyll metabolism\n\n\n\nhsa00860 Porphyrin and chlorophyll metabolism\n\n\nPorphyrin metabolism is a curious case: not many of the GO term’s genes are up-regulated, and even along a linear pathway, not all the genes in are up-regulated. I am especially surprised to see biliverdin to bilirubin conversion down-regulated relative to the other tissues in this set. Meanwhile, two of bilirubin’s downstream steps are up-regulated."
  },
  {
    "objectID": "posts/2024_01_03-GTEX_RNA_seq_liver.html#chip-transcription-factor-data",
    "href": "posts/2024_01_03-GTEX_RNA_seq_liver.html#chip-transcription-factor-data",
    "title": "GTEX RNA-seq Liver-specific Process and TF Identification",
    "section": "ChIP Transcription Factor data",
    "text": "ChIP Transcription Factor data\n\nchip_index &lt;- get_chip_index(encodeFilter = TRUE)\nDE_CM_chip &lt;- contingency_matrix(genes_upreg, #genes_ctrl,\n                                 chip_index = chip_index)\nDE_CM_chip_stats &lt;- getCMstats(DE_CM_chip, chip_index)\n\n\nTF_ranking &lt;- rankTFs(DE_CM_chip_stats, rankMethod = \"gsea\", makePlot = FALSE)\nTF_ranking %&gt;%\n  mutate(\"is_significant\" = if_else(pVal &lt;= 0.05, TRUE, FALSE)) %&gt;%\n  arrange(desc(is_significant), desc(ES), pVal) %&gt;%\n  slice_head(n = 30)\n\n             TF       ES arg.ES pVal numberOfChIPs is_significant\nFOXA2     FOXA2  0.99125      8 0.00             2           TRUE\nHNF1A     HNF1A  0.97817     16 0.02             1           TRUE\nHNF4G     HNF4G  0.97522     19 0.02             2           TRUE\nNR2F6     NR2F6  0.97234     20 0.03             1           TRUE\nHNF4A     HNF4A  0.96642     26 0.00             3           TRUE\nFOXA1     FOXA1  0.94599     40 0.01             3           TRUE\nNR2F2     NR2F2  0.94015     44 0.01             3           TRUE\nATF3       ATF3  0.76196     11 0.04             6           TRUE\nMXI1       MXI1 -0.78348    564 0.05             5           TRUE\nSIN3A     SIN3A -0.81379    654 0.04             5           TRUE\nCHD2       CHD2 -0.86508    618 0.01             5           TRUE\nMAZ         MAZ -0.88623    639 0.04             3           TRUE\nCREM       CREM -0.89989    672 0.05             2           TRUE\nELF1       ELF1 -0.90544    627 0.00             5           TRUE\nCBFB       CBFB -0.95049    660 0.04             2           TRUE\nPML         PML -0.96507    663 0.04             1           TRUE\nPBX3       PBX3 -0.97234    668 0.03             1           TRUE\nSMAD5     SMAD5 -0.99854    686 0.00             1           TRUE\nNR5A1     NR5A1  0.95779     30 0.08             1          FALSE\nHHEX       HHEX  0.95488     32 0.06             1          FALSE\nGFI1       GFI1  0.95342     33 0.12             1          FALSE\nONECUT1 ONECUT1  0.94905     36 0.11             1          FALSE\nMBD4       MBD4  0.94614     38 0.10             1          FALSE\nSOX13     SOX13  0.94469     39 0.14             1          FALSE\nPAXIP1   PAXIP1  0.93886     43 0.13             1          FALSE\nFOXJ3     FOXJ3  0.93450     46 0.19             1          FALSE\nFOXP1     FOXP1  0.93294     48 0.06             2          FALSE\nATF4       ATF4  0.92868     50 0.17             1          FALSE\nZNF609   ZNF609  0.92576     52 0.23             1          FALSE\nTHRB       THRB  0.92431     53 0.13             1          FALSE\n\n\n\nTFrank_ES_p_plot &lt;- TF_ranking %&gt;% arrange(desc(ES)) %&gt;%\n  mutate(\"rank\" = row_number()) %&gt;%\n  ggplot(aes(y = ES, x = rank, color = pVal)) +\n  geom_point() +\n  scale_color_viridis_c(option = \"D\") +\n  gghighlight::gghighlight(pVal &lt;= .05, #keep_scales = TRUE,\n                           label_key = TF,\n                           unhighlighted_params = list(color = NULL, fill = NULL,\n                                                       size = 0.3, alpha = .5)) +\n  geom_hline(yintercept = 0, linetype = \"dashed\") +\n  coord_cartesian(ylim = c(-1.25, 1.25)) +\n  #scale_x_continuous(trans = \"log1p\") +\n  labs(title = \"Enrichment score by rank, pVal highlighted\",\n       y = \"Enrighment score\",\n       x = \"Rank\",\n       caption = \"Enrichment score of transcription factors by rank. p-values &lt; .05 are highlighted, other TFs are grey.\")\nTFrank_ES_p_plot\n\n\n\n\n\n\n\n\nNotes on TF_ranking results:\n\nHNF4 (Hepatocyte Nuclear Factor 4) is a nuclear receptor protein mostly expressed in the liver, gut, kidney, and pancreatic beta cells that is critical for liver development.\nForkhead box protein A2 (FOXA2), also known as hepatocyte nuclear factor 3-beta (HNF-3B), is a transcription factor that plays an important role during development\nATF-3 (Cyclic AMP-dependent transcription factor) is an activating member of the mammalian activation transcription factor/cAMP responsive element-binding (CREB) protein family. ATF-3 is induced upon physiological stress in various tissues.\nForkhead box protein A1 (FOXA1), also known as hepatocyte nuclear factor 3-alpha (HNF-3A), is a transcriptional activator for liver-specific transcripts such as albumin and transthyretin, and they also interact with chromatin as a pioneer factor.\nJUND: a functional component of the AP1 transcription factor complex. It has been proposed to protect cells from p53-dependent senescence and apoptosis.\nTAF1 is TFIID subunit 1, a general pol II transcriptional complex component.\nREST: RE1-silencing transcription factor gene encodes a transcriptional repressor which represses neuronal genes in non-neuronal tissues.\nHNF1 homeobox A (hepatocyte nuclear factor 1 homeobox A), also known as HNF1A, is ubiquitously expressed in many tissues and cell types. The protein encoded by this gene is a transcription factor that is highly expressed in the liver and is involved in the regulation of the expression of several liver-specific genes.\n\nThe GSEA option was unhelpful at sorting TFs by the level of evidence to support them (all enrichment scores were 1, and all p-values were 0). Wilcoxon doesn’t make a pretty plot, but it gives us helpful sorting data.\nStill, I’m not impressed by these results. Even with more stringent filtering (log2-fold-change, p-value), I still can’t get a list that looks specific to the liver.\n\nRun GSEA on TFEA.ChIP\n\nGSEA.result[[\"Enrichment.table\"]] %&gt;% dplyr::arrange(`pval.adj`, desc(ES)) %&gt;% slice_head(n = 40) %&gt;%\n  dplyr::select(!c(\"pval.adj\", \"Arg.ES\"))\n\n                    Accession   Cell Treatment      TF      ES p.val\n1     ENCSR297GII.HNF4G.liver  liver             HNF4G 0.54053     0\n2      ENCSR016BMM.TAF1.liver  liver              TAF1 0.49766     0\n3     ENCSR735KEY.FOXA1.liver  liver             FOXA1 0.49263     0\n4   ENCSR000EZP.SREBF1.Hep-G2 Hep-G2            SREBF1 0.48636     0\n5     ENCSR310NYI.FOXA2.liver  liver             FOXA2 0.48343     0\n6     ENCSR324RCI.FOXA1.liver  liver             FOXA1 0.48302     0\n7     ENCSR000BQW.MBD4.Hep-G2 Hep-G2              MBD4 0.47427     0\n8      ENCSR205FOW.ATF3.liver  liver              ATF3 0.47074     0\n9      ENCSR480LIS.ATF3.liver  liver              ATF3 0.47024     0\n10  ENCSR000EVQ.TCF7L2.Hep-G2 Hep-G2            TCF7L2 0.46749     0\n11  ENCSR000EZO.SREBF2.Hep-G2 Hep-G2            SREBF2 0.45675     0\n12   ENCSR516HUP.ZBTB33.liver  liver            ZBTB33 0.45420     0\n13     ENCSR893QWP.REST.liver  liver              REST 0.45235     0\n14    ENCSR080XEY.FOXA2.liver  liver             FOXA2 0.44996     0\n15     ENCSR736BUG.EGR1.liver  liver              EGR1 0.44549     0\n16    ENCSR656JZL.HHEX.Hep-G2 Hep-G2              HHEX 0.44122     0\n17   ENCSR800QIT.HNF1A.Hep-G2 Hep-G2             HNF1A 0.43966     0\n18     ENCSR867WPH.REST.liver  liver              REST 0.43082     0\n19    ENCSR669LCD.ATF4.Hep-G2 Hep-G2              ATF4 0.42999     0\n20    ENCSR000BQX.NFIC.Hep-G2 Hep-G2              NFIC 0.42440     0\n21     ENCSR837GTK.JUND.liver  liver              JUND 0.42418     0\n22     ENCSR196HGZ.JUND.liver  liver              JUND 0.42393     0\n23      ENCSR521IID.MAX.liver  liver               MAX 0.41846     0\n24   ENCSR267DFA.FOXA1.Hep-G2 Hep-G2             FOXA1 0.41741     0\n25 ENCSR887LYD.SMARCC2.Hep-G2 Hep-G2           SMARCC2 0.41697     0\n26     ENCSR290ZOS.EGR1.liver  liver              EGR1 0.40709     0\n27   ENCSR620YNB.KAT2B.Hep-G2 Hep-G2             KAT2B 0.40506     0\n28   ENCSR000BRO.MYBL2.Hep-G2 Hep-G2             MYBL2 0.40453     0\n29   ENCSR345YWJ.ZBTB33.liver  liver            ZBTB33 0.40031     0\n30      ENCSR994YLZ.YY1.liver  liver               YY1 0.39534     0\n31   ENCSR000BVM.NR2F2.Hep-G2 Hep-G2             NR2F2 0.39042     0\n32    ENCSR444LIN.TCF7.Hep-G2 Hep-G2              TCF7 0.38687     0\n33    ENCSR849FVL.GFI1.Hep-G2 Hep-G2              GFI1 0.38592     0\n34   ENCSR029LBT.FOXP1.Hep-G2 Hep-G2             FOXP1 0.38317     0\n35   ENCSR000EEW.ESRRA.Hep-G2 Hep-G2             ESRRA 0.38049     0\n36    ENCSR000BHU.RXRA.Hep-G2 Hep-G2              RXRA 0.37795     0\n37   ENCSR000EEU.HNF4A.Hep-G2 Hep-G2             HNF4A 0.37548     0\n38   ENCSR791AGT.ZNF24.Hep-G2 Hep-G2             ZNF24 0.37417     0\n39   ENCSR413AJG.FOXJ3.Hep-G2 Hep-G2             FOXJ3 0.37378     0\n40     ENCSR000BJX.SP1.Hep-G2 Hep-G2               SP1 0.37328     0\n\n\nThe above table shows that GSEA (in addition to TFEA.ChIP) also returns many liver-implicated transcriptional regulators. The above table is sorted in descending order of effect size (running enrichment score), and also displays the accession ID of the tissue sample that generated the ChIP seq data set. The TFs (transcription factors) can be in the table more than once.\n\nGSEA.result[[\"Enrichment.table\"]] %&gt;% dplyr::count(TF) %&gt;% arrange(desc(n)) %&gt;% slice_head(n = 10)\n\n       TF  n\n1    CTCF 31\n2   EP300 11\n3     MAX 11\n4    JUND 10\n5    REST 10\n6   GABPA  9\n7     MYC  7\n8    TAF1  7\n9  ZBTB33  7\n10   ATF3  6\n\n\nThe above table counts the number of line items for each TF; despite CTCF (a practically ubiquitous transcriptional and chromatin regulator) being so highly represented across data sets, its running effect size was not high enough to make it show up in the top 40 (5.8%) of line items. (Same goes for EP300.)\nWhat this result shows is that the number of ChIP datasets under consideration in this package is not evenly distributed across all potential transcription factors, and so the number of times a transcription factor is identified as a hit is not a good measure of significance or salience."
  },
  {
    "objectID": "posts/2024_02_10-SF_tree_classification.html",
    "href": "posts/2024_02_10-SF_tree_classification.html",
    "title": "San Francisco tree classification model",
    "section": "",
    "text": "A purple-leaf plum (Prunus cerasifera ‘Krauter Vesuvius’) tree bluming along a hilly San Francisco street\nThe goal is the make a predictor of whether a tree tracked in San Francisco is a Department of Public Works maintained legal status tree, or some other legal status."
  },
  {
    "objectID": "posts/2024_02_10-SF_tree_classification.html#legal-status",
    "href": "posts/2024_02_10-SF_tree_classification.html#legal-status",
    "title": "San Francisco tree classification model",
    "section": "Legal status",
    "text": "Legal status\n\nsftrees %&gt;%\n  count(legal_status, sort = TRUE) %&gt;%\n  mutate(percent = round( n / sum(n) * 100, digits = 1))\n\n\n  \n\n\n\n\nsftrees %&gt;% count(legal_status, caretaker, sort = TRUE) %&gt;% head(20)\n\n\n  \n\n\n\nSo the legal_status of “DPW Maintained” does not equate with a caretaker of “DPW”—in fact, most of the time, DPW-legal status trees are privately taken care of.\n\ncol_plot_legalstatus_by_caretaker &lt;- sftrees %&gt;%\n  count(legal_status, caretaker) %&gt;%\n  add_count(caretaker, wt = n, name = \"caretaker_count\") %&gt;%\n  filter(caretaker_count &gt; 50) %&gt;%\n  group_by(legal_status) %&gt;%\n  mutate(percent_legal = n / sum(n)) %&gt;%\n  ggplot(aes(percent_legal, caretaker, fill = legal_status)) +\n  geom_col(position = \"dodge\") +\n  scale_fill_viridis_d(option = \"D\", begin = 0.1, end = 0.7, na.value = \"grey50\") +\n  labs(x = \"proportion of trees in each category\")\ncol_plot_legalstatus_by_caretaker"
  },
  {
    "objectID": "posts/2024_02_10-SF_tree_classification.html#nas-in-data",
    "href": "posts/2024_02_10-SF_tree_classification.html#nas-in-data",
    "title": "San Francisco tree classification model",
    "section": "NAs in data",
    "text": "NAs in data\n\nsftrees %&gt;%\n  summarise(across(everything(), ~ sum(is.na(.x))),\n            \"n\" = n()) %&gt;%\n  relocate(n) %&gt;%\n  t() %&gt;% as_tibble(.name_repair = \"minimal\", rownames = \"col_name\")\n\n\n  \n\n\n\nInstead of using glimpse(), I’m using R’s native t(), or transpose, to print the results lengthwise instead of as columns across the page. The n row at the start shows how many rows are in the dataframe; the other named columns show how many NAs are in the data in each column. The date and dhb (Diameter at breast height) columns show significant levels of NAs (64.5% and 21.7%, respectively)."
  },
  {
    "objectID": "posts/2024_02_10-SF_tree_classification.html#species",
    "href": "posts/2024_02_10-SF_tree_classification.html#species",
    "title": "San Francisco tree classification model",
    "section": "Species",
    "text": "Species\n\nsftrees %&gt;% count(species, sort = TRUE) %&gt;%\n  mutate(\"rank\" = row_number()) %&gt;% head(20)\n\n\n  \n\n\n\n\nsftrees %&gt;% count(species, sort = TRUE, name = \"n_observations\") %&gt;%\n  count(n_observations, name = \"n_tree_species\") %&gt;%\n  head(10)\n\n\n  \n\n\n\n\ncol_plot_tree_species &lt;- sftrees %&gt;%\n  count(species) %&gt;%\n  filter(n &gt;= 400) %&gt;%\n  mutate(\"species\" = fct_rev(fct_infreq(as_factor(species), w = n))) %&gt;%\n  ggplot(aes(y = n, x = species, fill = species)) +\n  geom_col() +\n  scale_fill_viridis_d(option = \"D\", begin = 0.1, end = 0.7, na.value = \"grey50\") +\n  coord_flip() +\n  labs(y = \"Number of trees\", x = \"Species\") +\n  theme(legend.position = \"none\",\n        axis.text.y = element_text(size = 4))\ncol_plot_tree_species\n\n\n\n\n\n\n\n\nFrom this distribution of tree species with 400 or more trees, we can see some species data quality issues. The observation “trees(s)::” for species is the most abundant classification, which really isn’t a classification at all. The 26th most common species observation is “::”, so no data at all.\nIn this San Francisco data, the most common tree is the Sycamore: London Plane (Platanus x hispanica) with 11557. I personally like the Cherry Plum tree (Prunus cerasifera), which is 7th with 6716 trees. Interestingly, there are lots of Southern Magnolia trees (Magnolia grandiflora), in 8th place with 6285.\nAlso interestingly, there are 67 tree species with one individual in the data set. And 44 species with just 2 individuals. There are lots of lone or near-lone tree species in San Francisco.\n\nWhat about tree family?\nWe could perhaps call the tree family, or ‘spp’ based on the final word in the species data column.\nA lot of common species names end in “tree”, so I will accommodate that by writing a special regex that will pull the next to last word if the last word is “tree”. Also, some trees are\n\nsftrees %&gt;%\n  mutate(\"tree_family\" = str_extract(species, \"(\\\\w+(?=\\\\s(T|t)ree))|(\\\\w+)$\")) %&gt;%\n  # use above regex to get next to last word when last word is tree\n  # also, don't keep \"tree\" text, because some species are coded as both with\n  # and without tree at the end; this regex collapses those irregularities\n  count(tree_family, sort = TRUE) %&gt;%\n  mutate(\"rank\" = row_number()) %&gt;% head(50)\n\n\n  \n\n\n\nBased on pseudo-“family” classification, the Box tree is the most common tree family observed, followed by the Plane, and then Fig, “Xmas,” Magnolia, Cheery, Plum, Myrtle, Strawberry, Gum, and Pear families of trees."
  },
  {
    "objectID": "posts/2024_02_10-SF_tree_classification.html#plot_size",
    "href": "posts/2024_02_10-SF_tree_classification.html#plot_size",
    "title": "San Francisco tree classification model",
    "section": "plot_size",
    "text": "plot_size\n\nsftrees %&gt;% count(plot_size, sort = TRUE) %&gt;% head(20)"
  },
  {
    "objectID": "posts/2024_02_10-SF_tree_classification.html#prepare-data-for-model",
    "href": "posts/2024_02_10-SF_tree_classification.html#prepare-data-for-model",
    "title": "San Francisco tree classification model",
    "section": "Prepare data for model",
    "text": "Prepare data for model\n\ntrees_formodel &lt;- sftrees %&gt;% #trees_df\n  mutate(\n    \"legal_status\" = case_when(\n      legal_status == \"DPW Maintained\" ~ legal_status,\n      TRUE ~ \"Other\"),\n    \"plot_size\" = parse_number(plot_size)) %&gt;%\n  select(-address) %&gt;%\n  na.omit() %&gt;%\n  mutate_if(is.character, factor)\n\nWarning: There was 1 warning in `mutate()`.\nℹ In argument: `plot_size = parse_number(plot_size)`.\nCaused by warning:\n! 109 parsing failures.\n  row col expected actual\n10979  -- a number    TR \n13245  -- a number    CUT\n13495  -- a number    TR \n13501  -- a number    TR \n13502  -- a number    TR \n..... ... ........ ......\nSee problems(...) for more details.\n\nhead(trees_formodel)\n\n\n  \n\n\n\n\ncol_plot_legalstatus_by_caretaker &lt;- trees_formodel %&gt;%\n  count(legal_status, caretaker) %&gt;%\n  add_count(caretaker, wt = n, name = \"caretaker_count\") %&gt;%\n  filter(caretaker_count &gt; 50) %&gt;%\n  group_by(legal_status) %&gt;%\n  mutate(percent_legal = n / sum(n)) %&gt;%\n  ggplot(aes(percent_legal, caretaker, fill = legal_status)) +\n  geom_col(position = \"dodge\") +\n  scale_fill_viridis_d(option = \"D\", begin = 0.1, end = 0.7, na.value = \"grey50\") +\n  labs(fill = NULL,\n       x = \"proportion of trees in each category\")\ncol_plot_legalstatus_by_caretaker"
  },
  {
    "objectID": "posts/2024_02_10-SF_tree_classification.html#quick-plotmap-of-data",
    "href": "posts/2024_02_10-SF_tree_classification.html#quick-plotmap-of-data",
    "title": "San Francisco tree classification model",
    "section": "Quick plot/map of data",
    "text": "Quick plot/map of data\n\ntree_loc_plot &lt;- trees_formodel %&gt;%\n  ggplot(aes(x = longitude, y = latitude, color = legal_status)) +\n  geom_point(alpha = 0.6, size = 0.25) +\n  labs(color = NULL, x = NULL, y = NULL) +\n  theme(panel.border = element_blank(),\n        legend.position = c(0.1, 0.9), legend.justification = c(0, .5)) +\n  scale_color_viridis_d(option = \"D\", begin = 0.1, end = 0.7)\n\nWarning: A numeric `legend.position` argument in `theme()` was deprecated in ggplot2\n3.5.0.\nℹ Please use the `legend.position.inside` argument of `theme()` instead.\n\ntree_loc_plot"
  },
  {
    "objectID": "posts/2024_02_10-SF_tree_classification.html#build-model",
    "href": "posts/2024_02_10-SF_tree_classification.html#build-model",
    "title": "San Francisco tree classification model",
    "section": "Build Model",
    "text": "Build Model\n\nset.seed(123)\ntrees_split &lt;-initial_split(trees_formodel, strata = legal_status)\ntrees_train &lt;- training(trees_split)\ntrees_test &lt;- testing(trees_split)\n\nnrow(trees_train); nrow(trees_test)\n\n[1] 17881\n\n\n[1] 5961"
  },
  {
    "objectID": "posts/2024_02_10-SF_tree_classification.html#feature-engineering-for-the-date",
    "href": "posts/2024_02_10-SF_tree_classification.html#feature-engineering-for-the-date",
    "title": "San Francisco tree classification model",
    "section": "Feature engineering for the date",
    "text": "Feature engineering for the date\n\ntree_rec &lt;- recipe(legal_status ~ ., data = trees_train) %&gt;%\n  update_role(tree_id, new_role = \"ID\") %&gt;%\n  step_other(species, caretaker, threshold = .01) %&gt;%\n  step_other(site_info, threshold = .005) %&gt;%\n  step_dummy(all_nominal(), -all_outcomes()) %&gt;%\n  step_date(date, features = c(\"year\")) %&gt;%\n  step_rm(date) %&gt;%\n  step_downsample(legal_status)\n\ntree_prep &lt;- prep(tree_rec)\n\njuiced &lt;- juice(tree_prep)\n\n\nReview data preprocessing results\n\njuiced %&gt;% count(legal_status)"
  },
  {
    "objectID": "posts/2024_02_10-SF_tree_classification.html#set-up-workflow",
    "href": "posts/2024_02_10-SF_tree_classification.html#set-up-workflow",
    "title": "San Francisco tree classification model",
    "section": "Set up workflow",
    "text": "Set up workflow\nconvenience functions\n\ntune_wf &lt;- workflow() %&gt;%\n  add_recipe(tree_rec) %&gt;%\n  add_model(tune_spec)"
  },
  {
    "objectID": "posts/2024_02_10-SF_tree_classification.html#train-test-some-model-hyperparameters",
    "href": "posts/2024_02_10-SF_tree_classification.html#train-test-some-model-hyperparameters",
    "title": "San Francisco tree classification model",
    "section": "Train-test some model hyperparameters",
    "text": "Train-test some model hyperparameters\n\nset.seed(234)\ntrees_folds &lt;- vfold_cv(trees_train)\n\nset.seed(345)\ndoParallel::registerDoParallel()\ntune_res &lt;- tune_grid(\n  tune_wf,\n  resamples = trees_folds,\n  grid = 20)\n\n\nview results\n\nshow_best(tune_res, metric = \"accuracy\")\n\n\n  \n\n\n\n\nshow_best(tune_res, metric = \"roc_auc\")\n\n\n  \n\n\n\n\nside_facet_n_mtry_plot &lt;- tune_res %&gt;%\n  collect_metrics() %&gt;%\n  filter(.metric == \"roc_auc\") %&gt;%\n  select(mean, min_n, mtry) %&gt;%\n  pivot_longer(min_n:mtry,\n    values_to = \"value\",\n    names_to = \"parameter\"\n  ) %&gt;%\n  ggplot(aes(value, mean, color = parameter)) +\n  geom_point(show.legend = FALSE) +\n  facet_wrap(~parameter, scales = \"free_x\") +\n  labs(x = NULL, y = \"AUC\")\nside_facet_n_mtry_plot\n\n\n\n\n\n\n\n\n\nnonortho_gid_n_mtry_plot &lt;- tune_res %&gt;%\n  collect_metrics() %&gt;%\n  filter(.metric == \"roc_auc\") %&gt;%\n  select(mean, min_n, mtry) %&gt;%\n  ggplot(aes(x = min_n, y = mtry, color = mean)) +\n  geom_point(size = 6) +\n  geom_hline(yintercept = 10, linetype = \"dotted\") +\n  geom_hline(yintercept = 30, linetype = \"dotted\") +\n  geom_vline(xintercept = 2, linetype = \"dotted\") +\n  geom_vline(xintercept = 8, linetype = \"dotted\") +\n  scale_color_viridis_c(option = \"D\") +\n  labs(color = \"roc_auc\")\nnonortho_gid_n_mtry_plot\n\n\n\n\n\n\n\n\nWhile it’s not a regular grid (of orthogonal combinations that would allow for ceteris paribus testing) of min_n and mtry, but we can get an idea of what is going on. It looks like higher values of mtry are good (above about 10) and lower values of min_n are good (below about 10). We can get a better handle on the hyperparameters by tuning one more time, this time using regular_grid(). Let’s set ranges of hyperparameters we want to try, (inside of the dotted line box displayed on the 2D plot above) based on the results from our initial tune."
  },
  {
    "objectID": "posts/2024_02_10-SF_tree_classification.html#train-test-some-model-hyperparameters-1",
    "href": "posts/2024_02_10-SF_tree_classification.html#train-test-some-model-hyperparameters-1",
    "title": "San Francisco tree classification model",
    "section": "Train-test some model hyperparameters",
    "text": "Train-test some model hyperparameters\n\nset.seed(456)\n\nrf_grid &lt;- grid_regular(mtry(range = c(10, 30)),\n                        min_n(range = c(2, 8)),\n                        levels = 5)\n\nnrow(rf_grid)\n\n[1] 25\n\n\n\nset.seed(456)\ndoParallel::registerDoParallel()\ntune_reg_res &lt;- tune_grid(tune_wf,\n                          resamples = trees_folds,\n                          grid = rf_grid)\n\n\nview results\n\ntune_reg_res %&gt;% select_best(metric = \"accuracy\")\n\n\n  \n\n\n\n\ntune_reg_res %&gt;% select_best(metric = \"roc_auc\")\n\n\n  \n\n\n\n\ngrid_n_mtry_plot &lt;- tune_reg_res %&gt;%\n  collect_metrics() %&gt;%\n  filter(.metric == \"roc_auc\") %&gt;%\n  mutate(min_n = factor(min_n)) %&gt;%\n  ggplot(aes(mtry, mean, color = min_n)) +\n  geom_line(alpha = 0.5, linewidth = 1.5) +\n  geom_point() +\n  labs(title = \"Tune AUC by min_n and mtry\",\n       y = \"AUC\")\ngrid_n_mtry_plot\n\n\n\n\n\n\n\n\n\nnonortho_gid_n_mtry_plot &lt;- tune_reg_res %&gt;%\n  collect_metrics() %&gt;%\n  filter(.metric == \"roc_auc\") %&gt;%\n  select(mean, min_n, mtry) %&gt;%\n  ggplot(aes(x = min_n, y = mtry, color = mean)) +\n  geom_point(size = 6) +\n  scale_color_viridis_c(option = \"D\") +\n  labs(color = \"roc_auc\")\nnonortho_gid_n_mtry_plot\n\n\n\n\n\n\n\n\nBoth 2D plots show that the mtry = 15 and min_n = 2 hyperperamater maximize the AUC for this random forest model."
  },
  {
    "objectID": "posts/2024_02_10-SF_tree_classification.html#understand-final-model",
    "href": "posts/2024_02_10-SF_tree_classification.html#understand-final-model",
    "title": "San Francisco tree classification model",
    "section": "Understand final model",
    "text": "Understand final model\n\nfinal_rf_vip_plot &lt;- final_rf %&gt;%\n  set_engine(\"ranger\", importance = \"permutation\") %&gt;%\n  fit(legal_status ~ ., data = select(juiced, -tree_id)) %&gt;%\n  vip(geom = \"point\")\nfinal_rf_vip_plot\n\n\n\n\n\n\n\n\nSatisfyingly, whether the caretaker is private makes a large difference, and latitude and longitide each make a large (and approximately equal) contribution."
  },
  {
    "objectID": "posts/2024_02_10-SF_tree_classification.html#make-predictions",
    "href": "posts/2024_02_10-SF_tree_classification.html#make-predictions",
    "title": "San Francisco tree classification model",
    "section": "Make predictions",
    "text": "Make predictions\n\nfinal_result_ano &lt;- final_result %&gt;%\n  collect_predictions() %&gt;%\n  mutate(\"correct_prediction\" = if_else(legal_status == `.pred_class`, \"Correct\", \"Incorrect\")) %&gt;%\n  bind_cols(trees_test)\n\ntree_correct_loc_plot &lt;- final_result_ano %&gt;%\n  ggplot(aes(x = longitude, y = latitude, color = correct_prediction)) +\n  geom_point(alpha = 0.6, size = 0.25) +\n  labs(color = NULL, x = NULL, y = NULL) +\n  theme(panel.border = element_blank(),\n        legend.position = c(0.1, 0.9), legend.justification = c(0, .5)) +\n  scale_color_viridis_d(option = \"C\", begin = 0.1, end = 0.8) +\n  coord_equal()\ntree_correct_loc_plot\n\n\n\n\n\n\n\n\nThere is some degree of spatial bias in the incorrect assignment of legal status of the SF Trees."
  },
  {
    "objectID": "posts/2024_04_05-DoE_design_of_experiment.html",
    "href": "posts/2024_04_05-DoE_design_of_experiment.html",
    "title": "DoE: Design of Experiment",
    "section": "",
    "text": "DoE experiments can make conclusions that are greater than the sum of its parts, through thoughtful designs. Much like an architectural facade, DoEs often employ a grid of conditions that do not perfectly sample every possible combination. Image credit: seier+seier on Flickr under CC"
  },
  {
    "objectID": "posts/2024_04_05-DoE_design_of_experiment.html#introduction-and-motivation",
    "href": "posts/2024_04_05-DoE_design_of_experiment.html#introduction-and-motivation",
    "title": "DoE: Design of Experiment",
    "section": "Introduction and motivation",
    "text": "Introduction and motivation\nIn this post, I describe an experimental design for generating a genomics dataset using statistical DoE principles.\nMy motivation for designing and carrying out this experiment was that I had data showing the sensitivity (by percent recall of a set of genetic variants expressed as mRNAs) over a controlled range of concentrations (made by serial dilution). However, those data were only gathered with one target enrichment panel, which was a fairly esoteric TE Panel. The goal was to extend the conclusions on sensitivity and recall to other, more mainstream panels used in RNA-seq experiments. We’ll call the esoteric panel “Panel A.” I had the idea that, given the success Panel A’s bioinformatic performance, it could be useful to show that many different TE panels work well for an extension of said bioinformatic performance, encouraging the use of those other panels by showing equal analytical performance in a head-to-head experiment.\nTo do so, I proposed using multiplexed capture (to save on wet-lab resources and time), 100 ng of input RNA (and optionally 10 ng), and technical replicates (n = 3, or a minimum of n = 2 for dropout protection). These are parameterized in this DoE script below, and the resulting sample plan is exported to google sheets for directing the lab activities a team of scientists and research associates.\n\nHistorical roots of design of experiment\nBritish statistician and geneticist Ronald A. Fisher (1890-1962) heavily influenced the modern ideals of experimental design. His influential 1922 publication on maximum likelihood laid the groundwork for now widely-taught concepts of sufficiency, information, and efficiency (Fisher 1922). Fisher also pioneered and developed the methods of study randomization, and he promoted principles of design of experiment (Edwards 1974). The radical idea (at the time) was that designs could be based on varying multiple factors simultaneously, and the downstream analysis could be supported by multi-factor analysis of variance. This progress in design and analysis allowed for the testing of many variables and factors in one experiment (when designed properly) instead of many one-by-one factor comparisons."
  },
  {
    "objectID": "posts/2024_04_05-DoE_design_of_experiment.html#brief-intro-to-doe-concepts",
    "href": "posts/2024_04_05-DoE_design_of_experiment.html#brief-intro-to-doe-concepts",
    "title": "DoE: Design of Experiment",
    "section": "Brief intro to DoE concepts",
    "text": "Brief intro to DoE concepts\nBelow, I provide a glossary of design of experiment (DoE) concepts and their definitions. After, I describe which apply to here, and how I incorporated that concept into the design.\n\nIndependent variable: Also called treatment factor, it is a variable under study as a potential cause, and so it is controlled at or near some target value, as informed by the hypothesis. An experiment can have more than one independent variable; it is common to analyze multiple independent variables at the same time.\nBackground variable: Also called a lurking variable, it is a variable that the experimenter is not aware exists or affects the outcome of the experiment. Due to this lack of awareness, it is not controlled. In a well-planned experiment, lurking variables should balance out in effect so as not to impact the conclusion of the experiment.\nDependent variable: Also called a response variable, it is the outcome or output measured from the experiment. An experiment can have multiple dependent variables, but it is more typical to analyze for one of these variables at a time.\nReplicate: additional runs of the same experiment (same treatment, same controls, etc.). Replicates help to understand the within-condition variability of outcomes, and decide if enough evidence is present to conclude the independent variable is causing a change in the response variable.\nConfounded factors: Confounding is a relationship of two or more factors to each other. Two or more factors are confounded when they are auto-correlated in the design—that is, when the levels / values of each factor co-occur throughout the experiment—to the exclusion of other combinations of levels of those factors. In this situation, it is impossible to provide evidence for which factor causes any observed change in the response variable. (Some analyses will emit an error or a warning when confounding or autocorrelation of independent variable occurs.)\nBiased factor: Bias in another relationship between experimental factors. Bias occurs when an experimenter makes a change to an independent variable at the precise time when changes in a lurking variable also occur. This is effectively confounding with a lurking variable, but because lurking variables are not always known or measured, the situation can go undetected, which can lead to erroneous conclusions. For this reason, it can be good to measure suspected lurking variables even if they are not controlled for retrospective analysis of bias.\nExperimental error: the difference between the measured response for a condition and the long-run average of that condition. In this definition, error is a statistical measure, and not literally a “mistake” or “inaccuracy,” as synonyms for error suggest. Experimental error is expected (to some degree) because background or lurking variables can subtly influence outcomes or measurements.\nRandomization: the random assignment of conditions to a particular sample of an experiment, which leads to the likely reduction of experimental error.\nBlocking: the spreading of all other variables as evenly as is practical over the variable in question. If a variable is suspected of being a lurking variable, it can be “blocked” in the experimental design, which spreads its bias (if any) as evenly as is practical across all other combinations of factors. This even spreading allows for a bias in the blocked variable to be detected with high precision in analysis.\n\nExperimental error is subdivided into bias error and random error:\n\nBias error tends to remain constant or change in a consistent pattern over time or with other variables (whether measured or not).\nRandom error changes from one experiment to another unpredictably. However, it the long run, random error averages to zero and has a consistent probability distribution that allows us to draw conclusions.\n\n\nAplying DoE principle to this experiment\nRandomization is a good way to get random error to cancel out within an experiment. Any one randomized experiment that suffers (by chance) from a preponderance of random error will not replicate that random error in a repeat experiment, because the randomization will change, and likely distribute the error differently across samples. Thus, randomization is effective for preventing error from confounding experimental conclusion in the long term.\nBut what if we want to prevent error from affecting this experiment? If we have a hypothesized source of the bias in mind, then we can deploy a randomized complete block design, also known as using blocking on a variable.\nIf we have a suspected influence from a variable that we’re not testing as an independent variable, we can attempt to minimize the contribution of its effect (or bias) to the experimental conclusions."
  },
  {
    "objectID": "posts/2024_04_05-DoE_design_of_experiment.html#procedure",
    "href": "posts/2024_04_05-DoE_design_of_experiment.html#procedure",
    "title": "DoE: Design of Experiment",
    "section": "Procedure",
    "text": "Procedure\n\npanel_info &lt;- tribble(\n  ~panel,  ~panel_size,  ~needed_sequencing,\n  \"TE Panel A\", 3.0, NA,\n  \"TE Panel B\",  36.8, NA,\n  \"TE Panel C\",  35.8, NA,\n  \"Whole Transcriptome\", NA, NA)"
  },
  {
    "objectID": "posts/2024_04_05-DoE_design_of_experiment.html#doe-with-blocking-for-multiple-operators",
    "href": "posts/2024_04_05-DoE_design_of_experiment.html#doe-with-blocking-for-multiple-operators",
    "title": "DoE: Design of Experiment",
    "section": "DoE with blocking for multiple operators",
    "text": "DoE with blocking for multiple operators\nI will block for the operators carrying out library prep, because operator is a known source of variation that is not relevant to understanding the effect of TE panel, RNA input mass, or concentration on performance. (For example, my direct report is better at target enrichment than I am—she gets better fold-80 scores and off-target percentages than me routinely. But we’re here to study the panels, not the operators, and we need to share the work.)\nBlocking is the non-random assignment of samples to groups to minimize differences in the sample composition between the groups such that any effect of the grouping can be determined by the model and ignored (modeled out quantitatively and precisely).\n\npanels &lt;- factor(c(\"TE Panel A\", \"TE Panel V\", \"TE Panel C\", \"Whole Transcriptome\"))\nconcentrations &lt;- factor(c(.027, .0027, .00027, .000027, .0000027))\nmass_inputs &lt;- factor(c(10, 100))\n\nvec_levels_for_variables &lt;- c(panels, concentrations, mass_inputs)\n\nrna_TE_sensitivity_doe &lt;- gen.factorial(c(4,5,2), nVars = 3, factors = c(1),\n                                               varNames = c(\"panel\", \"conc\", \"mass_input\")) %&gt;%\n  bind_rows(., ., .) \n\nrna_TE_sensitivity_doe\n\n\n  \n\n\nrna_TE_sensitivity_doe &lt;- AlgDesign::optBlock(frml = ~ conc + panel + mass_input,\n                                              withinData = rna_TE_sensitivity_doe,\n                                              blocksizes = rep(60, 2), nRepeats = 3)\n\nThe optBlock function from the AlgDesign package is maximizing \\(|X'X|\\), the determinant of the product of the inverse of the design matrix and the design matrix, a process called D-optimization. (The D criterion minimizes the overall variance of the estimates during analysis.) (Donev and Atkinson 1988) Further explanation is beyond the scope of this tutorial, but is available in copious detail in the documentation of the AlgDesign package.\n\nrna_TE_sensitivity_doe$D;\n\n[1] 0.3789291\n\nrna_TE_sensitivity_doe$diagonality\n\n[1] 0.871\n\n\nDiagonality is the degree to which the blocked variables are uncorrelated: a diagonality of 1.0 is perfectly uncorrelated. A value of 0.871 is moderate. We are getting values less than 1.0, because not every number of unique sample ( 2 * 4 * 5 ) factors to be processed is divisible by the number of blocking groups. We will see this effect illustrated in the “Check orthogonality of blocking” section.\n\nrna_TE__blocking_df &lt;- purrr::map(names(rna_TE_sensitivity_doe$Blocks),\n                        ~ rna_TE_sensitivity_doe$Blocks[[.x]]) %&gt;%\n  bind_rows(.id = \"operator\") %&gt;%\n  as_tibble() %&gt;%\n  mutate(\"operator\" = LETTERS[as.integer(operator)],\n         \"operator\" = paste(\"Operator\", operator)) %&gt;%\n  arrange(panel, conc, mass_input)\n\nAbove, for each block, we bind the rows together into one data frame, converting the block names to the intended use, which is specifying which operator is working. Then arrange the data by panel name, concentration, and mass input.\n\n(panels_to_join &lt;- rna_TE__blocking_df %&gt;%\n  distinct(panel) %&gt;%\n   bind_cols(rename(panel_info, \"panel_name\" = 1)))\n\n\n  \n\n\n\nAbove, we prepare the panel info for joining.\n\n(fusconcs_to_join &lt;- rna_TE__blocking_df %&gt;%\n  distinct(conc) %&gt;%\n  bind_cols(concentrations) %&gt;%\n  rename(\"concentrations\" = 2))\n\n\n  \n\n\n\nAs well as preparing the concentration info for joining.\n\n(massinput_to_join &lt;- rna_TE__blocking_df %&gt;%\n  distinct(mass_input) %&gt;%\n  bind_cols(mass_inputs) %&gt;%\n  rename(\"mass_inputs\" = 2))\n\n\n  \n\n\n\nAnd lastly prepare the mass input levels for joining.\n\nrna_TE__doe_blocked &lt;- rna_TE__blocking_df %&gt;%\n  left_join(panels_to_join, by = \"panel\") %&gt;%\n  left_join(fusconcs_to_join, by = \"conc\") %&gt;%\n  left_join(massinput_to_join, by = \"mass_input\") %&gt;%\n  select(\"panel\" = \"panel_name\", \"conc\" = \"concentrations\",\n         \"mass_input\" = \"mass_inputs\", \"operator\", panel_size, needed_sequencing) %&gt;%\n  arrange(panel, desc(conc), mass_input) %&gt;%\n  mutate(\"replicate_num\" = row_number(), .by = c(panel, conc, mass_input)) %&gt;%\n  relocate(replicate_num, .after = operator) %&gt;%\n  rename(\"LP_operator\" = \"operator\") %&gt;%\n  arrange(panel, mass_input) %&gt;%\n  # below, assign samples to captures in plexity of up to 6\n  # the table is sorted in order of panel and mass input, so most of the time,\n  # samples will be paired with other samples with the same mass input, which is\n  # best practice.\n  mutate(\"capture\" = ceiling(row_number()/6) ) %&gt;%\n  relocate(\"capture\", .after = replicate_num) %&gt;%\n  arrange(panel, desc(conc), mass_input)\nhead(rna_TE__doe_blocked, n = 10)\n\n\n  \n\n\n\nAbove, we interpret the numeric levels from the DoE by joining each to the tables that provide the literal values for those experimental variables.\nAbove, we also assigned samples to captures in plexity of up to 6 the table is sorted in order of panel and mass input, so most of the time, samples will be paired with other samples with the same mass input, which is best practice.\nQuickly spot-checking the first 10 rows, everything looks reasonable.\n\nCheck orthogonality of blocking\n\nrna_TE__doe_blocked %&gt;% count(LP_operator, mass_input)\n\n\n  \n\n\n\nAbove, we count how many samples are operated by each operator at each mass level. The counts are all equal, meaning the two mass_input factor levels have been “spread evenly” across the available operators.\n\nrna_TE__doe_blocked %&gt;% count(LP_operator, panel)\n\n\n  \n\n\n\nThe same is true for the levels of the panel factor: they have been “spread evenly” across the available operators.\n\nrna_TE__doe_blocked %&gt;% count(LP_operator, conc)\n\n\n  \n\n\n\nFinally, with RNA concentration, we see that not exactly every operator has the same number of samples at each level of RNA concentration being tested. This is because the number is not evenly divisible, and so some variability in the number of assigned samples will have to exist. Qualitatively, they look reasonably evenly-spread from across the two operators.\n\ngooglesheets4::write_sheet(rna_TE__doe_blocked, ss = \"sheet_string_goes_here\",\n                           sheet = \"rna_TE_sensitivity_doe\");\nfile_dest_dir &lt;- \"doe_design_of_experiment_with_library_prep_files\"\nfs::dir_create(file_dest_dir);\nwrite_csv(rna_TE__doe_blocked, paste0(file_dest_dir, \"/\",\n                                      file_pref,\n                                      \"_rna_TE_sensitivity_doe.csv\"))\n\nOutput the design to google sheets, where the scientists and research associates can view the experiment’s sample plan.\n\n\nAnalyze captures\n\nrna_TE__doe_blocked %&gt;%\n  count(capture, panel, mass_input)\n\n\n  \n\n\n\nAbove, we can see that, for as many samples as possible, libraries with the same total RNA input mass are captured together in the same multiplexed hybridization reaction. In some cases, we see up to three 10 ng input libraries being co-hybridized with 100 ng input libraries. Given the number of samples we want to run and the division of different TE panels, this is the best we can do."
  },
  {
    "objectID": "posts/2024_04_05-DoE_design_of_experiment.html#conclusion",
    "href": "posts/2024_04_05-DoE_design_of_experiment.html#conclusion",
    "title": "DoE: Design of Experiment",
    "section": "Conclusion",
    "text": "Conclusion\nGreat! We have an experiment design for testing the effect of these panels against each other and against whole transcriptome sequencing. The experiment had n = 3 replicates, and it is blocked for having two operators carry out the RNA-seq library preps.\nImportantly, when I get feedback on the design of this sample layout, I can easily show my work. Even better, if changes are needed, the entire design is programmed, and can be changed in seconds.\nLet’s get this experiment started."
  },
  {
    "objectID": "posts/2024_06_20-CITE-seq_analysis_PoC.html",
    "href": "posts/2024_06_20-CITE-seq_analysis_PoC.html",
    "title": "CITE-seq analysis proof-of-concept",
    "section": "",
    "text": "CITE-seq is a method developed at the New York Genome Center for adding phenotypic data in the form of cell-surface protein expression to the RNA expression data that comes from single-cell RNA sequencing Nat Methods 14, 865–868 (2017). This is accomplished by incubating the cells with DNA oligonucleotide bar-coded antibodies that recognize epitopes on cell surface proteins, and then perform single-cell sequencing. The DNA-tags of the antibodies get indexed using the oligo-dT primers on the beads of the single-cell emulsion, allowing the antibody-derived tags to be mapped back to the scRNA-seq data of the single cells. Thus, RNA expression data and cell-surface protein data can be combined in one experiment for a multi-omics analysis.\n\n\nCITE-seq using data from Stoeckius, et al. (Nat Methods 14, 865–868 (2017) 10.1038/nmeth.4380) obtained from GEO series GSE100866.\nSeurat multi-modal clustering will be used to cross-validate the cell-surface protein data with the RNA-seq data using a purposely-mixed two-species (human and mouse) immune cell sample.\n\n\n\n\n\nFrom Supplementary Figure 1 CITE-seq library preparation:\n\nIllustration of the DNA-barcoded antibodies used in CITE-seq. (b) Antibody-oligonucleotide complexes appear as a high-molecular-weight smear when run on an agarose gel (1). Cleavage of the oligo from the antibody by reduction of the disulfide bond collapses the smear to oligo length (2). (c) Drop-seq beads are microparticles with conjugated oligonucleotides comprising a common PCR handle, a cell barcode, followed by a unique molecular identifier (UMI) and a polyT tail. (d) Schematic illustration of CITE-seq library prep in Drop-seq (downstream of Fig. 1b). Reverse transcription and template switch is performed in bulk after emulsion breakage. After amplification, full length cDNA and antibody-oligo products can be separated by size and amplified independently (also shown in d) (e) Reverse transcription and amplification produces two product populations with distinct sizes (left panel). These can be size separated and amplified independently to obtain full length cDNAs (top panel, capillary electrophoresis trace) and ADTs (bottom panel, capillary electrophoresis trace).\n\n\nfs::dir_ls(data_dir) |&gt; fs::path_file()\n\n[1] \"GSE100866_CBMC_8K_13AB_10X-ADT_clr-transformed.csv.gz\"\n[2] \"GSE100866_CBMC_8K_13AB_10X-ADT_umi.csv.gz\"            \n[3] \"GSE100866_CBMC_8K_13AB_10X-RNA_umi.csv.gz\"            \n[4] \"GSE100866_CD8_merged-ADT_clr-transformed.csv.gz\"      \n[5] \"GSE100866_CD8_merged-ADT_umi.csv.gz\"                  \n[6] \"GSE100866_CD8_merged-RNA_umi.csv.gz\"                  \n[7] \"GSE100866_PBMC_vs_flow_10X-ADT_clr-transformed.csv.gz\"\n[8] \"GSE100866_PBMC_vs_flow_10X-ADT_umi.csv.gz\"            \n[9] \"GSE100866_PBMC_vs_flow_10X-RNA_umi.csv.gz\"            \n\n\n\npath(out_path, file_prefix)\n\n/Users/patrick/pdcherry_github_io/posts/2024_06_20-CITE-seq/CITE-seq\n\n\n\nsource(\"CITE-seq_data_fetch.R\")\n\n\ncat(readLines(fs::path(out_path, \"CITE-seq_data_fetch.R\")), sep = \"\\n\")\n\nif(!require(GEOquery)){BiocManager::install(\"GEOquery\")}\nlibrary(GEOquery)\nlibrary(fs)\n\n# https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSE100866\n# https://www.nature.com/articles/nmeth.4380#article-info\n\ngse_id &lt;- \"GSE100866\"\n\ngse &lt;- getGEO(gse_id, GSEMatrix = TRUE)\nshow(gse)\n\nfilePaths &lt;- getGEOSuppFiles(gse_id)\n\nfs::file_delete(fs::path(\"data\", gse_id, fs::path_file(fs::dir_ls(gse_id))))\nfs::file_move(fs::path(gse_id), \"data\")"
  },
  {
    "objectID": "posts/2024_06_20-CITE-seq_analysis_PoC.html#intro",
    "href": "posts/2024_06_20-CITE-seq_analysis_PoC.html#intro",
    "title": "CITE-seq analysis proof-of-concept",
    "section": "",
    "text": "CITE-seq is a method developed at the New York Genome Center for adding phenotypic data in the form of cell-surface protein expression to the RNA expression data that comes from single-cell RNA sequencing Nat Methods 14, 865–868 (2017). This is accomplished by incubating the cells with DNA oligonucleotide bar-coded antibodies that recognize epitopes on cell surface proteins, and then perform single-cell sequencing. The DNA-tags of the antibodies get indexed using the oligo-dT primers on the beads of the single-cell emulsion, allowing the antibody-derived tags to be mapped back to the scRNA-seq data of the single cells. Thus, RNA expression data and cell-surface protein data can be combined in one experiment for a multi-omics analysis.\n\n\nCITE-seq using data from Stoeckius, et al. (Nat Methods 14, 865–868 (2017) 10.1038/nmeth.4380) obtained from GEO series GSE100866.\nSeurat multi-modal clustering will be used to cross-validate the cell-surface protein data with the RNA-seq data using a purposely-mixed two-species (human and mouse) immune cell sample.\n\n\n\n\n\nFrom Supplementary Figure 1 CITE-seq library preparation:\n\nIllustration of the DNA-barcoded antibodies used in CITE-seq. (b) Antibody-oligonucleotide complexes appear as a high-molecular-weight smear when run on an agarose gel (1). Cleavage of the oligo from the antibody by reduction of the disulfide bond collapses the smear to oligo length (2). (c) Drop-seq beads are microparticles with conjugated oligonucleotides comprising a common PCR handle, a cell barcode, followed by a unique molecular identifier (UMI) and a polyT tail. (d) Schematic illustration of CITE-seq library prep in Drop-seq (downstream of Fig. 1b). Reverse transcription and template switch is performed in bulk after emulsion breakage. After amplification, full length cDNA and antibody-oligo products can be separated by size and amplified independently (also shown in d) (e) Reverse transcription and amplification produces two product populations with distinct sizes (left panel). These can be size separated and amplified independently to obtain full length cDNAs (top panel, capillary electrophoresis trace) and ADTs (bottom panel, capillary electrophoresis trace).\n\n\nfs::dir_ls(data_dir) |&gt; fs::path_file()\n\n[1] \"GSE100866_CBMC_8K_13AB_10X-ADT_clr-transformed.csv.gz\"\n[2] \"GSE100866_CBMC_8K_13AB_10X-ADT_umi.csv.gz\"            \n[3] \"GSE100866_CBMC_8K_13AB_10X-RNA_umi.csv.gz\"            \n[4] \"GSE100866_CD8_merged-ADT_clr-transformed.csv.gz\"      \n[5] \"GSE100866_CD8_merged-ADT_umi.csv.gz\"                  \n[6] \"GSE100866_CD8_merged-RNA_umi.csv.gz\"                  \n[7] \"GSE100866_PBMC_vs_flow_10X-ADT_clr-transformed.csv.gz\"\n[8] \"GSE100866_PBMC_vs_flow_10X-ADT_umi.csv.gz\"            \n[9] \"GSE100866_PBMC_vs_flow_10X-RNA_umi.csv.gz\"            \n\n\n\npath(out_path, file_prefix)\n\n/Users/patrick/pdcherry_github_io/posts/2024_06_20-CITE-seq/CITE-seq\n\n\n\nsource(\"CITE-seq_data_fetch.R\")\n\n\ncat(readLines(fs::path(out_path, \"CITE-seq_data_fetch.R\")), sep = \"\\n\")\n\nif(!require(GEOquery)){BiocManager::install(\"GEOquery\")}\nlibrary(GEOquery)\nlibrary(fs)\n\n# https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSE100866\n# https://www.nature.com/articles/nmeth.4380#article-info\n\ngse_id &lt;- \"GSE100866\"\n\ngse &lt;- getGEO(gse_id, GSEMatrix = TRUE)\nshow(gse)\n\nfilePaths &lt;- getGEOSuppFiles(gse_id)\n\nfs::file_delete(fs::path(\"data\", gse_id, fs::path_file(fs::dir_ls(gse_id))))\nfs::file_move(fs::path(gse_id), \"data\")"
  },
  {
    "objectID": "posts/2024_06_20-CITE-seq_analysis_PoC.html#read-in-data",
    "href": "posts/2024_06_20-CITE-seq_analysis_PoC.html#read-in-data",
    "title": "CITE-seq analysis proof-of-concept",
    "section": "Read in data",
    "text": "Read in data\n\ncount data\n\ncbmc_rna &lt;-\n  as.sparse(\n    read.csv(\n      path(data_dir, \"GSE100866_CBMC_8K_13AB_10X-RNA_umi.csv.gz\"),\n      sep = \",\", header = TRUE, row.names = 1))\n\n\ndim(cbmc_rna)\n\n[1] 36280  8617\n\n\ndim() outputs (columns, rows); the CBMC matrix (cord blood mono-nuclear cells) contains 36280 features and 8617 samples (single cell droplets).\n\ncbmc_rna &lt;- CollapseSpeciesExpressionMatrix(cbmc_rna,\n                                            prefix = \"HUMAN_\", controls = \"MOUSE_\",\n                                            ncontrols = 100)\n\n\ndim(cbmc_rna)\n\n[1] 20501  8617\n\n\nCollapseSpeciesExpressionMatrix() is a convenience function for slimming down a multi-species expression matrix, when only one species is primarily of interest. Given the default parameter of ncontrols = 100, this command keeps only the top 100 features detected from each species in each sample. This matrix went from 36280 to 20501 features, which is a 43% reduction.\n\n\nADT UMI matrix\n\ncbmc_adt &lt;-\n  as.sparse(\n    read.csv(\n      path(data_dir, \"GSE100866_CBMC_8K_13AB_10X-ADT_umi.csv.gz\"),\n      sep = \",\", header = TRUE, row.names = 1))\n\n\ndim(cbmc_adt)\n\n[1]   13 8617\n\n\n\nQuick matrix QC\n\ntestthat::expect_equal(dim(cbmc_rna)[2] == dim(cbmc_adt)[2],\n                       TRUE)\n\nThe number of rows (samples / UMIs) matches the RNA counts matrix; we have corresponding sample data.\n\nlength(intersect(colnames(cbmc_rna), colnames(cbmc_adt))) /\n  length(union(colnames(cbmc_rna), colnames(cbmc_adt)))\n\n[1] 1\n\n\nAnd the names of the samples all match."
  },
  {
    "objectID": "posts/2024_06_20-CITE-seq_analysis_PoC.html#seurat-object-cluster",
    "href": "posts/2024_06_20-CITE-seq_analysis_PoC.html#seurat-object-cluster",
    "title": "CITE-seq analysis proof-of-concept",
    "section": "Seurat object & cluster",
    "text": "Seurat object & cluster\n\ncbmc &lt;- CreateSeuratObject(counts = cbmc_rna)\n\nWarning: Feature names cannot have underscores ('_'), replacing with dashes\n('-')\n\n\n\ncbmc &lt;- NormalizeData(cbmc)\n\nNormalizing layer: counts\n\n\n\ncbmc &lt;- FindVariableFeatures(cbmc)\n\nFinding variable features for layer counts\n\n\n\ncbmc &lt;- ScaleData(cbmc)\n\nCentering and scaling data matrix\n\n\n\ncbmc &lt;- RunPCA(cbmc, verbose = FALSE)\nElbowPlot(cbmc, ndims = 50)\n\n\n\n\n\n\n\nFigure 1: Elbow plot or scree plot of principle components computed from scRNA-seq counts\n\n\n\n\n\nThe elbow plot above shows some interesting PC influence behavior. There are some clusters PCs (like 4-7, 8-10, and 11-13) that make it less clear where the “elbow” of influence trend is. To be very safe, we can keep up to PC 25, where the trend approaches a horizontal line.\n\ncbmc &lt;- FindNeighbors(cbmc, dims = 1:25)\n\nComputing nearest neighbor graph\n\n\nComputing SNN\n\ncbmc &lt;- FindClusters(cbmc, resolution = 0.8)\n\nModularity Optimizer version 1.3.0 by Ludo Waltman and Nees Jan van Eck\n\nNumber of nodes: 8617\nNumber of edges: 343912\n\nRunning Louvain algorithm...\nMaximum modularity in 10 random starts: 0.8613\nNumber of communities: 19\nElapsed time: 0 seconds\n\n\n\ncbmc &lt;- RunTSNE(cbmc, dims = 1:25, method = \"FIt-SNE\")\n\n\ncbmc_rna_markers &lt;-\n  FindAllMarkers(cbmc,\n                 max.cells.per.ident = 100, logfc.threshold = log(2),\n                 only.pos = TRUE, min.diff.pct = 0.3, verbose = FALSE)\n\nThe following cluster identities are provided for us from the authors of the paper. A cell-type classifier would need to be run on the data to label the bar-codes (droplets) with their identifiers.\n\nnew.cluster.ids &lt;- c(\"Memory CD4 T\", \"CD14+ Mono\", \"Naive CD4 T\", \"NK\", \"CD14+ Mono\",\n                    \"Mouse\", \"B\", \"CD8 T\", \"CD16+ Mono\", \"T/Mono doublets\", \"NK\", \"CD34+\",\n                    \"Multiplets\", \"Mouse\", \"Eryth\", \"Mk\", \"Mouse\", \"DC\", \"pDCs\")\nnames(new.cluster.ids) &lt;- levels(cbmc)\ncbmc &lt;- RenameIdents(cbmc, new.cluster.ids)\n\n\nClustering t-SNE plot\n\nDimPlot(cbmc, label = TRUE, reduction = \"tsne\")\n\n\n\n\n\n\n\nFigure 2: tSNE plot of clustered and classified scRNA-seq data. The 18 cluster ids provided from authors of paper."
  },
  {
    "objectID": "posts/2024_06_20-CITE-seq_analysis_PoC.html#incorporate-protein-expression-antibody-barcodes-to-the-seurat-object",
    "href": "posts/2024_06_20-CITE-seq_analysis_PoC.html#incorporate-protein-expression-antibody-barcodes-to-the-seurat-object",
    "title": "CITE-seq analysis proof-of-concept",
    "section": "Incorporate protein expression (antibody barcodes) to the Seurat object",
    "text": "Incorporate protein expression (antibody barcodes) to the Seurat object\n\ncbmc[[\"ADT\"]] &lt;- CreateAssayObject(counts = cbmc_adt)\n\nThe above code adds a new assay called “ADT” to the Seurat object cmbc. We can confirm it’s added with the following GetAssayData() command.\n\nGetAssayData(cbmc, layer = \"counts\", assay = \"ADT\")[1:3,1:3]\n\n3 x 3 sparse Matrix of class \"dgCMatrix\"\n    CTGTTTACACCGCTAG CTCTACGGTGTGGCTC AGCAGCCAGGCTCATT\nCD3               60               52               89\nCD4               72               49              112\nCD8               76               59               61\n\n\n\nrownames(cbmc_adt)\n\n [1] \"CD3\"    \"CD4\"    \"CD8\"    \"CD45RA\" \"CD56\"   \"CD16\"   \"CD10\"   \"CD11c\" \n [9] \"CD14\"   \"CD19\"   \"CD34\"   \"CCR5\"   \"CCR7\"  \n\n\nNow we can repeat the pre-processing (normalization and scaling) steps that we typically run with RNA, but modifying the ‘assay’ argument.\n(For CITE-seq data, the Broad does not recommend typical Log-normalization. Instead, they use a centered log-ratio (CLR) normalization, computed independently for each feature. This is a slightly improved procedure from the original publication.)\n\ncbmc &lt;- NormalizeData(cbmc, assay = \"ADT\", normalization.method = \"CLR\")\n\nNormalizing across features\n\n\n\ncbmc &lt;- ScaleData(cbmc, assay = \"ADT\")\n\nCentering and scaling data matrix\n\n\n\nDefaultAssay(cbmc) &lt;- \"RNA\"\n\n\nVisualize protein levels on RNA clusters\n\nFeaturePlot(cbmc, features = c(\"adt_CD3\", \"adt_CD11c\", \"adt_CD8\", \"adt_CD16\",\n                               \"CD3E\", \"ITGAX\", \"CD8A\", \"FCGR3A\"),\n            min.cutoff = \"q05\", max.cutoff = \"q95\", ncol = 4)\n\n\n\n\n\n\n\nFigure 3: Set I: Juxtaposed heat map of cell-surface antibody-derived signal (top row) versus mRNA-seq (bottom row) of correspoding proteins and their mRNAs\n\n\n\n\n\n\n# Compare gene and protein expression levels for the other 6 antibodies.\nFeaturePlot(cbmc,\n            features = c(\"adt_CD4\", \"adt_CD45RA\", \"adt_CD56\",\n                         \"adt_CD14\", \"adt_CD19\", \"adt_CD34\",\n                         \"CD4\", \"PTPRC\", \"NCAM1\",\n                         \"CD14\", \"CD19\", \"CD34\"),\n            min.cutoff = \"q05\", max.cutoff = \"q95\", ncol = 6)\n\n\n\n\n\n\n\nFigure 4: Set II: Juxtaposed heat map of cell-surface antibody-derived signal (top row) versus mRNA-seq (bottom row) of correspoding proteins and their mRNAs\n\n\n\n\n\nAs we can see from the above figures Figure 3 and Figure 4, in some cases, the same clusters / tSNE neighborhoods have high correspondence for the mRNA and the cell surface protein (e.g. CD3, CD4), but the penetrance (proportion of the cells) showing both antibody and mRNA feature may not be 100%; in other cases, some clusters expressing the cell-surface marker do not show much mRNA level (e.g. CD11, CD56, CD19, CD34), and vice-versa (e.g. CD45RA).\nThese side-by-side comparison illustrate the strength of the evidence added to the experiment by analyzing for both mRNA and protein.\n\nRidgePlot(cbmc, features = c(\"adt_CD3\", \"adt_CD11c\", \"adt_CD8\", \"adt_CD16\"), ncol = 2)\n\n\n\n\n\n\n\nFigure 5: Stacked density plots showing this distribution of antibody-derived tag (ADT) signal in each scRNA-seq cell class for four cell-sirface markers: CD3, CD11c, CD8, and CD16.\n\n\n\n\n\n\n\nWhy may these differences occur?\nOne reason the “levels” between protein and mRNA could differ is that one of them is samples a very low count, and the normalization is concealing that fact.\n\nnorm_joy_plot_cd3 &lt;- RidgePlot(cbmc, features = c(\"adt_CD3\", \"rna_CD3E\"), ncol = 2) +\n  patchwork::plot_annotation(subtitle = \"Normalized expression levels\")\ncount_joy_plot_cd3 &lt;- RidgePlot(cbmc, features = c(\"adt_CD3\", \"rna_CD3E\"), ncol = 2, layer = \"counts\") +\n  patchwork::plot_annotation(subtitle = \"Un-normalized NGS counts\")\n\npatchwork_plot_cd3 &lt;- norm_joy_plot_cd3 / count_joy_plot_cd3\n\n(patchwork_plot_cd3 &lt;- patchwork_plot_cd3 +\n  patchwork::plot_annotation(title = \"Comparison of normalized and count data\",\n                             tag_levels = \"a\") &\n    theme(axis.text = element_text(size = 5))\n  )\n\n\n\n\n\n\n\nFigure 6: One gene, CD3, displayed as either antibody-derived tags (left side) or mRNA (right side), with x-axis in units of normalized expression (top half) or raw, un-normalized counts (bottom) for all cell classes.\n\n\n\n\n\nAs Figure 6 shows, the raw counts (which are UMI-collapsed) of the antibody-derived tags has a very large dynamic range with large values (around 1000 to 2000 counts) for positive cells, whereas the mRNA raw counts shows discretization close to 0, with the plurality of cells in each classification having 0 counts, followed by 1, then 2, then 3… counts. This shows that a low number of mRNA molecules either present in the cells (or incorporated into the single cell NGS library) is limiting the sensitivity of the scRNA-seq method at identifying key transcripts in the cells; ADTs have far less of this problem, where there is a large difference (from ~ 0 to about 1000 counts) between negative and positive cells, suggesting the antibody method is less susceptible to Poisson / binomial sampling noise and uncertainty.\n\nFeatureScatter(cbmc, feature1 = \"adt_CD19\", feature2 = \"adt_CD3\", pt.size = 0.5, shuffle = TRUE)\n\n\n\n\n\n\n\nFigure 7: Scatter plot showing the correlation (in title) of CD3 vs CD19 antibody-derived tag (ADT) signal across ovserved cells.\n\n\n\n\n\nFigure 7 shows that CD3 and CD19 are poorly correlated, with CD19 displaying high antibody signal in B cells, and CD3 showing higher signals in the T-cell classes (memory CD4+ T cells, naive CD4 T cells, and some T cell - monocyte doublets). This scatter plot of ADTs could function similarly to a flow plot, complete with gates.\n\npatchwork_cor_plots &lt;- (\n  FeatureScatter(cbmc, feature1 = \"adt_CD3\", feature2 = \"rna_CD3E\", pt.size = 0.5, shuffle = TRUE, combine = TRUE) /\n  FeatureScatter(cbmc, slot = \"counts\", feature1 = \"adt_CD3\", feature2 = \"rna_CD3E\",\n                                        pt.size = 0.5, jitter = TRUE, combine = TRUE)\n  ) | (\n    FeatureScatter(cbmc, feature1 = \"adt_CD4\", feature2 = \"rna_CD4\", pt.size = 0.5, shuffle = TRUE, combine = TRUE) /\n    FeatureScatter(cbmc, slot = \"counts\", feature1 = \"adt_CD4\", feature2 = \"rna_CD4\", pt.size = 0.5, jitter = TRUE, combine = TRUE)\n    )\n(patchwork_cor_plots &lt;- patchwork_cor_plots +\n    patchwork::plot_annotation(title = \"Comparison of normalized and count data in scatter plot with correlation\",\n                             tag_levels = \"a\") +\n    plot_layout(guides = \"collect\"))\n\n\n\n\n\n\n\nFigure 8: Scatter plot showing the correlation (in title) of ADT to mRNA expression for CD3 and CD4 using both normalized data and direct count data\n\n\n\n\n\n\n\nT-cell analysis\n\ntcells &lt;- subset(cbmc, idents = c(\"Naive CD4 T\", \"Memory CD4 T\", \"CD8 T\"))\n\n(FeatureScatter(tcells, feature1 = \"adt_CD4\", feature2 = \"adt_CD8\") |\n  FeatureScatter(tcells, feature1 = \"adt_CD4\", feature2 = \"adt_CD8\", slot = \"counts\") ) +\n  patchwork::plot_annotation(title = \"Comparison of normalized and count data\",\n                             tag_levels = \"a\") +\n    plot_layout(guides = \"collect\")\n\n\n\n\n\n\n\nFigure 9: Scatter plot of antibody-derived tags (ADT) for CD4 and CD8 receptors, with normalized data in (a) and raw counts in (b)\n\n\n\n\n\n\nncol(subset(tcells, subset = adt_CD4 &lt; 1 & adt_CD8 &lt; 1)) / ncol(tcells)\n\n[1] 0.009978833\n\n\nIn Figure 9, the pearson correlation of CD4 and CD8 antibody CITE-seq signal is -0.79, indicating these are signals are significantly anti-correlated, which is consistent with the immunology of T cells vs B cells. While the normalized data (a) look pretty separate / disjoint, the count data (b) are even more orthogonal, though there is less space separating the clusters in b than in a.\n\n(FeatureScatter(tcells, feature1 = \"rna_CD4\", feature2 = \"rna_CD8A\", jitter = TRUE) |\n   FeatureScatter(tcells, feature1 = \"rna_CD4\", feature2 = \"rna_CD8A\", slot = \"counts\", jitter = TRUE)) +\n    patchwork::plot_annotation(title = \"Comparison of normalized (a) and count data (b) of mRNA expression\",\n                             tag_levels = \"a\") +\n    plot_layout(guides = \"collect\")\n\n\n\n\n\n\n\nFigure 10: Scatter plot of mRNA expression for CD4 and CD8, with normalized data in (a) and raw counts in (b)\n\n\n\n\n\n\nncol(subset(tcells, subset = rna_CD4 == 0 & rna_CD8A == 0)) / ncol(tcells)\n\n[1] 0.8285455\n\n\nThe above plot Figure 10 shows the weakness of attempting to classify immune cells by rarely-expressed mRNAs alone (despite the corresponding gene product being definitional to the cell class) when measured by RNA expression; As high as 83% of the T-cells are double-negative for CD4 and CD8.\n\nDefaultAssay(tcells) &lt;- \"ADT\"  # work with ADT count matrix\nFeatureScatter(tcells, feature1 = \"adt_CD4\", feature2 = \"adt_CD8\")\n\n\n\n\n\n\n\n\n\nncol(subset(tcells, subset = adt_CD4 &lt; 1 & adt_CD8 &lt; 1)) / ncol(tcells)\n\n[1] 0.009978833\n\n\nHowever, for surface antigen detection in CITE-seq, only 0.997% are double negative for CD4 protein and CD8 protein."
  },
  {
    "objectID": "posts/2024_06_20-CITE-seq_analysis_PoC.html#differential-protein-levels-between-clusters",
    "href": "posts/2024_06_20-CITE-seq_analysis_PoC.html#differential-protein-levels-between-clusters",
    "title": "CITE-seq analysis proof-of-concept",
    "section": "Differential protein levels between clusters",
    "text": "Differential protein levels between clusters\nHere, I sample 300 cells per cluster to enhance visualization.\n\ncbmc_subset &lt;- subset(cbmc, downsample = 300)\n\n# Find protein markers for all clusters, and draw a heatmap\nadt_markers &lt;- FindAllMarkers(cbmc_subset, assay = \"ADT\", only.pos = TRUE)\n\nCalculating cluster Memory CD4 T\n\n\nCalculating cluster CD14+ Mono\n\n\nCalculating cluster Naive CD4 T\n\n\nCalculating cluster NK\n\n\nCalculating cluster Mouse\n\n\nCalculating cluster B\n\n\nCalculating cluster CD8 T\n\n\nCalculating cluster CD16+ Mono\n\n\nCalculating cluster T/Mono doublets\n\n\nCalculating cluster CD34+\n\n\nCalculating cluster Multiplets\n\n\nCalculating cluster Eryth\n\n\nWarning in FindMarkers.default(object = data.use, cells.1 = cells.1, cells.2 =\ncells.2, : No features pass logfc.threshold threshold; returning empty\ndata.frame\n\n\nCalculating cluster Mk\n\n\nCalculating cluster DC\n\n\nCalculating cluster pDCs\n\n\n\nDoHeatmap(cbmc_subset,\n          features = unique(adt_markers$gene),\n          assay = \"ADT\", angle = 90, size = 4) +\n  guides(color = \"none\") +\n  theme(axis.text.y = element_text(size = 14),\n        strip.text = element_text(size = 2))\n\n\n\n\n\n\n\n\nThe unknown cells co-express both myeloid and lymphoid markers (true at the RNA level as well). They are likely cell clumps / multiplets that should be discarded.\n\nCluster directly on protein levels\nKeeping human cells only:\n\ncbmc &lt;- subset(cbmc, idents = c(\"Multiplets\", \"Mouse\"), invert = TRUE)\n\n\nDefaultAssay(cbmc) &lt;- \"ADT\"\ncbmc &lt;-\n  RunPCA(cbmc,\n         features = rownames(cbmc),\n         reduction.name = \"pca_adt\", reduction.key = \"pcaadt_\",\n         verbose = FALSE)\n\nWarning in irlba(A = t(x = object), nv = npcs, ...): You're computing too large\na percentage of total singular values, use a standard svd instead.\n\n\nI’m using reduction.name and reduction.key, because this is the second PCA being run on this multi-modal Seurat object, and I don’t want the names to collide with the scRNA-seq PCA.\n\nDimPlot(cbmc, reduction = \"pca_adt\")\n\n\n\n\n\n\n\n\n\nElbowPlot(cbmc)\n\n\n\n\n\n\n\n\n\nadt_data &lt;- GetAssayData(cbmc, layer = \"data\")\nadt_dist &lt;- dist(t(adt_data))\n\ncbmc[[\"rnaClusterID\"]] &lt;- Idents(cbmc)\n\n\ncbmc[[\"tsne_adt\"]] &lt;- RunTSNE(adt_dist, assay = \"ADT\", reduction.key = \"adtTSNE_\")\ncbmc[[\"adt_snn\"]] &lt;- FindNeighbors(adt_dist)$snn\n\nBuilding SNN based on a provided distance matrix\n\n\nComputing SNN\n\n\n\ncbmc &lt;- FindClusters(cbmc, resolution = 0.2, graph.name = \"adt_snn\")\n\nModularity Optimizer version 1.3.0 by Ludo Waltman and Nees Jan van Eck\n\nNumber of nodes: 7891\nNumber of edges: 274115\n\nRunning Louvain algorithm...\nMaximum modularity in 10 random starts: 0.9482\nNumber of communities: 12\nElapsed time: 0 seconds\n\n\nWarning: Adding a command log without an assay associated with it\n\n\n\n( clustering_table &lt;- table(Idents(cbmc), cbmc$rnaClusterID) )\n\n    \n     Memory CD4 T CD14+ Mono Naive CD4 T   NK    B CD8 T CD16+ Mono\n  0          1416          0        1071    3    0    18          0\n  1             1       2198           0    5    0     0         36\n  2             6          0           3  887    2    10          0\n  3           273          0         194   26    0     6          0\n  4             0          4           0    3  313     0          1\n  5            23          0          18    4    1   247          0\n  6             1         23           3  153    2     2          9\n  7             3         59           4    0    0     0          9\n  8             0          7           0    4    0     0        175\n  9             3          4           0    1    0     1          0\n  10            0          0           1    0    0     0          0\n  11            1          0           2    0   24     0          0\n    \n     T/Mono doublets CD34+ Eryth   Mk   DC pDCs\n  0                3    45     2    8    0    1\n  1                3     0     3   24   55    1\n  2                0    45     2    7    2    1\n  3                2     7     4   16    1    1\n  4                7     2     0    3    0    0\n  5                0    10     0    2    0    0\n  6               59     7     1    9    6    2\n  7              118     2     0    1    0    0\n  8                0     0     0    1    0    0\n  9                2     5    92   17    5    1\n  10               0     0     0    0    1   42\n  11               3     0     0    0    0    0\n\n\n\n\n\n\n\n\nnew_cluster_ids &lt;- levels(unique(cbmc$rnaClusterID))\n\nnames(new_cluster_ids) &lt;- levels(cbmc)\n\n\nlevels(unique(cbmc$rnaClusterID))\n\n [1] \"Memory CD4 T\"    \"CD14+ Mono\"      \"Naive CD4 T\"     \"NK\"             \n [5] \"B\"               \"CD8 T\"           \"CD16+ Mono\"      \"T/Mono doublets\"\n [9] \"CD34+\"           \"Eryth\"           \"Mk\"              \"DC\"             \n[13] \"pDCs\"           \n\n\n\nnames(new_cluster_ids)\n\n [1] \"0\"  \"1\"  \"2\"  \"3\"  \"4\"  \"5\"  \"6\"  \"7\"  \"8\"  \"9\"  \"10\" \"11\" NA  \n\n\n\nlevels(cbmc)\n\n [1] \"0\"  \"1\"  \"2\"  \"3\"  \"4\"  \"5\"  \"6\"  \"7\"  \"8\"  \"9\"  \"10\" \"11\"\n\n\n\ncbmc &lt;- RenameIdents(cbmc, new_cluster_ids)\n\nWarning: Cannot find identity NA\n\n\n\ntsne_rnaClusters &lt;- DimPlot(cbmc, reduction = \"tsne_adt\", group.by = \"rnaClusterID\", pt.size = 0.5) +\n  NoLegend() +\n  ggtitle(\"Classification based on scRNA-seq\") +\n  theme(plot.title = element_text(size = 12, hjust = 0.5))\n\ntsne_rnaClusters &lt;- LabelClusters(plot = tsne_rnaClusters, id = \"rnaClusterID\", size = 4)\n\ntsne_adtClusters &lt;- DimPlot(cbmc, reduction = \"tsne_adt\", pt.size = 0.5) +\n  NoLegend() +\n  ggtitle(\"Classification based on ADT signal\") +\n  theme(plot.title = element_text(size = 12, hjust = 0.5))\n\ntsne_adtClusters &lt;- LabelClusters(plot = tsne_adtClusters, id = \"ident\", size = 4)\n\n# Note: for this comparison, both the RNA and protein clustering are visualized on a tSNE\n# generated using the ADT distance matrix.\n( tsne_rna_adtClusters &lt;- patchwork::wrap_plots(list(tsne_rnaClusters, tsne_adtClusters), ncol = 2) +\n  plot_annotation(tag_levels = 'a') )\n\n\n\n\n\n\n\nFigure 11: Juxtaposed tSNE plots of ADT (antibody) signal, colored and labeled by the data source indicated in the title (classification based on scRNA-seq in a; classification based on ADT signal in b).\n\n\n\n\n\nThe tSNE clustering in Figure 11 above is based on the distance matrix ADT (antibody) signal, whereas the coloring and cluster labels are, on the scRNA-seq data.\nOverall, the ADT-driven clustering yields similar results. The compare / contrast conclusions are:\n\nADT clustering improves CD4/CD8 T cell group distinction, based on the robust, high-count ADT data for CD4, CD8, CD14, and CD45RA.\nHowever, ADT-based clustering is worse for the Mk/Ery/DC cell-surface markers, and scRNA-seq distinguishes these populations better.\nSome of the clusters are likely doublets, which have low confidence classifier calls in both the scRNA-seq and ADT methods. (However, scRNA-seq could have more features for more confident doublet identification and removal.)"
  },
  {
    "objectID": "posts/2024_08_29-Cali_Nov_2024_ballot_measures.html",
    "href": "posts/2024_08_29-Cali_Nov_2024_ballot_measures.html",
    "title": "San Francisco’s November 2024 ballot review",
    "section": "",
    "text": "The San Francisco ballot will be a long one this November. View from above of the San Francisco penninsula to the north, including the Bay, the Golden Gate, and some islands and land forms of North Bay."
  },
  {
    "objectID": "posts/2024_08_29-Cali_Nov_2024_ballot_measures.html#introduction",
    "href": "posts/2024_08_29-Cali_Nov_2024_ballot_measures.html#introduction",
    "title": "San Francisco’s November 2024 ballot review",
    "section": "Introduction",
    "text": "Introduction\nSan Francisco has a big ballot incoming to voters this November, with 25 total ballot measures for voters to decide upon before–or on–election day (10 state measures, and 15 city / county measures of San Francisco). This is less than other very lengthy ballots previously sent to voters (Registrar of Voters 1993), but still longer than many in recent memory.\nBelow, I have collated the ballot measure numbers (or letters), titles, descriptions, and some context (in some cases, where available.)"
  },
  {
    "objectID": "posts/2024_08_29-Cali_Nov_2024_ballot_measures.html#state-wide-ballot-measures",
    "href": "posts/2024_08_29-Cali_Nov_2024_ballot_measures.html#state-wide-ballot-measures",
    "title": "San Francisco’s November 2024 ballot review",
    "section": "State-wide ballot measures",
    "text": "State-wide ballot measures\n\n\n\n\nTable 1: Table of statewide ballot propositions\n\n\n\n\n\n\nTitle\nName\nType\nDescription\nNotes\n\n\n\n\nProposition 2\nBorrow $10 billion to build schools.\nBI\nIssue $10 billion in bonds to fund construction and modernization of public education facilities\nLegislative Democrats put on the ballot a bond issue to give $8.5 billion to K-12 schools and $1.5 billion to community colleges for construction and modernization.\n\n\nProposition 3\nReaffirm the right of same-sex couples to marry.\nLRCA\nRepeal Proposition 8 and establish a right to marry\nThis constitutional amendment from the Legislature would remove outdated language from Proposition 8 passed by voters in 2008 that characterizes marriage as being between a man and a woman.\n\n\nProposition 4\nBorrow $10 billion for climate programs.\nBI\nIssue $10 billion in bonds to fund state and local parks, environmental protection projects, water infrastructure projects, energy projects, and flood protection projects\nLegislative Democrats also placed a bond issue on the ballot that includes $3.8 billion for drinking water and groundwater $1.5 billion for wildfire and forest programs and $1.2 billion for sea level rise. In part the money would offset some budget cuts.\n\n\nProposition 5\nLower voter approval requirements for local housing and infrastructure bonds.\nLRCA\nLower the vote threshold from 66.67% to 55% for local bond measures to fund housing projects and public infrastructure\nThis constitutional amendment from the Legislature would make it easier for local governments to borrow money for affordable housing and other infrastructure. To avoid opposition from the influential real estate industry supporters agreed to block bond money from being used to buy single-family homes.\n\n\nProposition 6\nLimit forced labor in state prisons.\nLRCA\nRemove involuntary servitude as punishment for a crime from the state constitution\nLawmakers added this one late‚ a constitutional amendment to end indentured servitude in state prisons considered one of the last remnants of slavery. The California Black Legislative Caucus included the amendment in its reparations bill package.\n\n\nProposition 32\nRaise the state minimum wage to $18 an hour.\nCISS\nIncrease minimum wage to $18 an hour\nThis initiative seemed a much bigger deal when it was first proposed in 2021. But under existing law the overall minimum wage has risen to $16 an hour. And lower-paid workers in two huge industries are getting more: Fast food workers received a $20 an hour minimum on April 1 and health care workers will eventually get $25 though the start date has been pushed back to at least Oct. 15.\n\n\nProposition 33\nAllow local governments to impose rent controls.\nCISS\nRepeals Costa Hawkins Rental Housing Act\nThis is the latest attempt to roll back a state law that generally prevents cities and counties from limiting rents in properties first occupied after Feb. 1995\n\n\nProposition 34\nRequire certain health providers to use nearly all revenue from a federal prescription drug program on patient care.\nCISS\nRequires health care providers to spend 98% of revenues from federal discount prescription drug program on direct patient care\nSponsored by the trade group for California‚ landlords this measure is squarely aimed at knee-capping the AIDS Healthcare Foundation which has been active in funding ballot measures (see Prop. 33).\n\n\nProposition 35\nMake permanent a tax on managed health care insurance plans.\nCISS\nPermanently authorizes a tax on managed care organizations to fund Medi-Cal programs\nThis initiative is sponsored by California‚ health care industry to raise more money for Medi-Cal and block lawmakers from using the cash to avoid cuts to other programs. The measure would hold Newsom to a promise to permanently secure that tax money for health care for low-income patients.\n\n\nProposition 36\nIncrease penalties for theft and drug trafficking.\nCISS\nIncrease drug crime and theft penalties and allow a new class of crime to be called treatment-mandated felony, which gives the offender the option to participate in drug and mental health treatment\nThis initiative may be the most contentious on the ballot. It would partly roll back Proposition 47 approved by voters in 2014\n\n\n\n\n\n\n\n\n\n\nType is the category of ballot measure from Ballotpedia: BI = Bond issue; CISS = Initiated state statute; LRCA = Legislatively referred constitutional amendment (“California 2024 Ballot Propositions” 2024) Notes are from (“What’s on Your November Ballot? 2024 California Ballot Measures: What You Need to Know” 2024)."
  },
  {
    "objectID": "posts/2024_08_29-Cali_Nov_2024_ballot_measures.html#san-francisco-ballot-measures",
    "href": "posts/2024_08_29-Cali_Nov_2024_ballot_measures.html#san-francisco-ballot-measures",
    "title": "San Francisco’s November 2024 ballot review",
    "section": "San Francisco ballot measures",
    "text": "San Francisco ballot measures\n\n\n\n\nTable 2: Table of San Francisco ballot propositions\n\n\n\n\n\n\n\n\n\n\n\n\nType\nLetter\nTitle\nDesc\n\n\n\n\nSchool Proposition\nA\nSchools Improvement and Safety Bond\nTo improve earthquakesafety and accessibility at San Francisco public schools; provide reliable internet in classrooms;replace worn-out plumbing, electrical and ventilation systems; improve student nutritionservices; and have updated security features; shall San Francisco Unified School District’smeasure authorizing $790,000,000 in bonds at legal rates levying approximately $12.95 per$100,000 of assessed value, raising approximately $56,400,000 annually while bonds areoutstanding, with independent oversight and all funds staying local, be adopted?\n\n\nBond\nB\nCommunity Health and Medical Facilities, Street Safety, Public Spaces, and Shelter to Reduce Homelessness Bond\nHEALTHY, SAFE, AND VIBRANTSAN FRANCISCO BOND. To finance the acquisition or improvement of real property,including : temporary shelters, particularly for families; facilities that deliver healthcare services,including preventive care and behavioral health services, such as the Chinatown Public HealthCenter; critical repairs, renovations, and seismic upgrades at Zuckerberg San Francisco GeneralHospital and Trauma Center and Laguna Honda Hospital; and pedestrian and street safetyimprovements, streetscape enhancements, and other public space improvements; and to payrelated costs; shall the City and County of San Francisco issue $390,000,000 in generalobligation bonds with a duration of up to 30 years from the time of issuance, an estimatedaverage tax rate of $0.0069/$100 of assessed property value, and projected average annualrevenues of $31,000,000, subject to independent citizen oversight and regular audits? The City’scurrent debt management policy is to keep the property tax rate for City general obligation bondsbelow the 2006 rate by issuing new bonds as older ones are retired and the tax base grows,though this property tax rate may vary based on other factors.\n\n\nCharter amendment\nC\nInspector General\nShall the City amend the Charter to create thenew position of Inspector General in the Controller’s Office to review and investigate complaintsof fraud, waste, and abuse, and give the Controller’s Office additional powers to issue subpoenasand execute search warrants when permitted by State law?\n\n\nCharter amendment\nD\nCity Commissions and Mayoral Authority\nShall the City amendthe Charter to limit the total number of commissions the City may have to 65, retaining certaindecision-making commissions and dissolving the others unless the Board of Supervisors insteadcontinues any as advisory bodies; give the Mayor sole authority to appoint and remove Citydepartment heads; and give the Police Chief sole authority to adopt rules governing policeofficers’ conduct?\n\n\nCharter amendment\nE\nCreating a Task Force to Recommend Changing, Eliminating, or Combining City Commissions\nShall the City amend the Charter to create a Task Force withauthority to make recommendations by February 1, 2026, on ways the City could change,eliminate, or consolidate commissions to improve the administration of City government; requirea financial report on the City’s commissions; and give the Task Force authority to introduceordinances to implement its recommendations, and if required provide for the City Attorney todraft Charter amendments to submit to voters at a future election?\n\n\nCharter amendment\nF\nPolice Staffing and Deferred Retirement\nShall the City amendthe Charter to define full-duty sworn officer; require the Police Chief to make a report andrecommendation on future staffing of full-duty sworn officers to the Police Commission everythree years instead of two; require the Police Commission to report annually to the Board ofSupervisors on Police Department staffing; and create a five-year program with possiblerenewals allowing police officers to continue working for the Police Department after retiring,with pension payments deferred while they are working?\n\n\nCharter amendment\nG\nFunding Rental Subsidies for Affordable Housing Developments Serving Low Income Seniors, Families, and Persons with Disabilities\nShall the City amendthe Charter to require the City to appropriate at least $8.25 million a year to pay for rentalsubsidies for affordable housing developments serving extremely low-income households ofseniors, families, and persons with disabilities?\n\n\nCharter amendment\nH\nRetirement Benefits for Firefighters\nShall the City amend theCharter to change how pension benefits are calculated for members of the Fire Department hiredon or after January 7, 2012, by lowering the age these members can receive the highest pensionfrom 58 to 55, and make those benefits the same as members hired before January 7, 2012?\n\n\nCharter amendment\nI\nRetirement Benefits for Nurses and 911 Operators\nShall the Cityamend the Charter to allow registered nurses who are members of the San Francisco Employees’Retirement System and meet certain requirements to purchase credits toward their total pensionyears of service for time previously worked as per diem nurses, and to allow 911 dispatchers,supervisors, and coordinators to increase their pension benefits by joining the SFERSMiscellaneous Safety Plan for time worked starting in January 2025?\n\n\nCharter amendment\nJ\nFunding Programs Serving Children, Youth, and Families\nShallthe City amend the Charter to create an initiative led by the Mayor and the Superintendent of theSchool District with the mission of ensuring that City funding for children, youth, and families isused effectively?\n\n\nOrdinance\nK\nPermanently Closing the Upper Great Highway to Private Vehicles to Establish a Public Open Recreation Space\nShall the City use the Upper Great Highway aspublic open recreation space, permanently closing it to private motor vehicles seven days a week,with limited exceptions?\n\n\nOrdinance\nL\nAdditional Business Tax on Transportation Network Companies and Autonomous Vehicle Businesses to Fund Public Transportation\nShall the City place anadditional tax permanently on transportation network companies and autonomous vehiclebusinesses that provide passenger service for compensation with rates between 1% and 4.5% ofgross receipts in San Francisco above $500,000 for an estimated annual revenue of $25 million,and use the funds the City collects from the tax to support Muni transportation services and farediscount programs?\n\n\nOrdinance\nM\nChanges to Business Taxes\nShall the City permanently changethe taxes it collects from businesses, including : changing annual gross receipts tax rates tobetween 0.1% and 3.716%, homelessness gross receipts tax rates to between 0.0162% and1.64%, business registration fees to between $55 and $60,000, overpaid executive gross receiptstax rates to between 0.02% and 0.129%, and administrative office tax rates to between 2.97%and 3.694% of payroll expense; increasing the gross receipts tax exemption for small businesses;and changing how the City calculates these taxes; for estimated annual revenue of $50 milliononce fully implemented?\n\n\nOrdinance\nN\nFirst Responder Student Loan and Training Reimbursement Fund\nShall the City create a fund that the City could use in the future to help reimburse eligible Cityemployees, including police officers, firefighters, sheriffs, paramedics, registered nurses, and 911dispatchers, for student loans and education and training programs?\n\n\nOrdinance\nO\nSupporting Reproductive Rights\nShall it be City policy and lawto support, protect, and expand reproductive rights and services?\n\n\n\n\n\n\n\n\nSan Francisco ballot measure information. (Chiu 2024)"
  },
  {
    "objectID": "posts/2024_08_29-Cali_Nov_2024_ballot_measures.html#conclusions",
    "href": "posts/2024_08_29-Cali_Nov_2024_ballot_measures.html#conclusions",
    "title": "San Francisco’s November 2024 ballot review",
    "section": "Conclusions",
    "text": "Conclusions\n\n\n\n\n\n\nWarning\n\n\n\nThis page is incomplete. I have yet to decide on the relative importance of these ballot measures, or provide guidance for voting. That is to come in the coming days."
  },
  {
    "objectID": "posts/2024_08_29-Cali_Nov_2024_ballot_measures.html#references",
    "href": "posts/2024_08_29-Cali_Nov_2024_ballot_measures.html#references",
    "title": "San Francisco’s November 2024 ballot review",
    "section": "References",
    "text": "References\n\n\n“California 2024 Ballot Propositions.” 2024. BallotPedia. https://ballotpedia.org/California_2024_ballot_propositions.\n\n\nChiu, David. 2024. “Qualified Measures Nov. 5 2024.” San Francisco Department of Elections. https://www.sf.gov/reports/november-2024/qualified-measures.\n\n\nRegistrar of Voters, Office of the. 1993. “SF Voter Pamphlet and Sample Ballot November 2, 1993 Consolidated General Election.” https://newspack-missionlocal.s3.amazonaws.com/mission/wp-content/uploads/2024/08/1993-voter-pamphlet-SF.pdf.\n\n\n“What’s on Your November Ballot? 2024 California Ballot Measures: What You Need to Know.” 2024. https://calmatters.org/explainers/california-ballot-measures-2024/#6776ace0-e646-46bf-8211-088172e0f187."
  },
  {
    "objectID": "Patrick-Cherry-cv.html",
    "href": "Patrick-Cherry-cv.html",
    "title": "CV of Patrick Cherry, PhD",
    "section": "",
    "text": "Download resume version as pdf"
  },
  {
    "objectID": "Patrick-Cherry-cv.html#contact",
    "href": "Patrick-Cherry-cv.html#contact",
    "title": "CV of Patrick Cherry, PhD",
    "section": "Contact",
    "text": "Contact\n\n pcherry [at] pm dot me\n upon request\n Senior Scientist | Oncology\n BillionToOne\n San Francisco, California\n pdcherry.github.io\n github.com/pdcherry\n linkedin.com/in/p-cherry\n United States Citizen\n\n\nLast updated on 2025-02-04.\nData-driven résumé made in R using Quarto."
  },
  {
    "objectID": "Patrick-Cherry-cv.html#industry-experience",
    "href": "Patrick-Cherry-cv.html#industry-experience",
    "title": "CV of Patrick Cherry, PhD",
    "section": " Industry Experience",
    "text": "Industry Experience\n\n\nI currently split my time between wet lab and computational activities. I have worked in a variety of roles ranging from HTP strain onboarding to genomics scientist. I like collaborative environments where I can learn from my peers and in turn teach others.\n\nSenior Scientist, Oncology\nBillionToOne, Inc.\nMenlo Park, California\nCurrent - Sep 2024\n\nDesigned and implemented multiplexed amplicon NGS assay with Bioconductor NCBI tools and primer3 primer selection; generated 500+ automated ddPCR designs with pipeline in snakemake using s3 database of variant data.\nInformed key product decisions with analyses using PostgreSQL and s3 data sources and linear mixed-effects modeling\nCirculated internal research reports on Notion written in Quarto notebooks with reproducible Python and R code.\n\n\n\nSenior Scientist, Genomics\nTwist Bioscience, Inc.\nSouth San Francisco, California\nApr 2024 - Dec 2021\n\nInvented and introduced multiple new products to market, yielding $1M+ in new revenue as Tech Lead, including: Pan-cancer cfDNA (v1 & v2), CNV Controls, RNA Fusion Controls, Fragmentome Controls, RNA-seq, and primer / adapter removal methods for highly-multiplexed dsDNA pools\nAnswered biological and business questions with DoE and data analysis using R and the libraries: dplyr, dbplyr, DBI, purrr, ggplot2, Bioconductor, DEseq2, Seurat, tidymodels, glm, nls, lme4, AlgDesign, and more\nWrote and published reports in Rmarkdown and LaTeX. Edited and maintained production QC pipelines with automated reporting using Python and the libraries: NumPy, pandas, polars, seaborn, statsmodels, biopython, pybedtools, pysam, vcfpy, scanpy, Jinja2 (with CSS), WeasyPrint, and others\nMaintained production code (git version control with code review) with CD (github actions); operated in high-performance compute environment aws s3 and Databricks using Unix shell / bash tools, like ssh, STAR-fusion, GATK, BaseSpace CLI, bwa, bedtools, samtools, vcftools, UMI-tools/fgbio; Confluence documentation\nAuthored internal R package “twistcolorpal” on Github with help files to help scientists style plots to Twist branding\nAnswered production and business questions with original SQL queries for Snowflake-based database\n\n\n\nScientist I, NGS Core & Strain-Build Process Development\nZymergen, Inc.\nEmeryville, California\nJan 2021 - Apr 2019\n\nBoosted NGS Core genotyping success by 45% using DoE experimentation, data-driven decision-making, and teaching; Guided demanding and diverse internal customers on complex NGS experiments\nBuilt and disseminated Rmarkdown and JMP statistical templates for autonomous NGS data exploration\nCoded plasmid and strain build and QC experiments using Zymergen’s alembic Python API to LIMS database\nRendered strain build and plasmid build reports from LIMS SQL database in MySQL and R / ggplot"
  },
  {
    "objectID": "Patrick-Cherry-cv.html#education",
    "href": "Patrick-Cherry-cv.html#education",
    "title": "CV of Patrick Cherry, PhD",
    "section": " Education",
    "text": "Education\n\nPhD in Molecular Biology\nUniversity of Colorado School of Medicine\nAurora/Denver, Colorado\nApr 2019 - Aug 2013\n\nPh.D. in Molecular Biology. Advisor: Jay Hesselberth, PhD\nThesis: RNA terminus chemistry potentiates decay events targeting HAC1 mRNA during the Unfolded Protein Response\nKey courses: BIOS 6606 Statistics; MOLB 7621 Genome Analysis Workshop.\n\n\n\nBA in Molecular Biology with Distinction, minor in Mathematics\nHendrix College\nConway, Arkansas\nMay 2013 - Aug 2009\n\nSenior Capstone Project showing changes of key stress response gene expression to oxidative stress in liver cells\nKey courses: Probability & Statistics; Discrete Mathematics; Adv Biological Chemistry, Analytical Chemistry"
  },
  {
    "objectID": "Patrick-Cherry-cv.html#research-experience",
    "href": "Patrick-Cherry-cv.html#research-experience",
    "title": "CV of Patrick Cherry, PhD",
    "section": " Research Experience",
    "text": "Research Experience\n\n\nI worked on a few projects during my PhD, and the RNA repair project led me to custom 5′-OH RNA-seq libraries, which inspired my fascination with transcriptomics and bioinformatics.\n\nDoctoral Research\nUniversity of Colorado School of Medicine\nAurora/Denver, Colorado\nApr 2019 - May 2014\n\nWrote, revised, & published two academic papers on RNA repair & yeast genetics\nEngineered and characterized genetic bypass of essential genes in budding yeast; on-boarded CRISPR/Cas9 for efficient and precise gene knock-in and scarless knock-out\nPerformed RNA-seq analysis with bowtie2 on departmental cluster using bjobs and visualization in R-Studio server\nOptimized custom RNA-seq library protocol; independently planned, executed, troubleshooted RNA modification detection\nRoutinely conducted northern blotting, targeted depletion, primer extension, splinted ligation, and other esoteric DNA and RNA experiments\n\n\n\nUndergraduate Research Assistant\nLab of Dr. Andres Caro, Hendrix College\nConway, Arkansas\nJan 2013 - Jan 2012\n\n\nSummer Undergraduate Research Fellowship\nLab of Dr. Michael Shiloh, UT Southwestern Medical Center\nDallas, Texas\nJan 2012 - Jan 2012\n\n\nResearch Assistant\nLab of Dr. Joy Sturtevant, Louisiana Health Sciences Center\nNew Orleans, Louisiana\nJan 2011 - Jan 2010"
  },
  {
    "objectID": "Patrick-Cherry-cv.html#intellectual-property",
    "href": "Patrick-Cherry-cv.html#intellectual-property",
    "title": "CV of Patrick Cherry, PhD",
    "section": " Intellectual Property",
    "text": "Intellectual Property\n\n\nWorking at Twist and Zymergen on new product research requires confidentiality, but public evidence of accomplishments often comes in patent applications. The Legal teams know me well for being a helpful expert in the process.\n\nMethylation-mediated adapter removal on nucleic acid sequences\nTwist Bioscience\nSouth San Francisco, California\nMar 2023\n\nUS 63-317,466\n\n\n\nExpansion of cfDNA for Libraries\nTwist Bioscience\nSouth San Francisco, California\nNov 2021\n\nUS Prov. Pat. Ref No 823.102\n\n\n\nLibraries for mutational analysis\nTwist Bioscience\nSouth San Francisco, California\nApr 2021\n\nUS Prov. Pat. Ref No 823.101\nConfiguration and fabrication of synthetic DNA & RNA reference standards and synthetic variant sequences\n\n\n\nMethod for counterselection in microorganisms\nZymergen, Inc.\nEmeryville, California\nMar 2021\n\nUS 2021_0087586 A1\nDemonstration of novel counterselection mechanism in non-model Bacillus microbe for genetic modification"
  },
  {
    "objectID": "Patrick-Cherry-cv.html#publications",
    "href": "Patrick-Cherry-cv.html#publications",
    "title": "CV of Patrick Cherry, PhD",
    "section": " Publications",
    "text": "Publications\n\n\nI communicate my results clearly, both in writing and in live presentations. I enjoy writing research papers, but my career has required more tech notes and app notes recently.\n\nTwist cfDNA Pan-Cancer Reference Standard v2 Technical Guidance\nTwist Bioscience Product Sheet & FAQ\nSouth San Francisco, California\nJan 2024\n\nPatrick Cherry, Lydia Bonar, & Mike Bocek\n\n\n\nCharacteristics and specificity of the wild-type / 0% VAF reference material\nTwist Bioscience\nSouth San Francisco, California\nApr 2022\n\nPatrick Cherry & Mike Bocek\n\n\n\nTwist Pan-cancer synthetic reference materials technical guide (deprecated)\nTwist Bioscience\nSouth San Francisco, California\nDec 2021\n\nPatrick Cherry & Mike Bocek\n\n\n\nMultiple decay events target HAC1 mRNA during splicing to regulate the unfolded protein response\neLife\nAurora/Denver, Colorado\nMar 2019\n\nCherry, P., Peach, S., & Hesselberth, J.\n\n\n\nGenetic bypass of essential RNA repair enzymes in budding yeast\nRNA\nAurora/Denver, Colorado\nDec 2017\n\nCherry, P., White, L., York, K., & Hesselberth, J."
  },
  {
    "objectID": "Patrick-Cherry-cv.html#presentations-talks",
    "href": "Patrick-Cherry-cv.html#presentations-talks",
    "title": "CV of Patrick Cherry, PhD",
    "section": " Presentations & Talks",
    "text": "Presentations & Talks\n\n\nI give audience-centered presentations by adapting on the fly and over time to the venue and occasion. I like to transfer knowledge by giving methods/best practices talks whose slides can also serve as documentation.\n\nTwist pan-cancer reference standard V2: Enhanced precision and reduced errors in ctDNA analysis\nAdvances in Genome Biology and Technology, Twist Bioscience\nOrlando, Florida\nFeb 2024\n\nLydia Bonar, Patrick Cherry, Michael Bocek, Shawn Gorda, Derek Murphy, and Esteban Toro\n\n\n\nHigh sensitivity detection of specific ultra low-frequency somatic mutations for minimal residual disease (MRD) monitoring\nInternational Society of Liquid Biopsy Annual Congress, Twist Bioscience\nMadrid, Spain\nNov 2023\n\nTina Han, Tong Liu, Michael Bocek, Patrick Cherry, Shawn Gorda, Nairi Pezeshkian, Dan Nasko, Po-Yuan Tung, Derek Murphy, and Esteban Toro\n\n\n\nHigh sensitivity detection of specific ultra low-frequency somatic mutations for minimal residual disease (MRD) monitoring\nAmerican Association for Cancer Researchers, Twist Bioscience\nOrlando, Florida\nApr 2023\n\nTong Liu, Michael Bocek, Patrick Cherry, Shawn Gorda, Jean Challacombe, Derek Murphy and Esteban Toro\n\n\n\nAn end-to-end workflow for accurate methylation detection\nAmerican Association for Cancer Researchers, Twist Bioscience\nOrlando, Florida\nApr 2023\n\nLydia Bonar, Kristin Butcher, Michael Bocek, Holly Corbitt, Bryan Hoglund, Cibelle Nassif, Patrick Cherry, Derek Murphy, Jean Challacombe, Esteban Toro\n\n\n\nTwist pan-cancer synthetic RNA fusion control for assay development\nAmerican Association for Cancer Researchers, Twist Bioscience\nOrlando, Florida\nApr 2023\n\nPatrick Cherry, Jason Corwin, Yu Cai, Kit Fuhrman, Jean Challacombe, Derek Murphy, Esteban Toro\n\n\n\nColorado RNA Club Industry Session\nColorado RNA Club\nBoulder, Colorado\nApr 2023\n\n\nUse of synthetic CNV fragments to mimic copy number alterations for ctDNA reference standards\nAdvances in Genome Biology and Technology, Twist Bioscience\nHollywood, Florida\nFeb 2023\n\nJason Corwin, Patrick Cherry, Shawn Gorda, Michael Bocek, Jean Challacombe, Derek Murphy, Esteban Toro\n\n\n\nMethylation Controls to detect for methylation level quantification in the Twist Targeted Methylation Sequencing workflow\nAdvances in Genome Biology and Technology\nHollywood, Florida\nFeb 2023\n\nKristin Butcher, Michael Bocek, Patrick Cherry, Jean Challacombe, Esteban Toro\n\n\n\nEfficient, high sensitivity detection of oncogenic variants with UMIs and target enrichment\nEuropean Human Genetics Conference\nVienna, Austria\nMay 2022\n\nMichael Bocek, Lydia Bonar, Jean Challacombe, Richard Gantt, Patrick Cherry, Rebecca Liao, Derek Murphy and Esteban Toro\n\n\n\nTwist pan-cancer synthetic reference materials for cell-free DNA (cfDNA) assay development\nAmerican Association for Cancer Researchers, Twist Bioscience\nNew Orleans, Louisiana\nApr 2022\n\n\nPan-cancer Reference Standard: Methods in Automation & Future Needs\nTwist Automation Group Meeting\nSouth San Francisco, CA\nApr 2022\n\n\nTwist reference material products: current methods and future applications\nTwist R&D Symposium\nSouth San Francisco, CA\nMar 2022\n\n\nPan-cancer Reference Standard: Methods & Lessons from NPI & QC\nTwist R&D Meeting\nSouth San Francisco, CA\nFeb 2022\n\n\nMolecular Methods Meet the Standards: Or how I learned to stop worrying and love UV-quantification\nTwist R&D Meeting\nSouth San Francisco, CA\nJul 2021\n\n\nColorado RNA Club Industry Session\nColorado RNA Club\nBoulder, Colorado\nApr 2021\n\n\nR use at Zymergen\nZ-Tech Talk\nEmeryville, CA\nJun 2020\n\n\nData-driven troubleshooting of NGS experiments\nData Science Talk\nEmeryville, CA\nApr 2020\n\n\nNGS Sample Preparation Deep-Dive\nNGS Technical Talk Series\nEmeryville, CA\nMar 2020\n\n\nRNA terminus chemistry potentiates decay events that target HAC1 mRNA during the unfolded protein response\nThesis Defense Seminar\nAurora, Colorado\nJan 2019\n\n\nRNA modification and decay regulates the unfolded protein response\nRocky Mountain Yeast Meeting Poster\nFort Collins, Colorado\nJan 2019\n\n\nWhat the unfolded protein response teaches us about RNA decay\nBolie Scholar Talk, Molecular Biology Program Retreat\nWinter Park, CO\nOct 2018\n\n\nGenetic bypass of essential yeast RNA repair enzymes\nRocky Mountain Yeast Meeting Poster\nGolden, Colorado\nJan 2018\n\n\nGenetic bypass of essential yeast RNA repair enzymes\nMolecular Biology Program Update Talk\nAurora, Colorado\nOct 2017\n\n\nRNA processing regulates the unfolded protein response\nCSHL: mRNA Processing Meeting Talk\nCold Spring Harbor, New York\nAug 2017\n\n\nGenetic bypass of essential yeast RNA repair enzymes\nRocky Mountain Yeast Meeting Poster\nBoulder, Colorado\nJan 2017\n\n\nRNA processing regulates the unfolded protein response\nRNA Club Talk\nBoulder, Colorado\nDec 2016\n\n\nRNA Healing and Destruction\nMolecular Biology Program Update Talk\nAurora, Colorado\nOct 2016\n\n\nRNA processing regulates the unfolded protein response\nRocky Mountain Yeast Meeting Poster\nFort Collins, Colorado\nJan 2016\n\n\nTurnover of endonucleolytic products of No-Go mRNA decay\nRNA Stability Meeting\nEstes Park, Colorado\nJun 2015\n\n\nRNA 5′-kinase-mediated co-translational mRNA decay\nMolecular Biology Program Update Talk\nAurora, Colorado\nFeb 2015\n\n\nRNA 5′-kinase-mediated co-translational mRNA decay\nRocky Mountain Yeast Meeting Poster\nAurora, Colorado\nJan 2015\n\n\nRNA 5′-kinase-mediated co-translational mRNA decay\nRocky Mountain Yeast Meeting Poster\nBoulder, Colorado\nJan 2014\n\n\nCoordinated upregulation of antioxidant protection and mitochondrial DNA biosynthesis in liver cells by oxidative stress\nSenior Undergraduate Capstone Research Talk\nConway, Arkansas\nJan 2013"
  },
  {
    "objectID": "Patrick-Cherry-cv.html#trainees-direct-reports",
    "href": "Patrick-Cherry-cv.html#trainees-direct-reports",
    "title": "CV of Patrick Cherry, PhD",
    "section": " Trainees & Direct Reports",
    "text": "Trainees & Direct Reports\n\n\nWhile I’ve not held a role with “manager” in the title, all Scientist positions I’ve accepted have involved formal report management responsibility. I take managing and mentoring seriously; I emphasize trust, learning, and growth with my reports.\n\nDerek Cai, BS, University of California San Diego, Research Associate I\nTwist Bioscience\nSouth San Francisco, California\nJan 2024 - Jan 2022\n\n\nLydia Bonar, MS, Johns Hopkins University, Scientist\nTwist Bioscience\nSouth San Francisco, California\nJan 2024 - Jan 2021\n\n\nAlonzo Lee, BS, University of California Santa Cruz, Scientist\nTwist Bioscience\nSouth San Francisco, California\nJan 2022 - Jan 2021\n\n\nKaisle Hill, BA, University of California Berkeley, Senior Research Associate\nZymergen, Inc.\nEmeryville, California\nJan 2021 - Jan 2020\n\n\nRachel A Jones, MS, University of Arizona, Postdoctoral Fellow\nUniversity of Colorado School of Medicine\nAurora/Denver, Colorado\nJan 2017\n\n\nLaura K White, MS, Biotechnology, Johns Hopkins University, Postdoctoral Fellow\nUniversity of Colorado School of Medicine\nAurora/Denver, Colorado\nJan 2016\n\n\nHaven Himmighoefer, Undergraduate, University of Colorado Denver\nUniversity of Colorado School of Medicine\nAurora/Denver, Colorado\nJan 2016 - Jan 2014\n\n\nLeslie Aranda, Undergraduate, University of California Riverside\nUniversity of Colorado School of Medicine\nAurora/Denver, Colorado\nJan 2015"
  }
]
{
  "hash": "df50f62dce1ce23cebe27973e4d72759",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"San Francisco tree classification model\"\nauthor: \"Patrick Cherry\"\ndate: \"2024-02-10\"\ncategories:\n  - data\n  - code\n  - tree models\nimage: \"2024_02_10-SF_tree_classification.jpg\"\nformat:\n  html:\n    df-print: paged\nexecute:\n  freeze: TRUE\n  echo: TRUE\neditor_options: \n  chunk_output_type: inline\n---\n\n::: {.cell}\n\n:::\n\n\n\n![A purple-leaf plum (Prunus cerasifera ‘Krauter Vesuvius’) tree bluming along a hilly San Francisco street](2024_02_10-SF_tree_classification.jpg)\n\nThe goal is the make a predictor of whether a tree tracked in San Francisco is a Department of Public Works maintained legal status tree, or some other legal status.\n\n\n\n::: {.cell}\n\n:::\n\n\n\n# Get data\nThis is a 2020-01-28 [Tidy Tuesday](https://github.com/rfordatascience/tidytuesday/blob/master/data/2020/2020-01-28/readme.md) dataset. These data are from the San Francisco Public Works' Bureau of Urban Forestry.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsftrees <- read_csv(\"https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-01-28/sf_trees.csv\",\n                    show_col_types = FALSE)\n```\n:::\n\n\n\n# Preliminary exploration of data\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(sftrees)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"tree_id\"],\"name\":[1],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"legal_status\"],\"name\":[2],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"species\"],\"name\":[3],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"address\"],\"name\":[4],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"site_order\"],\"name\":[5],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"site_info\"],\"name\":[6],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"caretaker\"],\"name\":[7],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"date\"],\"name\":[8],\"type\":[\"date\"],\"align\":[\"right\"]},{\"label\":[\"dbh\"],\"name\":[9],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"plot_size\"],\"name\":[10],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"latitude\"],\"name\":[11],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"longitude\"],\"name\":[12],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"53719\",\"2\":\"Permitted Site\",\"3\":\"Tree(s) ::\",\"4\":\"2963 Webster St\",\"5\":\"1\",\"6\":\"Sidewalk: Curb side : Cutout\",\"7\":\"Private\",\"8\":\"1955-09-19\",\"9\":\"NA\",\"10\":\"NA\",\"11\":\"37.79787\",\"12\":\"-122.4341\"},{\"1\":\"30313\",\"2\":\"Permitted Site\",\"3\":\"Tree(s) ::\",\"4\":\"501 Arkansas St\",\"5\":\"3\",\"6\":\"Sidewalk: Curb side : Cutout\",\"7\":\"Private\",\"8\":\"1955-10-20\",\"9\":\"NA\",\"10\":\"NA\",\"11\":\"37.75984\",\"12\":\"-122.3981\"},{\"1\":\"30312\",\"2\":\"Permitted Site\",\"3\":\"Tree(s) ::\",\"4\":\"501 Arkansas St\",\"5\":\"2\",\"6\":\"Sidewalk: Curb side : Cutout\",\"7\":\"Private\",\"8\":\"1955-10-20\",\"9\":\"NA\",\"10\":\"NA\",\"11\":\"37.75984\",\"12\":\"-122.3981\"},{\"1\":\"30314\",\"2\":\"DPW Maintained\",\"3\":\"Pittosporum undulatum :: Victorian Box\",\"4\":\"501 Arkansas St\",\"5\":\"1\",\"6\":\"Sidewalk: Curb side : Cutout\",\"7\":\"Private\",\"8\":\"1955-10-20\",\"9\":\"16\",\"10\":\"NA\",\"11\":\"37.75977\",\"12\":\"-122.3981\"},{\"1\":\"30315\",\"2\":\"Permitted Site\",\"3\":\"Acacia melanoxylon :: Blackwood Acacia\",\"4\":\"1190 Sacramento St\",\"5\":\"5\",\"6\":\"Sidewalk: Curb side : Cutout\",\"7\":\"Private\",\"8\":\"1955-10-24\",\"9\":\"NA\",\"10\":\"NA\",\"11\":\"37.79265\",\"12\":\"-122.4124\"},{\"1\":\"30316\",\"2\":\"Permitted Site\",\"3\":\"Acacia melanoxylon :: Blackwood Acacia\",\"4\":\"1190 Sacramento St\",\"5\":\"6\",\"6\":\"Sidewalk: Curb side : Cutout\",\"7\":\"Private\",\"8\":\"1955-10-24\",\"9\":\"NA\",\"10\":\"NA\",\"11\":\"37.79265\",\"12\":\"-122.4124\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\n\n## Legal status\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsftrees %>%\n  count(legal_status, sort = TRUE) %>%\n  mutate(percent = round( n / sum(n) * 100, digits = 1))\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"legal_status\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"n\"],\"name\":[2],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"percent\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"DPW Maintained\",\"2\":\"141725\",\"3\":\"73.4\"},{\"1\":\"Permitted Site\",\"2\":\"39732\",\"3\":\"20.6\"},{\"1\":\"Undocumented\",\"2\":\"8106\",\"3\":\"4.2\"},{\"1\":\"Significant Tree\",\"2\":\"1648\",\"3\":\"0.9\"},{\"1\":\"Planning Code 138.1 required\",\"2\":\"971\",\"3\":\"0.5\"},{\"1\":\"Property Tree\",\"2\":\"316\",\"3\":\"0.2\"},{\"1\":\"Section 143\",\"2\":\"230\",\"3\":\"0.1\"},{\"1\":\"Private\",\"2\":\"163\",\"3\":\"0.1\"},{\"1\":\"NA\",\"2\":\"54\",\"3\":\"0.0\"},{\"1\":\"Landmark tree\",\"2\":\"42\",\"3\":\"0.0\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsftrees %>% count(legal_status, caretaker, sort = TRUE) %>% head(20)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"legal_status\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"caretaker\"],\"name\":[2],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"n\"],\"name\":[3],\"type\":[\"int\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"DPW Maintained\",\"2\":\"Private\",\"3\":\"113102\"},{\"1\":\"Permitted Site\",\"2\":\"Private\",\"3\":\"38312\"},{\"1\":\"DPW Maintained\",\"2\":\"DPW\",\"3\":\"26963\"},{\"1\":\"Undocumented\",\"2\":\"Private\",\"3\":\"7463\"},{\"1\":\"Significant Tree\",\"2\":\"Private\",\"3\":\"1505\"},{\"1\":\"Planning Code 138.1 required\",\"2\":\"Private\",\"3\":\"947\"},{\"1\":\"DPW Maintained\",\"2\":\"SFUSD\",\"3\":\"898\"},{\"1\":\"Permitted Site\",\"2\":\"Port\",\"3\":\"536\"},{\"1\":\"DPW Maintained\",\"2\":\"Rec/Park\",\"3\":\"281\"},{\"1\":\"Permitted Site\",\"2\":\"Rec/Park\",\"3\":\"262\"},{\"1\":\"Section 143\",\"2\":\"Private\",\"3\":\"229\"},{\"1\":\"Permitted Site\",\"2\":\"PUC\",\"3\":\"208\"},{\"1\":\"Property Tree\",\"2\":\"Private\",\"3\":\"202\"},{\"1\":\"Undocumented\",\"2\":\"DPW\",\"3\":\"200\"},{\"1\":\"DPW Maintained\",\"2\":\"Port\",\"3\":\"182\"},{\"1\":\"Undocumented\",\"2\":\"Rec/Park\",\"3\":\"165\"},{\"1\":\"Private\",\"2\":\"Private\",\"3\":\"155\"},{\"1\":\"DPW Maintained\",\"2\":\"DPW for City Agency\",\"3\":\"111\"},{\"1\":\"Undocumented\",\"2\":\"SFUSD\",\"3\":\"100\"},{\"1\":\"Permitted Site\",\"2\":\"Purchasing Dept\",\"3\":\"81\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\n\nSo the `legal_status` of \"DPW Maintained\" does not equate with a `caretaker` of \"DPW\"—in fact, most of the time, DPW-legal status trees are privately taken care of.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncol_plot_legalstatus_by_caretaker <- sftrees %>%\n  count(legal_status, caretaker) %>%\n  add_count(caretaker, wt = n, name = \"caretaker_count\") %>%\n  filter(caretaker_count > 50) %>%\n  group_by(legal_status) %>%\n  mutate(percent_legal = n / sum(n)) %>%\n  ggplot(aes(percent_legal, caretaker, fill = legal_status)) +\n  geom_col(position = \"dodge\") +\n  scale_fill_viridis_d(option = \"D\", begin = 0.1, end = 0.7, na.value = \"grey50\") +\n  labs(x = \"proportion of trees in each category\")\ncol_plot_legalstatus_by_caretaker\n```\n\n::: {.cell-output-display}\n![](2024_02_10-SF_tree_classification_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\n\n## NAs in data\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsftrees %>%\n  summarise(across(everything(), ~ sum(is.na(.x))),\n            \"n\" = n()) %>%\n  relocate(n) %>%\n  t() %>% as_tibble(.name_repair = \"minimal\", rownames = \"col_name\")\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"col_name\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"\"],\"name\":[2],\"type\":[\"int\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"n\",\"2\":\"192987\"},{\"1\":\"tree_id\",\"2\":\"0\"},{\"1\":\"legal_status\",\"2\":\"54\"},{\"1\":\"species\",\"2\":\"0\"},{\"1\":\"address\",\"2\":\"1487\"},{\"1\":\"site_order\",\"2\":\"1634\"},{\"1\":\"site_info\",\"2\":\"0\"},{\"1\":\"caretaker\",\"2\":\"0\"},{\"1\":\"date\",\"2\":\"124610\"},{\"1\":\"dbh\",\"2\":\"41819\"},{\"1\":\"plot_size\",\"2\":\"50013\"},{\"1\":\"latitude\",\"2\":\"2832\"},{\"1\":\"longitude\",\"2\":\"2832\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\n\nInstead of using `glimpse()`, I'm using R's native `t()`, or transpose, to print the results lengthwise instead of as columns across the page. The `n` row at the start shows how many rows are in the dataframe; the other named columns show how many `NA`s are in the data in each column. The `date` and `dhb` [(Diameter at breast height)](https://en.wikipedia.org/wiki/Diameter_at_breast_height) columns show significant levels of NAs (64.5% and 21.7%, respectively).\n\n## Species\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsftrees %>% count(species, sort = TRUE) %>%\n  mutate(\"rank\" = row_number()) %>% head(20)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"species\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"n\"],\"name\":[2],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"rank\"],\"name\":[3],\"type\":[\"int\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"Tree(s) ::\",\"2\":\"11629\",\"3\":\"1\"},{\"1\":\"Platanus x hispanica :: Sycamore: London Plane\",\"2\":\"11557\",\"3\":\"2\"},{\"1\":\"Metrosideros excelsa :: New Zealand Xmas Tree\",\"2\":\"8744\",\"3\":\"3\"},{\"1\":\"Lophostemon confertus :: Brisbane Box\",\"2\":\"8581\",\"3\":\"4\"},{\"1\":\"Tristaniopsis laurina :: Swamp Myrtle\",\"2\":\"7197\",\"3\":\"5\"},{\"1\":\"Pittosporum undulatum :: Victorian Box\",\"2\":\"7122\",\"3\":\"6\"},{\"1\":\"Prunus cerasifera :: Cherry Plum\",\"2\":\"6716\",\"3\":\"7\"},{\"1\":\"Magnolia grandiflora :: Southern Magnolia\",\"2\":\"6285\",\"3\":\"8\"},{\"1\":\"Arbutus 'Marina' :: Hybrid Strawberry Tree\",\"2\":\"5702\",\"3\":\"9\"},{\"1\":\"Ficus microcarpa nitida 'Green Gem' :: Indian Laurel Fig Tree 'Green Gem'\",\"2\":\"5624\",\"3\":\"10\"},{\"1\":\"Prunus serrulata 'Kwanzan' :: Kwanzan Flowering Cherry\",\"2\":\"4025\",\"3\":\"11\"},{\"1\":\"Acacia melanoxylon :: Blackwood Acacia\",\"2\":\"3956\",\"3\":\"12\"},{\"1\":\"Maytenus boaria :: Mayten\",\"2\":\"3899\",\"3\":\"13\"},{\"1\":\"Olea europaea :: Olive Tree\",\"2\":\"3694\",\"3\":\"14\"},{\"1\":\"Corymbia ficifolia :: Red Flowering Gum\",\"2\":\"3575\",\"3\":\"15\"},{\"1\":\"Callistemon citrinus :: Lemon Bottlebrush\",\"2\":\"3266\",\"3\":\"16\"},{\"1\":\"Ginkgo biloba :: Maidenhair Tree\",\"2\":\"3212\",\"3\":\"17\"},{\"1\":\"Pyrus calleryana :: Ornamental Pear\",\"2\":\"2969\",\"3\":\"18\"},{\"1\":\"Prunus serrulata :: Ornamental Cherry\",\"2\":\"2696\",\"3\":\"19\"},{\"1\":\"Eriobotrya deflexa :: Bronze Loquat\",\"2\":\"2402\",\"3\":\"20\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsftrees %>% count(species, sort = TRUE, name = \"n_observations\") %>%\n  count(n_observations, name = \"n_tree_species\") %>%\n  head(10)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"n_observations\"],\"name\":[1],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"n_tree_species\"],\"name\":[2],\"type\":[\"int\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"1\",\"2\":\"67\"},{\"1\":\"2\",\"2\":\"44\"},{\"1\":\"3\",\"2\":\"25\"},{\"1\":\"4\",\"2\":\"29\"},{\"1\":\"5\",\"2\":\"17\"},{\"1\":\"6\",\"2\":\"16\"},{\"1\":\"7\",\"2\":\"11\"},{\"1\":\"8\",\"2\":\"9\"},{\"1\":\"9\",\"2\":\"13\"},{\"1\":\"10\",\"2\":\"7\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncol_plot_tree_species <- sftrees %>%\n  count(species) %>%\n  filter(n >= 400) %>%\n  mutate(\"species\" = fct_rev(fct_infreq(as_factor(species), w = n))) %>%\n  ggplot(aes(y = n, x = species, fill = species)) +\n  geom_col() +\n  scale_fill_viridis_d(option = \"D\", begin = 0.1, end = 0.7, na.value = \"grey50\") +\n  coord_flip() +\n  labs(y = \"Number of trees\", x = \"Species\") +\n  theme(legend.position = \"none\",\n        axis.text.y = element_text(size = 4))\ncol_plot_tree_species\n```\n\n::: {.cell-output-display}\n![](2024_02_10-SF_tree_classification_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n\n\nFrom this distribution of tree species with 400 or more trees, we can see some species data quality issues. The observation \"trees(s)::\" for `species` is the most abundant classification, which really isn't a classification at all. The 26th most common species observation is \"::\", so no data at all.\n\nIn this San Francisco data, the most common tree is the Sycamore: London Plane (*Platanus x hispanica*) with 11557. I personally like the Cherry Plum tree (*Prunus cerasifera*), which is 7th with 6716 trees. Interestingly, there are lots of Southern Magnolia trees (*Magnolia grandiflora*), in 8th place with 6285.\n\nAlso interestingly, there are 67 tree species with one individual in the data set. And 44 species with just 2 individuals. There are lots of lone or near-lone tree species in San Francisco.\n\n### What about tree family?\nWe could perhaps call the tree family, or 'spp' based on the final word in the `species` data column.\n\nA lot of common species names end in \"tree\", so I will accommodate that by writing a special regex that will pull the next to last word if the last word is \"tree\". Also, some trees are \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsftrees %>%\n  mutate(\"tree_family\" = str_extract(species, \"(\\\\w+(?=\\\\s(T|t)ree))|(\\\\w+)$\")) %>%\n  # use above regex to get next to last word when last word is tree\n  # also, don't keep \"tree\" text, because some species are coded as both with\n  # and without tree at the end; this regex collapses those irregularities\n  count(tree_family, sort = TRUE) %>%\n  mutate(\"rank\" = row_number()) %>% head(50)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"tree_family\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"n\"],\"name\":[2],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"rank\"],\"name\":[3],\"type\":[\"int\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"NA\",\"2\":\"18225\",\"3\":\"1\"},{\"1\":\"Box\",\"2\":\"15718\",\"3\":\"2\"},{\"1\":\"Plane\",\"2\":\"11680\",\"3\":\"3\"},{\"1\":\"Fig\",\"2\":\"8770\",\"3\":\"4\"},{\"1\":\"Xmas\",\"2\":\"8744\",\"3\":\"5\"},{\"1\":\"Magnolia\",\"2\":\"8534\",\"3\":\"6\"},{\"1\":\"Cherry\",\"2\":\"7811\",\"3\":\"7\"},{\"1\":\"Plum\",\"2\":\"7398\",\"3\":\"8\"},{\"1\":\"Myrtle\",\"2\":\"7301\",\"3\":\"9\"},{\"1\":\"Strawberry\",\"2\":\"6334\",\"3\":\"10\"},{\"1\":\"Gum\",\"2\":\"6053\",\"3\":\"11\"},{\"1\":\"Pear\",\"2\":\"5922\",\"3\":\"12\"},{\"1\":\"Palm\",\"2\":\"5435\",\"3\":\"13\"},{\"1\":\"Acacia\",\"2\":\"5142\",\"3\":\"14\"},{\"1\":\"Pine\",\"2\":\"4440\",\"3\":\"15\"},{\"1\":\"Bottlebrush\",\"2\":\"4216\",\"3\":\"16\"},{\"1\":\"Olive\",\"2\":\"4013\",\"3\":\"17\"},{\"1\":\"Mayten\",\"2\":\"3899\",\"3\":\"18\"},{\"1\":\"Elm\",\"2\":\"3301\",\"3\":\"19\"},{\"1\":\"Maidenhair\",\"2\":\"3250\",\"3\":\"20\"},{\"1\":\"Loquat\",\"2\":\"2639\",\"3\":\"21\"},{\"1\":\"Privet\",\"2\":\"2353\",\"3\":\"22\"},{\"1\":\"Maple\",\"2\":\"2310\",\"3\":\"23\"},{\"1\":\"Cypress\",\"2\":\"2269\",\"3\":\"24\"},{\"1\":\"Karo\",\"2\":\"1795\",\"3\":\"25\"},{\"1\":\"Cajeput\",\"2\":\"1736\",\"3\":\"26\"},{\"1\":\"Myoporum\",\"2\":\"1590\",\"3\":\"27\"},{\"1\":\"Eucalyptus\",\"2\":\"1568\",\"3\":\"28\"},{\"1\":\"Willow\",\"2\":\"1470\",\"3\":\"29\"},{\"1\":\"Pepper\",\"2\":\"1409\",\"3\":\"30\"},{\"1\":\"Juniper\",\"2\":\"1405\",\"3\":\"31\"},{\"1\":\"Hawthorn\",\"2\":\"1386\",\"3\":\"32\"},{\"1\":\"Oak\",\"2\":\"1315\",\"3\":\"33\"},{\"1\":\"Jacaranda\",\"2\":\"1170\",\"3\":\"34\"},{\"1\":\"Ash\",\"2\":\"1123\",\"3\":\"35\"},{\"1\":\"Tea\",\"2\":\"1117\",\"3\":\"36\"},{\"1\":\"Primrose\",\"2\":\"1077\",\"3\":\"37\"},{\"1\":\"Spp\",\"2\":\"1000\",\"3\":\"38\"},{\"1\":\"Banyan\",\"2\":\"966\",\"3\":\"39\"},{\"1\":\"Laurel\",\"2\":\"941\",\"3\":\"40\"},{\"1\":\"Carob\",\"2\":\"855\",\"3\":\"41\"},{\"1\":\"Bush\",\"2\":\"790\",\"3\":\"42\"},{\"1\":\"Ironbark\",\"2\":\"718\",\"3\":\"43\"},{\"1\":\"Buckthorn\",\"2\":\"621\",\"3\":\"44\"},{\"1\":\"Ironwood\",\"2\":\"548\",\"3\":\"45\"},{\"1\":\"Sycamore\",\"2\":\"512\",\"3\":\"46\"},{\"1\":\"Locust\",\"2\":\"476\",\"3\":\"47\"},{\"1\":\"Paperbark\",\"2\":\"454\",\"3\":\"48\"},{\"1\":\"Pistache\",\"2\":\"428\",\"3\":\"49\"},{\"1\":\"Melaleuca\",\"2\":\"402\",\"3\":\"50\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\n\nBased on pseudo-\"family\" classification, the Box tree is the most common tree family observed, followed by the Plane, and then Fig, \"Xmas,\" Magnolia, Cheery, Plum, Myrtle, Strawberry, Gum, and Pear families of trees.\n\n## plot_size\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsftrees %>% count(plot_size, sort = TRUE) %>% head(20)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"plot_size\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"n\"],\"name\":[2],\"type\":[\"int\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"NA\",\"2\":\"50013\"},{\"1\":\"Width 3ft\",\"2\":\"36343\"},{\"1\":\"3x3\",\"2\":\"29166\"},{\"1\":\"Width 0ft\",\"2\":\"17017\"},{\"1\":\"Width 4ft\",\"2\":\"13745\"},{\"1\":\"3X3\",\"2\":\"12073\"},{\"1\":\"Width 2ft\",\"2\":\"7363\"},{\"1\":\"Width 5ft\",\"2\":\"4547\"},{\"1\":\"4X4\",\"2\":\"2761\"},{\"1\":\"Width 6ft\",\"2\":\"2455\"},{\"1\":\"4x4\",\"2\":\"2232\"},{\"1\":\"Width 8ft\",\"2\":\"1475\"},{\"1\":\"Width 10ft\",\"2\":\"1361\"},{\"1\":\"60\",\"2\":\"782\"},{\"1\":\"Width 1ft\",\"2\":\"645\"},{\"1\":\"3X4\",\"2\":\"628\"},{\"1\":\"Width 7ft\",\"2\":\"503\"},{\"1\":\"5x5\",\"2\":\"483\"},{\"1\":\"10\",\"2\":\"378\"},{\"1\":\"20\",\"2\":\"375\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\n\n## Prepare data for model\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntrees_formodel <- sftrees %>% #trees_df\n  mutate(\n    \"legal_status\" = case_when(\n      legal_status == \"DPW Maintained\" ~ legal_status,\n      TRUE ~ \"Other\"),\n    \"plot_size\" = parse_number(plot_size)) %>%\n  select(-address) %>%\n  na.omit() %>%\n  mutate_if(is.character, factor)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: There was 1 warning in `mutate()`.\nℹ In argument: `plot_size = parse_number(plot_size)`.\nCaused by warning:\n! 109 parsing failures.\n  row col expected actual\n10979  -- a number    TR \n13245  -- a number    CUT\n13495  -- a number    TR \n13501  -- a number    TR \n13502  -- a number    TR \n..... ... ........ ......\nSee problems(...) for more details.\n```\n\n\n:::\n\n```{.r .cell-code}\nhead(trees_formodel)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"tree_id\"],\"name\":[1],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"legal_status\"],\"name\":[2],\"type\":[\"fct\"],\"align\":[\"left\"]},{\"label\":[\"species\"],\"name\":[3],\"type\":[\"fct\"],\"align\":[\"left\"]},{\"label\":[\"site_order\"],\"name\":[4],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"site_info\"],\"name\":[5],\"type\":[\"fct\"],\"align\":[\"left\"]},{\"label\":[\"caretaker\"],\"name\":[6],\"type\":[\"fct\"],\"align\":[\"left\"]},{\"label\":[\"date\"],\"name\":[7],\"type\":[\"date\"],\"align\":[\"right\"]},{\"label\":[\"dbh\"],\"name\":[8],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"plot_size\"],\"name\":[9],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"latitude\"],\"name\":[10],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"longitude\"],\"name\":[11],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"30372\",\"2\":\"DPW Maintained\",\"3\":\"Ulmus parvifolia :: Chinese Elm\",\"4\":\"1\",\"5\":\"Sidewalk: Curb side : Cutout\",\"6\":\"Private\",\"7\":\"1956-03-02\",\"8\":\"10\",\"9\":\"3\",\"10\":\"37.76005\",\"11\":\"-122.3983\"},{\"1\":\"30460\",\"2\":\"DPW Maintained\",\"3\":\"Pittosporum undulatum :: Victorian Box\",\"4\":\"1\",\"5\":\"Sidewalk: Curb side : Cutout\",\"6\":\"Private\",\"7\":\"1956-05-11\",\"8\":\"19\",\"9\":\"4\",\"10\":\"37.80074\",\"11\":\"-122.4073\"},{\"1\":\"30454\",\"2\":\"DPW Maintained\",\"3\":\"Pittosporum undulatum :: Victorian Box\",\"4\":\"1\",\"5\":\"Sidewalk: Curb side : Cutout\",\"6\":\"Private\",\"7\":\"1956-05-11\",\"8\":\"8\",\"9\":\"3\",\"10\":\"37.80081\",\"11\":\"-122.4057\"},{\"1\":\"30428\",\"2\":\"DPW Maintained\",\"3\":\"Pittosporum undulatum :: Victorian Box\",\"4\":\"1\",\"5\":\"Sidewalk: Curb side : Cutout\",\"6\":\"Private\",\"7\":\"1956-05-11\",\"8\":\"13\",\"9\":\"7\",\"10\":\"37.80082\",\"11\":\"-122.4066\"},{\"1\":\"30468\",\"2\":\"DPW Maintained\",\"3\":\"Melaleuca quinquenervia :: Cajeput\",\"4\":\"2\",\"5\":\"Sidewalk: Curb side : Cutout\",\"6\":\"Private\",\"7\":\"1956-05-29\",\"8\":\"8\",\"9\":\"3\",\"10\":\"37.80061\",\"11\":\"-122.4073\"},{\"1\":\"30470\",\"2\":\"DPW Maintained\",\"3\":\"Melaleuca quinquenervia :: Cajeput\",\"4\":\"3\",\"5\":\"Sidewalk: Curb side : Cutout\",\"6\":\"Private\",\"7\":\"1956-05-29\",\"8\":\"8\",\"9\":\"3\",\"10\":\"37.80062\",\"11\":\"-122.4073\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncol_plot_legalstatus_by_caretaker <- trees_formodel %>%\n  count(legal_status, caretaker) %>%\n  add_count(caretaker, wt = n, name = \"caretaker_count\") %>%\n  filter(caretaker_count > 50) %>%\n  group_by(legal_status) %>%\n  mutate(percent_legal = n / sum(n)) %>%\n  ggplot(aes(percent_legal, caretaker, fill = legal_status)) +\n  geom_col(position = \"dodge\") +\n  scale_fill_viridis_d(option = \"D\", begin = 0.1, end = 0.7, na.value = \"grey50\") +\n  labs(fill = NULL,\n       x = \"proportion of trees in each category\")\ncol_plot_legalstatus_by_caretaker\n```\n\n::: {.cell-output-display}\n![](2024_02_10-SF_tree_classification_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n:::\n\n\n\n## Quick plot/map of data\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntree_loc_plot <- trees_formodel %>%\n  ggplot(aes(x = longitude, y = latitude, color = legal_status)) +\n  geom_point(alpha = 0.6, size = 0.25) +\n  labs(color = NULL, x = NULL, y = NULL) +\n  theme(panel.border = element_blank(),\n        legend.position = c(0.1, 0.9), legend.justification = c(0, .5)) +\n  scale_color_viridis_d(option = \"D\", begin = 0.1, end = 0.7)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: A numeric `legend.position` argument in `theme()` was deprecated in ggplot2\n3.5.0.\nℹ Please use the `legend.position.inside` argument of `theme()` instead.\n```\n\n\n:::\n\n```{.r .cell-code}\ntree_loc_plot\n```\n\n::: {.cell-output-display}\n![](2024_02_10-SF_tree_classification_files/figure-html/unnamed-chunk-15-1.png){width=672}\n:::\n:::\n\n\n\n\n\n## Build Model\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(123)\ntrees_split <-initial_split(trees_formodel, strata = legal_status)\ntrees_train <- training(trees_split)\ntrees_test <- testing(trees_split)\n\nnrow(trees_train); nrow(trees_test)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 17881\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 5961\n```\n\n\n:::\n:::\n\n\n\n## Feature engineering for the date\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntree_rec <- recipe(legal_status ~ ., data = trees_train) %>%\n  update_role(tree_id, new_role = \"ID\") %>%\n  step_other(species, caretaker, threshold = .01) %>%\n  step_other(site_info, threshold = .005) %>%\n  step_dummy(all_nominal(), -all_outcomes()) %>%\n  step_date(date, features = c(\"year\")) %>%\n  step_rm(date) %>%\n  step_downsample(legal_status)\n\ntree_prep <- prep(tree_rec)\n\njuiced <- juice(tree_prep)\n```\n:::\n\n\n\n### Review data preprocessing results\n\n\n::: {.cell}\n\n```{.r .cell-code}\njuiced %>% count(legal_status)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"legal_status\"],\"name\":[1],\"type\":[\"fct\"],\"align\":[\"left\"]},{\"label\":[\"n\"],\"name\":[2],\"type\":[\"int\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"DPW Maintained\",\"2\":\"4308\"},{\"1\":\"Other\",\"2\":\"4308\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\n\n# Set up model hyperparameters\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntune_spec <- rand_forest(\n  mtry = tune(), # \n  trees = 1000, # number of trees to start with\n  min_n = tune() # how many data points in a node to keep splitting further\n) %>%\n  set_mode(\"classification\") %>%\n  set_engine(\"ranger\")\n```\n:::\n\n\n\n## Set up workflow\nconvenience functions\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntune_wf <- workflow() %>%\n  add_recipe(tree_rec) %>%\n  add_model(tune_spec)\n```\n:::\n\n\n\n## Train-test some model hyperparameters\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(234)\ntrees_folds <- vfold_cv(trees_train)\n\nset.seed(345)\ndoParallel::registerDoParallel()\ntune_res <- tune_grid(\n  tune_wf,\n  resamples = trees_folds,\n  grid = 20)\n```\n:::\n\n\n\n\n\n\n\n### view results\n\n\n::: {.cell}\n\n```{.r .cell-code}\nshow_best(tune_res, metric = \"accuracy\")\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"mtry\"],\"name\":[1],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"min_n\"],\"name\":[2],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\".metric\"],\"name\":[3],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\".estimator\"],\"name\":[4],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"mean\"],\"name\":[5],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"n\"],\"name\":[6],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"std_err\"],\"name\":[7],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\".config\"],\"name\":[8],\"type\":[\"chr\"],\"align\":[\"left\"]}],\"data\":[{\"1\":\"35\",\"2\":\"5\",\"3\":\"accuracy\",\"4\":\"binary\",\"5\":\"0.8471000\",\"6\":\"10\",\"7\":\"0.001880239\",\"8\":\"Preprocessor1_Model18\"},{\"1\":\"14\",\"2\":\"3\",\"3\":\"accuracy\",\"4\":\"binary\",\"5\":\"0.8469882\",\"6\":\"10\",\"7\":\"0.001400917\",\"8\":\"Preprocessor1_Model14\"},{\"1\":\"19\",\"2\":\"8\",\"3\":\"accuracy\",\"4\":\"binary\",\"5\":\"0.8459255\",\"6\":\"10\",\"7\":\"0.001502931\",\"8\":\"Preprocessor1_Model19\"},{\"1\":\"35\",\"2\":\"12\",\"3\":\"accuracy\",\"4\":\"binary\",\"5\":\"0.8446392\",\"6\":\"10\",\"7\":\"0.001613269\",\"8\":\"Preprocessor1_Model20\"},{\"1\":\"17\",\"2\":\"11\",\"3\":\"accuracy\",\"4\":\"binary\",\"5\":\"0.8439681\",\"6\":\"10\",\"7\":\"0.001547820\",\"8\":\"Preprocessor1_Model13\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nshow_best(tune_res, metric = \"roc_auc\")\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"mtry\"],\"name\":[1],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"min_n\"],\"name\":[2],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\".metric\"],\"name\":[3],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\".estimator\"],\"name\":[4],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"mean\"],\"name\":[5],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"n\"],\"name\":[6],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"std_err\"],\"name\":[7],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\".config\"],\"name\":[8],\"type\":[\"chr\"],\"align\":[\"left\"]}],\"data\":[{\"1\":\"14\",\"2\":\"3\",\"3\":\"roc_auc\",\"4\":\"binary\",\"5\":\"0.9436789\",\"6\":\"10\",\"7\":\"0.001670672\",\"8\":\"Preprocessor1_Model14\"},{\"1\":\"19\",\"2\":\"8\",\"3\":\"roc_auc\",\"4\":\"binary\",\"5\":\"0.9422167\",\"6\":\"10\",\"7\":\"0.001836972\",\"8\":\"Preprocessor1_Model19\"},{\"1\":\"35\",\"2\":\"5\",\"3\":\"roc_auc\",\"4\":\"binary\",\"5\":\"0.9420326\",\"6\":\"10\",\"7\":\"0.001948534\",\"8\":\"Preprocessor1_Model18\"},{\"1\":\"17\",\"2\":\"11\",\"3\":\"roc_auc\",\"4\":\"binary\",\"5\":\"0.9413050\",\"6\":\"10\",\"7\":\"0.001828302\",\"8\":\"Preprocessor1_Model13\"},{\"1\":\"35\",\"2\":\"12\",\"3\":\"roc_auc\",\"4\":\"binary\",\"5\":\"0.9398899\",\"6\":\"10\",\"7\":\"0.002011990\",\"8\":\"Preprocessor1_Model20\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nside_facet_n_mtry_plot <- tune_res %>%\n  collect_metrics() %>%\n  filter(.metric == \"roc_auc\") %>%\n  select(mean, min_n, mtry) %>%\n  pivot_longer(min_n:mtry,\n    values_to = \"value\",\n    names_to = \"parameter\"\n  ) %>%\n  ggplot(aes(value, mean, color = parameter)) +\n  geom_point(show.legend = FALSE) +\n  facet_wrap(~parameter, scales = \"free_x\") +\n  labs(x = NULL, y = \"AUC\")\nside_facet_n_mtry_plot\n```\n\n::: {.cell-output-display}\n![](2024_02_10-SF_tree_classification_files/figure-html/unnamed-chunk-27-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nnonortho_gid_n_mtry_plot <- tune_res %>%\n  collect_metrics() %>%\n  filter(.metric == \"roc_auc\") %>%\n  select(mean, min_n, mtry) %>%\n  ggplot(aes(x = min_n, y = mtry, color = mean)) +\n  geom_point(size = 6) +\n  geom_hline(yintercept = 10, linetype = \"dotted\") +\n  geom_hline(yintercept = 30, linetype = \"dotted\") +\n  geom_vline(xintercept = 2, linetype = \"dotted\") +\n  geom_vline(xintercept = 8, linetype = \"dotted\") +\n  scale_color_viridis_c(option = \"D\") +\n  labs(color = \"roc_auc\")\nnonortho_gid_n_mtry_plot\n```\n\n::: {.cell-output-display}\n![](2024_02_10-SF_tree_classification_files/figure-html/unnamed-chunk-28-1.png){width=672}\n:::\n:::\n\n\n\nWhile it's not a regular grid (of orthogonal combinations that would allow for *ceteris paribus* testing) of `min_n` and `mtry`, but we can get an idea of what is going on. It looks like higher values of mtry are good (above about 10) and lower values of min_n are good (below about 10). We can get a better handle on the hyperparameters by tuning one more time, this time using regular_grid(). Let’s set ranges of hyperparameters we want to try, (inside of the dotted line box displayed on the 2D plot above) based on the results from our initial tune.\n\n## Train-test some model hyperparameters\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(456)\n\nrf_grid <- grid_regular(mtry(range = c(10, 30)),\n                        min_n(range = c(2, 8)),\n                        levels = 5)\n\nnrow(rf_grid)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 25\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(456)\ndoParallel::registerDoParallel()\ntune_reg_res <- tune_grid(tune_wf,\n                          resamples = trees_folds,\n                          grid = rf_grid)\n```\n:::\n\n\n\n\n\n\n\n### view results\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntune_reg_res %>% select_best(metric = \"accuracy\")\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"mtry\"],\"name\":[1],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"min_n\"],\"name\":[2],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\".config\"],\"name\":[3],\"type\":[\"chr\"],\"align\":[\"left\"]}],\"data\":[{\"1\":\"30\",\"2\":\"2\",\"3\":\"Preprocessor1_Model05\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntune_reg_res %>% select_best(metric = \"roc_auc\")\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"mtry\"],\"name\":[1],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"min_n\"],\"name\":[2],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\".config\"],\"name\":[3],\"type\":[\"chr\"],\"align\":[\"left\"]}],\"data\":[{\"1\":\"15\",\"2\":\"2\",\"3\":\"Preprocessor1_Model02\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ngrid_n_mtry_plot <- tune_reg_res %>%\n  collect_metrics() %>%\n  filter(.metric == \"roc_auc\") %>%\n  mutate(min_n = factor(min_n)) %>%\n  ggplot(aes(mtry, mean, color = min_n)) +\n  geom_line(alpha = 0.5, linewidth = 1.5) +\n  geom_point() +\n  labs(title = \"Tune AUC by min_n and mtry\",\n       y = \"AUC\")\ngrid_n_mtry_plot\n```\n\n::: {.cell-output-display}\n![](2024_02_10-SF_tree_classification_files/figure-html/unnamed-chunk-35-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nnonortho_gid_n_mtry_plot <- tune_reg_res %>%\n  collect_metrics() %>%\n  filter(.metric == \"roc_auc\") %>%\n  select(mean, min_n, mtry) %>%\n  ggplot(aes(x = min_n, y = mtry, color = mean)) +\n  geom_point(size = 6) +\n  scale_color_viridis_c(option = \"D\") +\n  labs(color = \"roc_auc\")\nnonortho_gid_n_mtry_plot\n```\n\n::: {.cell-output-display}\n![](2024_02_10-SF_tree_classification_files/figure-html/unnamed-chunk-36-1.png){width=672}\n:::\n:::\n\n\n\nBoth 2D plots show that the mtry = 15 and min_n = 2 hyperperamater maximize the AUC for this random forest model.\n\n# Finalize the model\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbest_auc <- tune_reg_res %>% select_best(metric = \"roc_auc\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nfinal_rf <- finalize_model(tune_spec, best_auc)\n\nfinal_rf\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRandom Forest Model Specification (classification)\n\nMain Arguments:\n  mtry = 15\n  trees = 1000\n  min_n = 2\n\nComputational engine: ranger \n```\n\n\n:::\n:::\n\n\n\n## Understand final model\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfinal_rf_vip_plot <- final_rf %>%\n  set_engine(\"ranger\", importance = \"permutation\") %>%\n  fit(legal_status ~ ., data = select(juiced, -tree_id)) %>%\n  vip(geom = \"point\")\nfinal_rf_vip_plot\n```\n\n::: {.cell-output-display}\n![](2024_02_10-SF_tree_classification_files/figure-html/unnamed-chunk-39-1.png){width=672}\n:::\n:::\n\n\n\nSatisfyingly, whether the caretaker is private makes a large difference, and latitude and longitide each make a large (and approximately equal) contribution.\n\n# Apply the final model\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfinal_wf <- workflow() %>%\n  add_recipe(tree_rec) %>%\n  add_model(final_rf)\n\nfinal_result <- final_wf %>% last_fit(trees_split)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nfinal_result %>% collect_metrics()\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\".metric\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\".estimator\"],\"name\":[2],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\".estimate\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\".config\"],\"name\":[4],\"type\":[\"chr\"],\"align\":[\"left\"]}],\"data\":[{\"1\":\"accuracy\",\"2\":\"binary\",\"3\":\"0.8475088\",\"4\":\"Preprocessor1_Model1\"},{\"1\":\"roc_auc\",\"2\":\"binary\",\"3\":\"0.9463316\",\"4\":\"Preprocessor1_Model1\"},{\"1\":\"brier_class\",\"2\":\"binary\",\"3\":\"0.1013336\",\"4\":\"Preprocessor1_Model1\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\n\nThis is a great result, because it means we did not over fit to the training data set. This is the AUC we can expect for new San Francisco Trees.\n\n## Make predictions\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfinal_result_ano <- final_result %>%\n  collect_predictions() %>%\n  mutate(\"correct_prediction\" = if_else(legal_status == `.pred_class`, \"Correct\", \"Incorrect\")) %>%\n  bind_cols(trees_test)\n\ntree_correct_loc_plot <- final_result_ano %>%\n  ggplot(aes(x = longitude, y = latitude, color = correct_prediction)) +\n  geom_point(alpha = 0.6, size = 0.25) +\n  labs(color = NULL, x = NULL, y = NULL) +\n  theme(panel.border = element_blank(),\n        legend.position = c(0.1, 0.9), legend.justification = c(0, .5)) +\n  scale_color_viridis_d(option = \"C\", begin = 0.1, end = 0.8) +\n  coord_equal()\ntree_correct_loc_plot\n```\n\n::: {.cell-output-display}\n![](2024_02_10-SF_tree_classification_files/figure-html/unnamed-chunk-42-1.png){width=672}\n:::\n:::\n\n\n\nThere is some degree of spatial bias in the incorrect assignment of legal status of the SF Trees.\n",
    "supporting": [
      "2024_02_10-SF_tree_classification_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\n<script src=\"../site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}
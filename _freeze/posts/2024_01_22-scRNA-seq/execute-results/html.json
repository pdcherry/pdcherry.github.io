{
  "hash": "924ca1a30aa5e821b4fbed17d8f82401",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"scRNA-seq Analysis: Messy Mouse Brain\"\nauthor: \"Patrick Cherry\"\ndate: \"2024-01-22\"\ncategories:\n  - code\n  - scRNA-seq\n  - RNA-seq\n#image: \"2024_01_03-liver_creative_commons.jpg\"\nexecute:\n  freeze: true\n---\n\n::: {.cell}\n\n:::\n\n\n## Introduction\nIn this data analysis exercise, I analyze a mysterious 10x single-cell RNA-seq data file, which consists of a collection of single cells from an unknown tissue with unknown cell types. This is standard 10x mouse single cell RNA-seq data output and we are curious what type of tissue and cells these are.\n\n### Objectives\n1. **Quality control and filtering.** Perform a basic QC of the data, explaining the rationale behind each step and the choice of parameters. How do the data look? What would you examine before moving forward to downstream analysis? Why?\n2. **Dimension reduction and visualization.** How can we make sense of all this data? Perform dimensional reduction with any methods at your choice, explaining the rationale behind the choice and caveats of other potential dimensional reduction methods. Plot these out in a suitable visualization(s).\n3. **Marker genes, clusters tissue, and cell types.** Identify genes and gene-sets that define the tissue and are differentially expressed. What tissue are we looking at? How many cell types are present, and what kind?\n\nCell states can be very dynamic within the same cell type. For some of the most abundant cell types, feel free to dig deeper on any observed heterogeneity and the biological underpinning.\n\n## Data description\n  - counts: matrix `matrix.mtx.gz`\n  - cell barcodes: `barcodes.tsv.gz`\n  - gene features: `features.tsv.gz`\n\n# Load data\n\n::: {.cell}\n\n```{.r .cell-code}\nkoaladata <- Read10X(data.dir = \"../../scRNA-seq/Koala/\")\n\nkoala <- CreateSeuratObject(counts = koaladata, project = \"koala\",\n                            min.cells = 3, min.features = 200)\n```\n:::\n\n\nThe following parameters are used:\n  - min.cells = 3: a feature must have appeared in at least 3 cell barcodes\n  - min.features = 200 a cell must have at least 200 features to be included\n\n# Data QC\nHere are some features in the metadata we can use for QC:\n\n::: {.cell}\n\n```{.r .cell-code}\nkoala@meta.data %>% colnames()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"orig.ident\"   \"nCount_RNA\"   \"nFeature_RNA\"\n```\n\n\n:::\n:::\n\n\nUnfortunately, a *\"percent.mt\"* vector is not available. I ordinarily would heavily QC on this information.\n\n## Features\n\n::: {.cell}\n\n```{.r .cell-code}\nVlnPlot(koala, features = c(\"nCount_RNA\", \"nFeature_RNA\"), pt.size = .1) +\n  geom_hline(yintercept = 1100) +\n  geom_hline(yintercept = 2000, linetype = \"dashed\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Default search for \"data\" layer in \"RNA\" assay yielded no results;\nutilizing \"counts\" layer instead.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](2024_01_22-scRNA-seq_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nkoala@meta.data$nCount_RNA %>%\n  as_tibble() %>%\n  ggplot(aes(x = \"koala\", y = value)) +\n  geom_violin(fill = \"pink\") + geom_jitter(size = 0.2, alpha = 0.5) +\n  labs(y = \"nCount_RNA\") +\n  theme_bw()\n```\n\n::: {.cell-output-display}\n![](2024_01_22-scRNA-seq_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\nThese are both skewed distributions, but RNA counts is more extremely skewed than features. Let's see how they scatter:\n\n::: {.cell}\n\n```{.r .cell-code}\nfeatures_by_counts_scatter_table <- bind_rows(koala$nCount_RNA, koala$nFeature_RNA) %>%\n  t() %>%\n  as_tibble() %>%\n  dplyr::rename(\"nCount_RNA\" = 1, \"nFeature_RNA\" = 2)\n\nfeatures_by_counts_scatter <- FeatureScatter(\n  koala, feature1 = \"nCount_RNA\", feature2 = \"nFeature_RNA\") #+\n  # stat_smooth(formula = \"y ~ x*log(x)\", method = glm) +\n  # stat_smooth(formula = \"y ~ log(x)\", method = glm, color = \"yellow\") +\n  # geom_smooth(formula = y ~ (Vm * x)/(K + x),\n  #             #data = features_by_counts_scatter_table,\n  #             method = \"nls\", color = \"green\", se = FALSE,\n  #             method.args = list(start = c(K = 10000, Vm = 6000)))\n\nfeatures_by_counts_scatter\n```\n\n::: {.cell-output-display}\n![](2024_01_22-scRNA-seq_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\n<!-- ```{r} -->\n<!-- summary(nls(formula = \"nFeature_RNA ~ (Vm * nCount_RNA)/(K + nCount_RNA)\", -->\n<!--             data = features_by_counts_scatter_table, -->\n<!--             start = c(K = 10000, Vm = 6000))) -->\n<!-- ``` -->\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfeatures_by_counts_scatter + scale_x_log10() + scale_y_log10()\n```\n\n::: {.cell-output-display}\n![](2024_01_22-scRNA-seq_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\nThe feature count appears to increase approximately logarithmicly with RNA count. The Pearson correlation is 0.95, but the non linearity indicates the relationship may be stronger than the correlation coefficient indicates. This observation is consistent with an RNA-seq experiment wherein there is a fixed number of potentially expressed RNAs and the number of detected transcripts begins to saturate the and approach the maximum number able to be detected.\n\nThe log-log transformed axis plot shows:\n - There are only a few cells/droplets with fewer than 300 RNA counts, which is great for an scRNA-seq experiment.\n - There is still some curve to the line, meaning the relationship is more trancendental (not simply a power-law, like polynomial).\n\n## Filter on feature count\nI am going to keep droplets (\"cells\") with 1100 features or fewer\n\n::: {.cell}\n\n```{.r .cell-code}\nkoala_filtered <- subset(koala, nFeature_RNA <= 1100)\n```\n:::\n\n\nLet's quickly confirm that the filtering changed the number of features throughout the Seurat object by using Seurat size commands to query the number of observations in the pre-filter and post-filter Seurat objects:\n\n::: {.cell}\n\n```{.r .cell-code}\nlength(koala$orig.ident); length(koala_filtered$orig.ident)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 4449\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 1410\n```\n\n\n:::\n:::\n\n\nThe feature count decreased from 4449 to 1410 upon filtering.\n\n(The `orig.ident` matrix within the Seurat object stores the cell metadata, and counting its number of entries can tell us number of unique observations.)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(koala_filtered$orig.ident)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nATGGCTGTCGATTTGA-1 GGTACAAAGTTCCTGC-1 ATTCAACCATAGGCGA-1 TCTCCTCGTCAATACG-1 \n             koala              koala              koala              koala \nTTTCTCACAGCACCAT-1 TTCCTTGAGGATCACT-1 \n             koala              koala \nLevels: koala\n```\n\n\n:::\n:::\n\n\n### Features\n\n::: {.cell}\n\n```{.r .cell-code}\nVlnPlot(koala_filtered, features = c(\"nCount_RNA\", \"nFeature_RNA\"), pt.size = .1)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Default search for \"data\" layer in \"RNA\" assay yielded no results;\nutilizing \"counts\" layer instead.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](2024_01_22-scRNA-seq_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n\nPost filtering, the RNA count plot looks more typical, with one major \"peak\" and a long tail. The features plot looks fairly evenly distributed because of the filtering cut off so close to the \"peak\" of the distribution, but I hypothesize it was necessary due to the hypothesized doublet peak right at 2000 features per droplet right near by.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfeatures_by_counts_scatter_table <- bind_rows(koala_filtered$nCount_RNA,\n                                              koala_filtered$nFeature_RNA) %>%\n  t() %>%\n  as_tibble() %>%\n  dplyr::rename(\"nCount_RNA\" = 1, \"nFeature_RNA\" = 2)\n\nfeatures_by_counts_scatter <- FeatureScatter(\n  koala_filtered, feature1 = \"nCount_RNA\", feature2 = \"nFeature_RNA\") #+\n  # stat_smooth(formula = \"y ~ x*log(x)\", method = glm) +\n  # stat_smooth(formula = \"y ~ log(x)\", method = glm, color = \"yellow\") +\n  # geom_smooth(formula = y ~ (Vm * x)/(K + x),\n  #             #data = features_by_counts_scatter_table,\n  #             method = \"nls\", color = \"green\", se = FALSE,\n  #             method.args = list(start = c(K = 10000, Vm = 6000)))\n\nfeatures_by_counts_scatter\n```\n\n::: {.cell-output-display}\n![](2024_01_22-scRNA-seq_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n\n# Initial Analysis\n## Normalization\n\n::: {.cell}\n\n```{.r .cell-code}\nkoala_norm <- NormalizeData(koala_filtered)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nNormalizing layer: counts\n```\n\n\n:::\n:::\n\n\nThe above is a log-normalization. This procedure divides each feature's abundance by the sample mean for that cell and takes the natural log (`log()` in `R`).\n\n\n::: {.cell}\n\n```{.r .cell-code}\nkoala_features <- FindVariableFeatures(koala_norm, selection.method = \"vst\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nFinding variable features for layer counts\n```\n\n\n:::\n:::\n\n\nThe vst method is the default feature selection method, but I'm just making it explicit, because a later (cluster identification) package refers to this fact. The variance stabilizing transformation makes the variances (standard deviations) more uniform and stops them from being related to the mean value within a group, which facilitates downstream linear regression-based techniques (*e.g.* PCA).\n\n## Feature Selection by PCA\n\n::: {.cell}\n\n```{.r .cell-code}\ntop_koala_features <- head(VariableFeatures(koala_features), 10)\n\ntop_koala_features_plot <- VariableFeaturePlot(koala_features) %>%\n  LabelPoints(points = top_koala_features, repel = TRUE)\n\ntop_koala_features_plot\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Transformation introduced infinite values in continuous x-axis\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](2024_01_22-scRNA-seq_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntop_koala_features\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"Nrxn1\"  \"Ank3\"   \"Nkain2\" \"Sntg1\"  \"Glul\"   \"Rspo3\"  \"Reln\"   \"Aoah\"  \n [9] \"Slc1a2\" \"Spp1\"  \n```\n\n\n:::\n:::\n\n\nThe most highly expressed gene is MEG3 (maternally expressed 3), a maternally expressed, imprinted long non-coding RNA (lncRNA). This likely means the tissue analyzed here is an egg cell, recently fertilized egg, or young embryo.\n\n## Scale\nPre-process to center at 0 and make sd = 1 prior to PCA.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngene_names <- rownames(koala_features)\nkoala_features <- ScaleData(koala_features, features = gene_names)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nCentering and scaling data matrix\n```\n\n\n:::\n:::\n\n\n## Run PCA\nLinear dimensionality reduction\n\nI'm going to go with all features and use the Elbow plot to determine which features are still important after this step.\n\n::: {.cell}\n\n```{.r .cell-code}\nkoala_pca <- RunPCA(koala_features, features = VariableFeatures(koala_features) )\n```\n:::\n\n\n### Visualize PCA Results\n\n::: {.cell}\n\n```{.r .cell-code}\nprint(koala_pca[[\"pca\"]], dims = 1:4)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nPC_ 1 \nPositive:  Ptprb, Lrmda, Prkg1, Plekhg1, Cemip2, Plpp1, Rasal2, Meis2, Plxnc1, Adam23 \n\t   Sptbn1, Stox2, Ets1, Mrc1, F8, Fyn, Syne1, Hecw2, Slc9a9, Fbxl7 \nNegative:  Pck1, Ppara, Ttc39c, Gm29966, G6pc, Abcc2, Mlxipl, Errfi1, Egfr, Gfra1 \n\t   Ahsg, Neat1, Trf, Slc27a2, Fam214a, Slc38a3, Slc7a2, Dpyd, Hc, Alas1 \nPC_ 2 \nPositive:  Nrxn1, Reln, Rbms3, Dcn, Ntm, Bmp5, Lhfp, Abcc9, Arhgap24, Nkain2 \n\t   Pde3a, Tln2, Ngf, Sox5, Pde1a, Robo2, Hand2os1, Hgf, Ccbe1, Agtr1a \nNegative:  Ptprb, Rasal2, Cemip2, Plpp1, Adam23, Stox2, Fyn, Mrc1, Kdr, F8 \n\t   Prickle1, Dab2, Adgrf5, Cyyr1, Plcb4, Hecw2, Maf, Arhgap31, Nrp1, Cd55 \nPC_ 3 \nPositive:  Slc8a1, Elmo1, Ptprc, Runx1, Cd5l, Clec4f, Dock2, Adgb, Entpd1, Dock10 \n\t   Aoah, Gm26740, Bank1, Adgre1, Arhgap15, Ikzf1, E230029C05Rik, Epsti1, Adgre4, Cd163 \nNegative:  Ptprb, Plekhg1, Cemip2, Meis2, Tshz2, Prkg1, Pard3b, Plpp1, Adgrl2, Plxnc1 \n\t   Stox2, Rasal2, F8, Prickle1, Kdr, Hecw2, Fbxl7, Sptbn1, Adam23, Syne1 \nPC_ 4 \nPositive:  Gm2682, Skap1, Themis, Cd226, Satb1, Kcnq5, Ms4a4b, Grap2, Dock2, Arhgap15 \n\t   Bcl11b, Ripor2, Inpp4b, Ipcef1, Il7r, Atp8a2, Lef1, Camk4, Cyfip2, Ikzf3 \nNegative:  Clec4f, Slc8a1, Frmd4b, Aoah, Slc40a1, Cd5l, Tcf7l2, Kcnk13, Tbxas1, Adgb \n\t   Myo9a, Hdac9, Entpd1, Pde7b, Cd86, Adgre1, Lgmn, Ksr2, Zeb2, E230029C05Rik \n```\n\n\n:::\n:::\n\n\nQuick print out all of the positive and negative features in the top four fitted principle components.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n(dim_reduc_plot <- VizDimLoadings(koala_pca, dims = 1:4, reduction = \"pca\") &\n  theme(axis.text.y = element_text(size = 5)))\n```\n\n::: {.cell-output-display}\n![](2024_01_22-scRNA-seq_files/figure-html/unnamed-chunk-19-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n(pc_1_2_scatterplot <- DimPlot(koala_pca, reduction = \"pca\"))\n```\n\n::: {.cell-output-display}\n![](2024_01_22-scRNA-seq_files/figure-html/unnamed-chunk-20-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nDimHeatmap(koala_pca, dims = 1:15)\n```\n\n::: {.cell-output-display}\n![](2024_01_22-scRNA-seq_files/figure-html/unnamed-chunk-21-1.png){width=672}\n:::\n:::\n\n\n## Determine the dimensionality of the dataset\nUsing jackstraw\n\n::: {.cell}\n\n```{.r .cell-code}\nkoala_js <- JackStraw(koala_pca, num.replicate = 100)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nkoala_js_score <- ScoreJackStraw(koala_js, dims = 1:20)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nJackStrawPlot(koala_js_score, dims = 1:20)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Removed 28212 rows containing missing values (`geom_point()`).\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](2024_01_22-scRNA-seq_files/figure-html/unnamed-chunk-24-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nElbowPlot(koala_js_score)\n```\n\n::: {.cell-output-display}\n![](2024_01_22-scRNA-seq_files/figure-html/unnamed-chunk-25-1.png){width=672}\n:::\n:::\n\n\nDeciding that the elbow occurs at 9 principle components, so should retain dimensions 1 to 10. However, due to the strange behavior of this dataset, I am going to run `FindClusters()` on all 20 principle components and see what happens. It may confirm my findings without intervention.\n\n# Clustering\n\n::: {.cell}\n\n```{.r .cell-code}\nkoala_clusters <- FindNeighbors(koala_pca, dims = 1:20)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nComputing nearest neighbor graph\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nComputing SNN\n```\n\n\n:::\n\n```{.r .cell-code}\nkoala_clusters <- FindClusters(koala_clusters, resolution = 0.5)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nModularity Optimizer version 1.3.0 by Ludo Waltman and Nees Jan van Eck\n\nNumber of nodes: 1410\nNumber of edges: 53206\n\nRunning Louvain algorithm...\nMaximum modularity in 10 random starts: 0.8554\nNumber of communities: 9\nElapsed time: 0 seconds\n```\n\n\n:::\n:::\n\n\nDespite retaining 20 dimensions in PCA, the Louvain cluster determination algorithm only identified 9 independently-clustering communities of droplets/cells. This is consistent with my by-eye reading of the elbow plot.\n\n# Run non-linear dimensional reduction (UMAP/tSNE)\n\n::: {.cell}\n\n```{.r .cell-code}\nkoala_umap <- RunUMAP(koala_clusters, dims = 1:10)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: The default method for RunUMAP has changed from calling Python UMAP via reticulate to the R-native UWOT using the cosine metric\nTo use Python UMAP via reticulate, set umap.method to 'umap-learn' and metric to 'correlation'\nThis message will be shown once per session\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n23:49:50 UMAP embedding parameters a = 0.9922 b = 1.112\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nFound more than one class \"dist\" in cache; using the first, from namespace 'spam'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nAlso defined by 'BiocGenerics'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n23:49:50 Read 1410 rows and found 10 numeric columns\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n23:49:50 Using Annoy for neighbor search, n_neighbors = 30\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nFound more than one class \"dist\" in cache; using the first, from namespace 'spam'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nAlso defined by 'BiocGenerics'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n23:49:50 Building Annoy index with metric = cosine, n_trees = 50\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n0%   10   20   30   40   50   60   70   80   90   100%\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n[----|----|----|----|----|----|----|----|----|----|\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n**************************************************|\n23:49:50 Writing NN index file to temp file /var/folders/11/sfzn5hhx2995d534f55tvzd40000gn/T//RtmpGrv29G/file1d6c46cda1fd\n23:49:50 Searching Annoy index using 1 thread, search_k = 3000\n23:49:50 Annoy recall = 100%\n23:49:51 Commencing smooth kNN distance calibration using 1 thread with target n_neighbors = 30\n23:49:51 Initializing from normalized Laplacian + noise (using RSpectra)\n23:49:51 Commencing optimization for 500 epochs, with 55346 positive edges\n23:49:52 Optimization finished\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n(koala_umap_plot <- DimPlot(koala_umap, reduction = 'umap'))\n```\n\n::: {.cell-output-display}\n![](2024_01_22-scRNA-seq_files/figure-html/unnamed-chunk-28-1.png){width=672}\n:::\n:::\n\n\n\n\n## Identify cluster biomarkers\n### Cluster 3\n\n::: {.cell}\n\n```{.r .cell-code}\nkoala_umap_cluster_4 <- FindMarkers(koala_umap, ident.1 = 4, min.pct = 0.25)\nhead(koala_umap_cluster_4, n = 10)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n               p_val avg_log2FC pct.1 pct.2    p_val_adj\nmt-Co2  7.527182e-31  1.2245951 0.985 0.670 1.311687e-26\nMalat1  1.723282e-29 -0.7632667 1.000 0.999 3.002992e-25\nmt-Co1  5.977587e-27  1.1122765 0.971 0.790 1.041654e-22\nGm42418 3.151082e-26  0.5404391 1.000 1.000 5.491075e-22\nCamk1d  3.573460e-26  0.8369697 0.993 0.950 6.227112e-22\nCmss1   5.424007e-26  0.8626727 0.993 0.932 9.451874e-22\nApoe    6.872890e-26  1.2087947 0.919 0.635 1.197670e-21\nmt-Nd2  8.808615e-25  1.2449740 0.897 0.524 1.534989e-20\nStab2   1.176373e-24  0.8467994 0.875 0.327 2.049947e-20\nmt-Atp6 1.815371e-24  1.1416188 0.949 0.667 3.163465e-20\n```\n\n\n:::\n\n```{.r .cell-code}\n# find all markers distinguishing cluster 5 from clusters 0 through 3\nkoala_umap_cluster_4_diff <- FindMarkers(koala_umap, ident.1 = 4, ident.2 = 0:3, min.pct = 0.25)\nhead(koala_umap_cluster_4_diff, n = 10)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n               p_val avg_log2FC pct.1 pct.2    p_val_adj\nmt-Co2  9.312486e-27  1.1041138 0.985 0.678 1.622794e-22\nMalat1  2.704755e-26 -0.7462688 1.000 0.999 4.713307e-22\nGm42418 3.811073e-26  0.5477534 1.000 1.000 6.641176e-22\nCamk1d  1.292259e-25  0.8488007 0.993 0.945 2.251891e-21\nApoe    9.025020e-25  1.1895949 0.919 0.622 1.572700e-20\nCmss1   2.670717e-24  0.8297866 0.993 0.925 4.653991e-20\nmt-Co1  7.586908e-23  0.9905739 0.971 0.803 1.322095e-18\nLars2   1.597419e-22  0.8533974 1.000 0.832 2.783662e-18\nmt-Atp6 2.901863e-20  0.9995626 0.949 0.680 5.056787e-16\nmt-Nd2  3.537213e-20  1.0947916 0.897 0.557 6.163948e-16\n```\n\n\n:::\n:::\n\n\n### All marker analysis\n\n::: {.cell}\n\n```{.r .cell-code}\n# find markers for every cluster compared to all other cells, keep only the positive ones\nkoala_umap_markers <- FindAllMarkers(koala_umap, only.pos = TRUE, min.pct = 0.25, logfc.threshold = 0.25)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nCalculating cluster 0\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nCalculating cluster 1\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nCalculating cluster 2\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nCalculating cluster 3\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nCalculating cluster 4\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nCalculating cluster 5\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nCalculating cluster 6\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nCalculating cluster 7\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nCalculating cluster 8\n```\n\n\n:::\n\n```{.r .cell-code}\nkoala_umap_markers_10_per_cluster <- koala_umap_markers %>%\n  group_by(cluster) %>%\n  slice_max(n = 10, order_by = avg_log2FC)\nkoala_umap_markers_10_per_cluster\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 90 × 7\n# Groups:   cluster [9]\n       p_val avg_log2FC pct.1 pct.2 p_val_adj cluster gene    \n       <dbl>      <dbl> <dbl> <dbl>     <dbl> <fct>   <chr>   \n 1 6.94e- 80       3.90 0.488 0.066 1.21e- 75 0       Bmp6    \n 2 2.11e- 46       3.86 0.281 0.03  3.68e- 42 0       Col13a1 \n 3 8.78e- 66       3.67 0.406 0.052 1.53e- 61 0       Galnt18 \n 4 1.10e-126       3.61 0.73  0.113 1.93e-122 0       Adam23  \n 5 2.37e- 48       3.60 0.313 0.04  4.13e- 44 0       Dnase1l3\n 6 5.07e- 46       3.56 0.294 0.035 8.83e- 42 0       Srgap1  \n 7 6.73e- 42       3.52 0.283 0.039 1.17e- 37 0       Clec4g  \n 8 6.99e-172       3.49 0.929 0.186 1.22e-167 0       Stab2   \n 9 4.34e- 77       3.40 0.488 0.069 7.57e- 73 0       Rasgrp3 \n10 4.35e- 46       3.34 0.322 0.048 7.59e- 42 0       Gm15675 \n# ℹ 80 more rows\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nkoala_umap_markers_10_per_nest <- koala_umap_markers_10_per_cluster %>%\n  dplyr::select(gene) %>%\n  nest() %>%\n  mutate(data = as.list(map(data, ~.x[[1]] )))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nAdding missing grouping variables: `cluster`\n```\n\n\n:::\n:::\n\n\n### Set up function for all\n\n::: {.cell}\n\n```{.r .cell-code}\ngo_query_fun <- function(gene_name_vector){\n  go_result <- gost(query = gene_name_vector,\n                    organism = \"mmusculus\", ordered_query = FALSE, \n                    multi_query = FALSE, significant = TRUE, exclude_iea = FALSE, \n                    measure_underrepresentation = FALSE, evcodes = FALSE, \n                    user_threshold = 0.05, correction_method = \"fdr\", \n                    domain_scope = \"annotated\", custom_bg = NULL, \n                    numeric_ns = \"\", sources = \"GO:MF\", as_short_link = FALSE)\n  \n  return(go_result)\n}\n```\n:::\n\n\n### Run the functon in df env\n\n::: {.cell}\n\n```{.r .cell-code}\nkoala_umap_markers_10_per_nest_go_ano <- koala_umap_markers_10_per_nest %>% \n  mutate(\"go_table\" = map(data, go_query_fun))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nNo results to show\nPlease make sure that the organism is correct or set significant = FALSE\nNo results to show\nPlease make sure that the organism is correct or set significant = FALSE\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nkoala_umap_markers_10_go_df <- koala_umap_markers_10_per_nest_go_ano %>%\n  unnest(go_table) %>%\n  filter(row_number() %% 2 != 0) %>%\n  unnest(go_table) %>%\n  relocate(term_name, .after = cluster) %>%\n  arrange(cluster, p_value) %>%\n  select(!c(\"data\", \"query\", \"significant\"))\nhead(koala_umap_markers_10_go_df)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 13\n# Groups:   cluster [1]\n  cluster term_name     p_value term_size query_size intersection_size precision\n  <fct>   <chr>           <dbl>     <int>      <int>             <int>     <dbl>\n1 0       virus corece…  0.0317         1         10                 1       0.1\n2 0       polysacchari…  0.0453        26         10                 1       0.1\n3 0       protein-lipi…  0.0453        30         10                 1       0.1\n4 0       lipoprotein …  0.0453        30         10                 1       0.1\n5 0       BMP receptor…  0.0453        14         10                 1       0.1\n6 0       transmembran…  0.0453        21         10                 1       0.1\n# ℹ 6 more variables: recall <dbl>, term_id <chr>, source <chr>,\n#   effective_domain_size <int>, source_order <int>, parents <list>\n```\n\n\n:::\n:::\n\n\n\n\n### All marker analysis\nwithout requiring uniqueness\n\nLet's run the analysis without requiring Variable genes be uniquely upregulated or downregulated in each cluster.\n\n::: {.cell}\n\n```{.r .cell-code}\n# find markers for every cluster, keep only the positive ones\nkoala_umap_markers <- FindAllMarkers(koala_umap, only.pos = FALSE, min.pct = 0.25, logfc.threshold = 0.25)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nCalculating cluster 0\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nCalculating cluster 1\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nCalculating cluster 2\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nCalculating cluster 3\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nCalculating cluster 4\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nCalculating cluster 5\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nCalculating cluster 6\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nCalculating cluster 7\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nCalculating cluster 8\n```\n\n\n:::\n\n```{.r .cell-code}\nkoala_umap_markers_10_per_cluster <- koala_umap_markers %>%\n  group_by(cluster) %>%\n  slice_max(n = 10, order_by = avg_log2FC)\nkoala_umap_markers_10_per_cluster\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 90 × 7\n# Groups:   cluster [9]\n       p_val avg_log2FC pct.1 pct.2 p_val_adj cluster gene    \n       <dbl>      <dbl> <dbl> <dbl>     <dbl> <fct>   <chr>   \n 1 6.94e- 80       3.90 0.488 0.066 1.21e- 75 0       Bmp6    \n 2 2.11e- 46       3.86 0.281 0.03  3.68e- 42 0       Col13a1 \n 3 8.78e- 66       3.67 0.406 0.052 1.53e- 61 0       Galnt18 \n 4 1.10e-126       3.61 0.73  0.113 1.93e-122 0       Adam23  \n 5 2.37e- 48       3.60 0.313 0.04  4.13e- 44 0       Dnase1l3\n 6 5.07e- 46       3.56 0.294 0.035 8.83e- 42 0       Srgap1  \n 7 6.73e- 42       3.52 0.283 0.039 1.17e- 37 0       Clec4g  \n 8 6.99e-172       3.49 0.929 0.186 1.22e-167 0       Stab2   \n 9 4.34e- 77       3.40 0.488 0.069 7.57e- 73 0       Rasgrp3 \n10 4.35e- 46       3.34 0.322 0.048 7.59e- 42 0       Gm15675 \n# ℹ 80 more rows\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nkoala_umap_markers_10_per_nest <- koala_umap_markers_10_per_cluster %>%\n  dplyr::select(gene) %>%\n  nest() %>%\n  mutate(data = as.list(map(data, ~.x[[1]] )))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nAdding missing grouping variables: `cluster`\n```\n\n\n:::\n:::\n\n\n### Run the functon in df env\n\n::: {.cell}\n\n```{.r .cell-code}\nkoala_umap_markers_10_per_nest_go_ano <- koala_umap_markers_10_per_nest %>% \n  mutate(\"go_table\" = map(data, go_query_fun))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nNo results to show\nPlease make sure that the organism is correct or set significant = FALSE\nNo results to show\nPlease make sure that the organism is correct or set significant = FALSE\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nkoala_umap_2way_markers_10_go_df <- koala_umap_markers_10_per_nest_go_ano %>%\n  unnest(go_table) %>%\n  filter(row_number() %% 2 != 0) %>%\n  unnest(go_table) %>%\n  relocate(term_name, .after = cluster) %>%\n  arrange(cluster, desc(p_value))\nhead(koala_umap_markers_10_go_df)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 13\n# Groups:   cluster [1]\n  cluster term_name     p_value term_size query_size intersection_size precision\n  <fct>   <chr>           <dbl>     <int>      <int>             <int>     <dbl>\n1 0       virus corece…  0.0317         1         10                 1       0.1\n2 0       polysacchari…  0.0453        26         10                 1       0.1\n3 0       protein-lipi…  0.0453        30         10                 1       0.1\n4 0       lipoprotein …  0.0453        30         10                 1       0.1\n5 0       BMP receptor…  0.0453        14         10                 1       0.1\n6 0       transmembran…  0.0453        21         10                 1       0.1\n# ℹ 6 more variables: recall <dbl>, term_id <chr>, source <chr>,\n#   effective_domain_size <int>, source_order <int>, parents <list>\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nwrite_csv(koala_umap_2way_markers_10_go_df, \"koala_umap_2way_markers_10_go_bdf.csv\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nkoala_umap_cluster_7 <- FindMarkers(koala_umap, ident.1 = 7, min.pct = 0.25)\nhead(koala_umap_cluster_7, n = 10)[0]\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\ndata frame with 0 columns and 10 rows\n```\n\n\n:::\n:::\n\n\n### Cluster 7\n\n::: {.cell}\n\n```{.r .cell-code}\nkoala_umap_cluster_unique_7 <- FindMarkers(koala_umap, ident.1 = 7, ident.2 = (1:8)[!(1:8) == 7], min.pct = 0.5)\nhead(as_tibble(koala_umap_cluster_unique_7, rownames = \"gene\"), n = 20)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 20 × 6\n   gene        p_val avg_log2FC pct.1 pct.2 p_val_adj\n   <chr>       <dbl>      <dbl> <dbl> <dbl>     <dbl>\n 1 Mecom    2.22e-75       7.23 0.5   0.011  3.86e-71\n 2 Jam2     5.96e-62       4.89 0.587 0.029  1.04e-57\n 3 Heg1     4.21e-42       4.27 0.652 0.071  7.33e-38\n 4 Cyyr1    3.32e-41       4.26 0.674 0.08   5.78e-37\n 5 Pecam1   1.37e-38       4.35 0.587 0.061  2.39e-34\n 6 Ptprb    1.13e-35       2.97 0.891 0.181  1.96e-31\n 7 Plcb4    5.14e-32       3.71 0.543 0.063  8.96e-28\n 8 Meis2    9.37e-32       3.24 0.717 0.122  1.63e-27\n 9 Cdh13    1.61e-30       4.63 0.5   0.058  2.81e-26\n10 Prex2    7.70e-28       3.09 0.761 0.176  1.34e-23\n11 Cemip2   2.88e-27       3.52 0.674 0.126  5.02e-23\n12 Crim1    2.23e-26       3.40 0.652 0.129  3.88e-22\n13 Adgrf5   3.18e-25       3.29 0.522 0.076  5.54e-21\n14 Calcrl   9.21e-21       2.85 0.609 0.132  1.61e-16\n15 Arhgap31 8.63e-20       3.32 0.5   0.092  1.50e-15\n16 Il6st    3.91e-18       2.71 0.652 0.183  6.82e-14\n17 Eng      6.85e-18       2.88 0.5   0.099  1.19e-13\n18 Ptprm    1.08e-15       2.31 0.587 0.152  1.88e-11\n19 Plekhg1  2.40e-15       2.48 0.5   0.113  4.18e-11\n20 Arl15    6.65e-14       2.69 0.717 0.325  1.16e- 9\n```\n\n\n:::\n:::\n\n\n  ## postsynaptic density protein 95 clustering \t6 \t2 \t.00 \t> 100 \t+ \t5.20E-06 \t8.18E-03\n  ## postsynaptic membrane organization \t31 \t2 \t.01 \t> 100 \t+ \t9.74E-05 \t3.00E-02\n  ## postsynaptic density organization \t28 \t2 \t.01 \t> 100 \t+ \t8.03E-05 \t2.81E-02\n  ## postsynaptic specialization organization \t34 \t2 \t.02 \t> 100 \t+ \t1.16E-04 \t3.45E-02\n  ## NMDA glutamate receptor clustering \t6 \t2 \t.00 \t> 100 \t+ \t5.20E-06 \t7.43E-03\n  ## neurotransmitter-gated ion channel clustering \t15 \t2 \t.01 \t> 100 \t+ \t2.52E-05 \t1.80E-02\n  ## positive regulation of synapse maturation \t10 \t2 \t.00 \t> 100 \t+ \t1.22E-05 \t1.38E-02\n  ## regulation of synapse maturation \t23 \t2 \t.01 \t> 100 \t+ \t5.54E-05 \t2.64E-02\n\nCluster 7 looks like it may be \n\n# Cell type assignments\n## Using garnett\n[Garnett](https:// cole-trapnell-lab.github.io/garnett) is a semi-supervised method of cell-type assignment for single cell data that is compatible with Seurat objects. It consists of four components. First, Garnett defines a markup language for specifying cell types using the genes that they specifically express. The markup language is hierarchical in that a cell type can have subtypes (for example, CD4+ and CD8+ are subsets of T cells). Second, Garnett includes a parser that processes the markup file together with a single-cell dataset, identifying representative cells bearing markers that unambiguously identify them as one of the cell types defined in the file. Third, Garnett trains a classifier that recognizes additional cells as belonging to each cell type based on their similarity to representative cells, similar to an approach that our groups recently developed for annotating a single-cell mouse atlas of chromatin accessibility. Garnett does not require that cells be organized into clusters, but it can optionally extend classifications to additional cells using either its own internal clustering routines or those of other tools. Finally, Garnett provides a method for applying a classifier trained on one dataset to rapidly annotate additional datasets.\n\n### Classifier\n[Garnett's directory of already-available classifiers](https://cole-trapnell-lab.github.io/garnett/classifiers/) indicates that one is available for Mouse Brain and spinal cord tissues, which I hypothesize is the primary content of this sample I am analyzed based on the gene ontology terms displayed and remarked upon in the previous section. The data are from Zeisel's and Linnarrson's *et al.* [\"Molecular Architecture of the Mouse Nervous System\"](https://www.sciencedirect.com/science/article/pii/S009286741830789X) and were trained and deposited by [Pliner & Trapnell *et al.*](https://www.nature.com/articles/s41592-019-0535-3).\n\n<!-- I will download the \"mmbrain\" RDS file and import it into R as a classifier—which doesn't require a import special function; all R object structed is saved when the generic `saveRDS()` export function is run. -->\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# download.file(\"https://cole-trapnell-lab.github.io/garnett/classifiers/mmBrain_20191017.RDS\",\n#               \"mmBrain_20191017.RDS\")\ndownload.file(\"https://cole-trapnell-lab.github.io/garnett/marker_files/mmBrain_markers.txt\",\n              \"mmBrain_markers.txt\")\n```\n:::\n\n\n### Prepare scRNA-seq data for garnett\n\n::: {.cell}\n\n```{.r .cell-code}\n# use Seurat to convert Seurat dimensionally reduced object to a CellDataSet object\nkoala_umap_cds <- as.CellDataSet(koala_umap)\n\n# generate size factors for normalization later\nkoala_umap_cds <- estimateSizeFactors(koala_umap_cds)\n```\n:::\n\n\n### Prepare trained classified from heirarchical marker gene file\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(org.Mm.eg.db)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nLoading required package: AnnotationDbi\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nLoading required package: IRanges\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nLoading required package: S4Vectors\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'S4Vectors'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following objects are masked from 'package:Matrix':\n\n    expand, unname\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following object is masked from 'package:tidyr':\n\n    expand\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following objects are masked from 'package:dplyr':\n\n    first, rename\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following object is masked from 'package:utils':\n\n    findMatches\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following objects are masked from 'package:base':\n\n    expand.grid, I, unname\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'IRanges'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following object is masked from 'package:sp':\n\n    %over%\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following object is masked from 'package:purrr':\n\n    reduce\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following objects are masked from 'package:dplyr':\n\n    collapse, desc, slice\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'AnnotationDbi'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following object is masked from 'package:dplyr':\n\n    select\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\n```\n\n\n:::\n\n```{.r .cell-code}\nmarker_file_path <- \"mmBrain_markers.txt\"\n\nmarker_check <- check_markers(koala_umap_cds, marker_file_path,\n                              db = org.Mm.eg.db,\n                              cds_gene_id_type = \"SYMBOL\",\n                              marker_file_gene_id_type = \"SYMBOL\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThere are 144 cell type definitions\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmarker_cell_types_analysis <- marker_check %>%\n  mutate(\"n_type\" = n(), .by = c(\"cell_type\", \"parent\")) %>%\n  mutate(\"n_cds\" = n(), .by = c(\"cell_type\", \"parent\", \"in_cds\")) %>%\n  arrange(desc(n_type)) %>%\n  dplyr::select(c(\"cell_type\", \"parent\", \"in_cds\", \"n_type\", \"n_cds\")) %>%\n  distinct()\nmarker_cell_types_analysis\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n                                                             cell_type\n1                                                              Neurons\n2                                                              Neurons\n3                    Cholinergic monoaminergic and peptidergic neurons\n4                    Cholinergic monoaminergic and peptidergic neurons\n5                                                             CNS glia\n6                                                             CNS glia\n7                                        Di- and mesencephalon neurons\n8                                        Di- and mesencephalon neurons\n9                                           Telencephalon interneurons\n10                                          Telencephalon interneurons\n11                               Cholinergic and monoaminergic neurons\n12                               Cholinergic and monoaminergic neurons\n13                                    Telencephalon projecting neurons\n14                                    Telencephalon projecting neurons\n15                                                Astroependymal cells\n16                                                Astroependymal cells\n17                                          Peripheral sensory neurons\n18                                          Peripheral sensory neurons\n19                               Telencephalon inhibitory interneurons\n20                               Telencephalon inhibitory interneurons\n21                            Di- and mesencephalon excitatory neurons\n22                            Di- and mesencephalon excitatory neurons\n23                                              Neural crest-like glia\n24                                              Neural crest-like glia\n25                                                 Peptidergic neurons\n26                                                 Peptidergic neurons\n27                                                    Oligodendrocytes\n28                                                    Oligodendrocytes\n29                                                      Vascular cells\n30                                                      Vascular cells\n31                         Telencephalon projecting excitatory neurons\n32                         Telencephalon projecting excitatory neurons\n33                            Di- and mesencephalon inhibitory neurons\n34                            Di- and mesencephalon inhibitory neurons\n35                                                          Astrocytes\n36                                                          Astrocytes\n37                          Peripheral sensory non-peptidergic neurons\n38                          Peripheral sensory non-peptidergic neurons\n39                                                     Enteric neurons\n40                                                     Enteric neurons\n41                                  Excitatory neurons cerebral cortex\n42                                  Excitatory neurons cerebral cortex\n43                                                 Spinal cord neurons\n44                                                 Spinal cord neurons\n45                         Telencephalon projecting inhibitory neurons\n46                         Telencephalon projecting inhibitory neurons\n47                                                        Enteric glia\n48                                                        Enteric glia\n49                                                     Immature neural\n50                                                     Immature neural\n51                              Peripheral sensory peptidergic neurons\n52                              Peripheral sensory peptidergic neurons\n53                                        Olfactory inhibitory neurons\n54                                        Olfactory inhibitory neurons\n55                                      Inhibitory neurons midbrain di\n56                                      Inhibitory neurons midbrain di\n57                                                Serotonergic neurons\n58                                                Serotonergic neurons\n59                                                        Immune cells\n60                                                        Immune cells\n61                                                 Sympathetic neurons\n62                                                 Sympathetic neurons\n63                                                   Hindbrain neurons\n64                                                   Hindbrain neurons\n65                                         Cholinergic enteric neurons\n66                                         Cholinergic enteric neurons\n67                                                  Cerebellum neurons\n68                                                  Cerebellum neurons\n69                                                           Microglia\n70                                                           Microglia\n71                                         Excitatory neurons midbrain\n72                                         Excitatory neurons midbrain\n73                                             Mature oligodendrocytes\n74                                             Mature oligodendrocytes\n75                                      Spinal cord excitatory neurons\n76                                      Spinal cord excitatory neurons\n77                                                     Ependymal cells\n78                                                     Ependymal cells\n79                                           Glutamatergic neuroblasts\n80                                           Glutamatergic neuroblasts\n81                                   Sympathetic noradrenergic neurons\n82                                   Sympathetic noradrenergic neurons\n83                                                           Pericytes\n84                                                           Pericytes\n85                            Peripheral sensory neurofilament neurons\n86                            Peripheral sensory neurofilament neurons\n87                                       Vascular leptomeningeal cells\n88                                       Vascular leptomeningeal cells\n89                                    Peptidergic neurons hypothalamus\n90                                    Peptidergic neurons hypothalamus\n91                                       Non-glutamatergic neuroblasts\n92                                       Non-glutamatergic neuroblasts\n93                                      Spinal cord inhibitory neurons\n94                                      Spinal cord inhibitory neurons\n95                     R-LM border Cck interneurons cortex/hippocampus\n96                                   Inhibitory neurons olfactory bulb\n97                                   Inhibitory neurons olfactory bulb\n98                                      Excitatory neurons spinal cord\n99                                    D1 medium spiny neurons striatum\n100                                   D1 medium spiny neurons striatum\n101                                    Myelin forming oligodendrocytes\n102                                    Myelin forming oligodendrocytes\n103                               Noradrenergic neurons of the medulla\n104                               Noradrenergic neurons of the medulla\n105                                          Nitrergic enteric neurons\n106                                          Nitrergic enteric neurons\n107                                  Excitatory neurons hindbrain hind\n108                                  Excitatory neurons hindbrain hind\n109                                              Neuroblasts olfactory\n110                                       Non-telencephalon astrocytes\n111                                       Non-telencephalon astrocytes\n112                                Inhibitory neurons spinal cord spin\n113                                                     Satellite glia\n114                                                     Satellite glia\n115                                      Newly formed oligodendrocytes\n116                                      Newly formed oligodendrocytes\n117                                      Dentate gyrus granule neurons\n118                                      Dentate gyrus granule neurons\n119 Sleep-active long-range projection interneurons cortex/hippocampus\n120 Sleep-active long-range projection interneurons cortex/hippocampus\n121                                    Inhibitory neurons hindbrain di\n122                                    Inhibitory neurons hindbrain di\n123                                       Vascular smooth muscle cells\n124                                       Vascular smooth muscle cells\n125                                    Excitatory neurons hypothalamus\n126                                                     Purkinje cells\n127                                                     Purkinje cells\n128                           Afferent nuclei of cranial nerves VI-XII\n129                           Afferent nuclei of cranial nerves VI-XII\n130                                           Perivascular macrophages\n131                                           Perivascular macrophages\n132                           Cholinergic neurons midbrain red nucleus\n133                                   Inhibitory neurons telencephalon\n134                     Non-border Cck interneurons cortex/hippocampus\n135                                  Central canal neurons spinal cord\n136                                           Choroid epithelial cells\n137                                    Enteric mesothelial fibroblasts\n138                           Dopaminergic neurons periaqueductal grey\n139                External plexiform layer interneuron olfactory bulb\n140                              Adrenergic cell groups of the medulla\n141                              Adrenergic cell groups of the medulla\n142                                        Excitatory neurons thalamus\n143                                        Excitatory neurons thalamus\n144              Interneuron-selective interneurons cortex/hippocampus\n145              Interneuron-selective interneurons cortex/hippocampus\n146                              Subcommissural organ hypendymal cells\n147                                           Telencephalon astrocytes\n148                                   D2 medium spiny neurons striatum\n149                                   D2 medium spiny neurons striatum\n150                                  Excitatory neurons hindbrain spin\n151                                      Granule neurons dentate gyrus\n152                                      Granule neurons dentate gyrus\n153                                    Sympathetic cholinergic neurons\n154                                    Sympathetic cholinergic neurons\n155                                   Committed oligodendrocytes cells\n156                                   Committed oligodendrocytes cells\n157                                        Olfactory ensheathing cells\n158                                        Olfactory ensheathing cells\n159                                       Excitatory neurons hindbrain\n160                                         Vascular endothelial cells\n161                               Inner horizontal cell olfactory bulb\n162                               Inner horizontal cell olfactory bulb\n163                         Subventricular zone radial glia-like cells\n164                         Subventricular zone radial glia-like cells\n165                                  Inhibitory neurons hindbrain hind\n166                                  Inhibitory neurons hindbrain hind\n167                                         Matrix D1 neurons striatum\n168                                                      Bergmann Glia\n169                 CGE-derived neurogliaform cells cortex/hippocampus\n170                                        Neuroblasts cerebellum glut\n171                                    Cajal-Retzius cells hippocampus\n172                               Dentate gyrus radial glia-like cells\n173              Glutamatergic projection neurons of the raphe nucleus\n174                                   Inhibitory neurons midbrain pept\n175                                  Granule neuroblasts dentate gyrus\n176                                      Cholinergic neurons hindbrain\n177                                       Patch D1/D2 neurons striatum\n178     Cholinergic neurons septal nucleus Meissnert and diagonal band\n179                                 Inhibitory neurons hypothalamus di\n180                                         Granule neurons cerebellum\n181                              Neuronal intermidate progenitor cells\n182                                               Olfactory astrocytes\n183                                         Neuroblasts olfactory bulb\n184                                   Oligodendrocytes precursor cells\n185                                        Inhibitory neurons thalamus\n186                                Inhibitory interneurons hippocampus\n187                             Granule neuroblasts dentate gyrus dent\n188                                        Inhibitory neurons midbrain\n189                                                      Schwann cells\n190                                             Neuroblasts cerebellum\n191                            Molecular layer interneurons cerebellum\n192                                           Neuroblast-like habenula\n193                              Oxytocin-producing cells hypothalamus\n194                                          Pmch neurons hypothalamus\n195                           Vasopressin-producing cells hypothalamus\n196         Ivy and MGE-derived neurogliaform cells cortex/hippocampus\n197                                                 Neuroblasts septum\n198                                     Inhibitory neurons spinal cord\n199                                 Excitatory neurons hippocampus CA1\n200                   Basket and bistratified cells cortex/hippocampus\n201                                 Excitatory neurons hippocampus CA3\n202                             Cholinergic interneurons telencephalon\n203                            Afferent nuclei of cranial nerves III-V\n204                                        Inhibitory neurons pallidum\n205                                   Inhibitory neurons thalamus tele\n206                                    Inhibitory neurons hypothalamus\n207             Dopaminergic periglomerular interneuron olfactory bulb\n208                     Hippocamposeptal projection cortex/hippocampus\n209                                       Trilaminar cells hippocampus\n210                              Dopaminergic neurons ventral midbrain\n211                             Granular layer interneurons cerebellum\n212                                      Axo-axonic cortex/hippocampus\n213                     Dorsal midbrain Myoc-expressing astrocyte-like\n214                                        Excitatory neurons amygdala\n215                              Orexin-producing neurons hypothalamus\n216                                  Inhibitory neurons septal nucleus\n217                                       Inhibitory neurons hindbrain\n218                                       Cholinergic neurons habenula\n                                               parent in_cds n_type n_cds\n1                                                root  FALSE    197   119\n2                                                root   TRUE    197    78\n3                                             Neurons  FALSE     42    26\n4                                             Neurons   TRUE     42    16\n5                                                root   TRUE     38    17\n6                                                root  FALSE     38    21\n7                                             Neurons  FALSE     31    19\n8                                             Neurons   TRUE     31    12\n9                                             Neurons  FALSE     28    18\n10                                            Neurons   TRUE     28    10\n11  Cholinergic monoaminergic and peptidergic neurons   TRUE     25    10\n12  Cholinergic monoaminergic and peptidergic neurons  FALSE     25    15\n13                                            Neurons  FALSE     25    14\n14                                            Neurons   TRUE     25    11\n15                                           CNS glia   TRUE     24    11\n16                                           CNS glia  FALSE     24    13\n17                                            Neurons  FALSE     23    14\n18                                            Neurons   TRUE     23     9\n19                         Telencephalon interneurons  FALSE     20    12\n20                         Telencephalon interneurons   TRUE     20     8\n21                      Di- and mesencephalon neurons  FALSE     18    14\n22                      Di- and mesencephalon neurons   TRUE     18     4\n23                                               root   TRUE     18    12\n24                                               root  FALSE     18     6\n25  Cholinergic monoaminergic and peptidergic neurons  FALSE     16    10\n26  Cholinergic monoaminergic and peptidergic neurons   TRUE     16     6\n27                                           CNS glia  FALSE     14     8\n28                                           CNS glia   TRUE     14     6\n29                                               root  FALSE     13     5\n30                                               root   TRUE     13     8\n31                   Telencephalon projecting neurons   TRUE     13     5\n32                   Telencephalon projecting neurons  FALSE     13     8\n33                      Di- and mesencephalon neurons   TRUE     13     8\n34                      Di- and mesencephalon neurons  FALSE     13     5\n35                               Astroependymal cells  FALSE     12     5\n36                               Astroependymal cells   TRUE     12     7\n37                         Peripheral sensory neurons  FALSE     11     9\n38                         Peripheral sensory neurons   TRUE     11     2\n39                                            Neurons  FALSE     10     7\n40                                            Neurons   TRUE     10     3\n41        Telencephalon projecting excitatory neurons   TRUE     10     4\n42        Telencephalon projecting excitatory neurons  FALSE     10     6\n43                                            Neurons  FALSE     10     5\n44                                            Neurons   TRUE     10     5\n45                   Telencephalon projecting neurons  FALSE      9     4\n46                   Telencephalon projecting neurons   TRUE      9     5\n47                             Neural crest-like glia  FALSE      9     3\n48                             Neural crest-like glia   TRUE      9     6\n49                                            Neurons  FALSE      9     5\n50                                            Neurons   TRUE      9     4\n51                         Peripheral sensory neurons  FALSE      8     3\n52                         Peripheral sensory neurons   TRUE      8     5\n53                         Telencephalon interneurons  FALSE      8     6\n54                         Telencephalon interneurons   TRUE      8     2\n55           Di- and mesencephalon inhibitory neurons  FALSE      8     3\n56           Di- and mesencephalon inhibitory neurons   TRUE      8     5\n57              Cholinergic and monoaminergic neurons   TRUE      8     5\n58              Cholinergic and monoaminergic neurons  FALSE      8     3\n59                                               root   TRUE      8     4\n60                                               root  FALSE      8     4\n61                                            Neurons  FALSE      7     3\n62                                            Neurons   TRUE      7     4\n63                                            Neurons  FALSE      7     5\n64                                            Neurons   TRUE      7     2\n65                                    Enteric neurons   TRUE      7     2\n66                                    Enteric neurons  FALSE      7     5\n67                                            Neurons  FALSE      7     5\n68                                            Neurons   TRUE      7     2\n69                                       Immune cells   TRUE      6     3\n70                                       Immune cells  FALSE      6     3\n71           Di- and mesencephalon excitatory neurons  FALSE      6     4\n72           Di- and mesencephalon excitatory neurons   TRUE      6     2\n73                                   Oligodendrocytes  FALSE      6     4\n74                                   Oligodendrocytes   TRUE      6     2\n75                                Spinal cord neurons  FALSE      5     3\n76                                Spinal cord neurons   TRUE      5     2\n77                               Astroependymal cells  FALSE      5     4\n78                               Astroependymal cells   TRUE      5     1\n79                                    Immature neural  FALSE      5     4\n80                                    Immature neural   TRUE      5     1\n81                                Sympathetic neurons   TRUE      5     3\n82                                Sympathetic neurons  FALSE      5     2\n83                                     Vascular cells  FALSE      4     1\n84                                     Vascular cells   TRUE      4     3\n85                         Peripheral sensory neurons  FALSE      4     2\n86                         Peripheral sensory neurons   TRUE      4     2\n87                                     Vascular cells   TRUE      4     3\n88                                     Vascular cells  FALSE      4     1\n89                                Peptidergic neurons  FALSE      4     3\n90                                Peptidergic neurons   TRUE      4     1\n91                                    Immature neural   TRUE      4     3\n92                                    Immature neural  FALSE      4     1\n93                                Spinal cord neurons   TRUE      4     1\n94                                Spinal cord neurons  FALSE      4     3\n95              Telencephalon inhibitory interneurons   TRUE      3     3\n96                       Olfactory inhibitory neurons   TRUE      3     1\n97                       Olfactory inhibitory neurons  FALSE      3     2\n98                     Spinal cord excitatory neurons  FALSE      3     3\n99        Telencephalon projecting inhibitory neurons   TRUE      3     2\n100       Telencephalon projecting inhibitory neurons  FALSE      3     1\n101                                  Oligodendrocytes   TRUE      3     1\n102                                  Oligodendrocytes  FALSE      3     2\n103             Cholinergic and monoaminergic neurons  FALSE      3     1\n104             Cholinergic and monoaminergic neurons   TRUE      3     2\n105                                   Enteric neurons  FALSE      3     2\n106                                   Enteric neurons   TRUE      3     1\n107                                 Hindbrain neurons  FALSE      3     2\n108                                 Hindbrain neurons   TRUE      3     1\n109                         Glutamatergic neuroblasts  FALSE      3     3\n110                                        Astrocytes  FALSE      3     1\n111                                        Astrocytes   TRUE      3     2\n112                    Spinal cord inhibitory neurons  FALSE      3     3\n113                            Neural crest-like glia  FALSE      3     2\n114                            Neural crest-like glia   TRUE      3     1\n115                                  Oligodendrocytes   TRUE      3     2\n116                                  Oligodendrocytes  FALSE      3     1\n117                  Telencephalon projecting neurons  FALSE      3     2\n118                  Telencephalon projecting neurons   TRUE      3     1\n119             Telencephalon inhibitory interneurons  FALSE      2     1\n120             Telencephalon inhibitory interneurons   TRUE      2     1\n121          Di- and mesencephalon inhibitory neurons   TRUE      2     1\n122          Di- and mesencephalon inhibitory neurons  FALSE      2     1\n123                                    Vascular cells  FALSE      2     1\n124                                    Vascular cells   TRUE      2     1\n125          Di- and mesencephalon excitatory neurons  FALSE      2     2\n126                                Cerebellum neurons  FALSE      2     1\n127                                Cerebellum neurons   TRUE      2     1\n128             Cholinergic and monoaminergic neurons  FALSE      2     1\n129             Cholinergic and monoaminergic neurons   TRUE      2     1\n130                                      Immune cells  FALSE      2     1\n131                                      Immune cells   TRUE      2     1\n132          Di- and mesencephalon excitatory neurons  FALSE      2     2\n133                               Peptidergic neurons  FALSE      2     2\n134             Telencephalon inhibitory interneurons  FALSE      2     2\n135                               Peptidergic neurons   TRUE      2     2\n136                              Astroependymal cells  FALSE      2     2\n137                            Neural crest-like glia   TRUE      2     2\n138             Cholinergic and monoaminergic neurons  FALSE      2     2\n139                      Olfactory inhibitory neurons  FALSE      2     2\n140             Cholinergic and monoaminergic neurons   TRUE      2     1\n141             Cholinergic and monoaminergic neurons  FALSE      2     1\n142          Di- and mesencephalon excitatory neurons   TRUE      2     1\n143          Di- and mesencephalon excitatory neurons  FALSE      2     1\n144             Telencephalon inhibitory interneurons   TRUE      2     1\n145             Telencephalon inhibitory interneurons  FALSE      2     1\n146                              Astroependymal cells   TRUE      2     2\n147                                        Astrocytes   TRUE      2     2\n148       Telencephalon projecting inhibitory neurons   TRUE      2     1\n149       Telencephalon projecting inhibitory neurons  FALSE      2     1\n150                    Spinal cord excitatory neurons   TRUE      2     2\n151                     Dentate gyrus granule neurons  FALSE      2     1\n152                     Dentate gyrus granule neurons   TRUE      2     1\n153                               Sympathetic neurons   TRUE      2     1\n154                               Sympathetic neurons  FALSE      2     1\n155                                  Oligodendrocytes  FALSE      2     1\n156                                  Oligodendrocytes   TRUE      2     1\n157                            Neural crest-like glia  FALSE      2     1\n158                            Neural crest-like glia   TRUE      2     1\n159          Di- and mesencephalon excitatory neurons  FALSE      2     2\n160                                    Vascular cells  FALSE      2     2\n161                      Olfactory inhibitory neurons  FALSE      2     1\n162                      Olfactory inhibitory neurons   TRUE      2     1\n163                              Astroependymal cells   TRUE      2     1\n164                              Astroependymal cells  FALSE      2     1\n165                                 Hindbrain neurons  FALSE      2     1\n166                                 Hindbrain neurons   TRUE      2     1\n167       Telencephalon projecting inhibitory neurons   TRUE      1     1\n168                                        Astrocytes   TRUE      1     1\n169             Telencephalon inhibitory interneurons  FALSE      1     1\n170                         Glutamatergic neuroblasts   TRUE      1     1\n171          Di- and mesencephalon excitatory neurons  FALSE      1     1\n172                              Astroependymal cells  FALSE      1     1\n173             Cholinergic and monoaminergic neurons  FALSE      1     1\n174                               Peptidergic neurons  FALSE      1     1\n175                     Non-glutamatergic neuroblasts  FALSE      1     1\n176                                 Hindbrain neurons  FALSE      1     1\n177       Telencephalon projecting inhibitory neurons   TRUE      1     1\n178             Cholinergic and monoaminergic neurons  FALSE      1     1\n179          Di- and mesencephalon inhibitory neurons   TRUE      1     1\n180                                Cerebellum neurons  FALSE      1     1\n181                     Non-glutamatergic neuroblasts   TRUE      1     1\n182                                        Astrocytes   TRUE      1     1\n183                     Non-glutamatergic neuroblasts   TRUE      1     1\n184                            Neural crest-like glia   TRUE      1     1\n185                               Peptidergic neurons   TRUE      1     1\n186             Telencephalon inhibitory interneurons   TRUE      1     1\n187                     Dentate gyrus granule neurons  FALSE      1     1\n188                                Cerebellum neurons  FALSE      1     1\n189                            Neural crest-like glia   TRUE      1     1\n190                                Cerebellum neurons  FALSE      1     1\n191                                Cerebellum neurons  FALSE      1     1\n192                     Non-glutamatergic neuroblasts   TRUE      1     1\n193                               Peptidergic neurons  FALSE      1     1\n194             Cholinergic and monoaminergic neurons  FALSE      1     1\n195                               Peptidergic neurons   TRUE      1     1\n196             Telencephalon inhibitory interneurons   TRUE      1     1\n197                         Glutamatergic neuroblasts  FALSE      1     1\n198                                 Hindbrain neurons  FALSE      1     1\n199       Telencephalon projecting excitatory neurons  FALSE      1     1\n200             Telencephalon inhibitory interneurons  FALSE      1     1\n201       Telencephalon projecting excitatory neurons  FALSE      1     1\n202             Cholinergic and monoaminergic neurons  FALSE      1     1\n203             Cholinergic and monoaminergic neurons  FALSE      1     1\n204          Di- and mesencephalon inhibitory neurons  FALSE      1     1\n205             Telencephalon inhibitory interneurons  FALSE      1     1\n206                               Peptidergic neurons  FALSE      1     1\n207                      Olfactory inhibitory neurons  FALSE      1     1\n208             Telencephalon inhibitory interneurons  FALSE      1     1\n209             Telencephalon inhibitory interneurons  FALSE      1     1\n210             Cholinergic and monoaminergic neurons  FALSE      1     1\n211                                Cerebellum neurons   TRUE      1     1\n212             Telencephalon inhibitory interneurons  FALSE      1     1\n213                                        Astrocytes  FALSE      1     1\n214       Telencephalon projecting excitatory neurons   TRUE      1     1\n215             Cholinergic and monoaminergic neurons  FALSE      1     1\n216                               Peptidergic neurons  FALSE      1     1\n217                    Spinal cord inhibitory neurons   TRUE      1     1\n218          Di- and mesencephalon excitatory neurons  FALSE      1     1\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nwrite_csv(marker_check_analysis, \"mmBrain_markers_marker_check_analysis.csv\")\n```\n:::\n\n\nMake a table showing percent of genes for each cell type sub-classification that are present so I can filter and subset the marker genes to decrease the complexity of the model.\n\n::: {.cell}\n\n```{.r .cell-code}\nmarker_cell_types_prefilter <- marker_cell_types_analysis %>%\n  dplyr::select(!n_type) %>%\n  pivot_wider(id_cols = c(\"cell_type\", \"parent\"), values_from = \"n_cds\",\n              names_from = \"in_cds\", names_glue = \"gene_present_{in_cds}\") %>%\n  mutate(\"percent_genes_present\" = gene_present_TRUE / (gene_present_TRUE + gene_present_FALSE)) %>%\n  relocate(gene_present_TRUE, percent_genes_present, .after = parent) %>%\n  arrange(desc(gene_present_TRUE), desc(percent_genes_present))\nhead(marker_cell_types_prefilter)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 5\n  cell_type    parent gene_present_TRUE percent_genes_present gene_present_FALSE\n  <chr>        <chr>              <int>                 <dbl>              <int>\n1 Neurons      root                  78                 0.396                119\n2 CNS glia     root                  17                 0.447                 21\n3 Cholinergic… Neuro…                16                 0.381                 26\n4 Neural cres… root                  12                 0.667                  6\n5 Di- and mes… Neuro…                12                 0.387                 19\n6 Astroependy… CNS g…                11                 0.458                 13\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmarker_cell_types_postfilter <- marker_cell_types_prefilter %>%\n  filter(parent == \"root\" | gene_present_TRUE > 8 | percent_genes_present > 0.49)\nhead(marker_cell_types_postfilter)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 5\n  cell_type    parent gene_present_TRUE percent_genes_present gene_present_FALSE\n  <chr>        <chr>              <int>                 <dbl>              <int>\n1 Neurons      root                  78                 0.396                119\n2 CNS glia     root                  17                 0.447                 21\n3 Cholinergic… Neuro…                16                 0.381                 26\n4 Neural cres… root                  12                 0.667                  6\n5 Di- and mes… Neuro…                12                 0.387                 19\n6 Astroependy… CNS g…                11                 0.458                 13\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmarker_df_filtered <- marker_check %>%\n  # filter for cell_types retained by filter line in \"postfilter\"\n  semi_join(marker_cell_types_postfilter, by = \"cell_type\")\nhead(marker_df_filtered)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  marker_gene            gene_id                                parent\n1       Crhbp ENSMUSG00000021680 Telencephalon inhibitory interneurons\n2       Tacr1 ENSMUSG00000030043 Telencephalon inhibitory interneurons\n3         Trh ENSMUSG00000005892                               Neurons\n4        Trdn ENSMUSG00000019787                               Neurons\n5      Nccrp1 ENSMUSG00000047586                               Neurons\n6        Dlx5 ENSMUSG00000029755                               Neurons\n                                                           cell_type in_cds\n1 Sleep-active long-range projection interneurons cortex/hippocampus  FALSE\n2 Sleep-active long-range projection interneurons cortex/hippocampus   TRUE\n3                                         Telencephalon interneurons  FALSE\n4                                         Telencephalon interneurons   TRUE\n5                                         Telencephalon interneurons  FALSE\n6                                         Telencephalon interneurons  FALSE\n  nominates total_nominated exclusion_dismisses inclusion_ambiguates\n1        NA              NA                  NA                   NA\n2         1               1                   1                    0\n3        NA              NA                  NA                   NA\n4         1             158                   1                    1\n5        NA              NA                  NA                   NA\n6        NA              NA                  NA                   NA\n        most_overlap ambiguity marker_score         summary\n1               <NA>        NA           NA      Not in CDS\n2               <NA>         0 1.000000e+02              Ok\n3               <NA>        NA           NA      Not in CDS\n4 Cerebellum neurons         1 6.266449e-03 High ambiguity?\n5               <NA>        NA           NA      Not in CDS\n6               <NA>        NA           NA      Not in CDS\n```\n\n\n:::\n\n```{.r .cell-code}\nmarker_df_filtered_orphans <- marker_df_filtered %>%\n  anti_join(., ., by = c(\"cell_type\" = \"parent\"))\nhead(marker_df_filtered_orphans)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  marker_gene            gene_id                                parent\n1       Crhbp ENSMUSG00000021680 Telencephalon inhibitory interneurons\n2       Tacr1 ENSMUSG00000030043 Telencephalon inhibitory interneurons\n3         Trh ENSMUSG00000005892                               Neurons\n4        Trdn ENSMUSG00000019787                               Neurons\n5      Nccrp1 ENSMUSG00000047586                               Neurons\n6        Dlx5 ENSMUSG00000029755                               Neurons\n                                                           cell_type in_cds\n1 Sleep-active long-range projection interneurons cortex/hippocampus  FALSE\n2 Sleep-active long-range projection interneurons cortex/hippocampus   TRUE\n3                                         Telencephalon interneurons  FALSE\n4                                         Telencephalon interneurons   TRUE\n5                                         Telencephalon interneurons  FALSE\n6                                         Telencephalon interneurons  FALSE\n  nominates total_nominated exclusion_dismisses inclusion_ambiguates\n1        NA              NA                  NA                   NA\n2         1               1                   1                    0\n3        NA              NA                  NA                   NA\n4         1             158                   1                    1\n5        NA              NA                  NA                   NA\n6        NA              NA                  NA                   NA\n        most_overlap ambiguity marker_score         summary\n1               <NA>        NA           NA      Not in CDS\n2               <NA>         0 1.000000e+02              Ok\n3               <NA>        NA           NA      Not in CDS\n4 Cerebellum neurons         1 6.266449e-03 High ambiguity?\n5               <NA>        NA           NA      Not in CDS\n6               <NA>        NA           NA      Not in CDS\n```\n\n\n:::\n\n```{.r .cell-code}\nmarker_df_filtered_orph_rem <-  anti_join(marker_df_filtered, marker_df_filtered_orphans, by = \"marker_gene\")\nhead(marker_df_filtered_orph_rem)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  marker_gene            gene_id  parent                  cell_type in_cds\n1      Gm7271               <NA> Neurons Peripheral sensory neurons  FALSE\n2     Fam19a4               <NA> Neurons Peripheral sensory neurons  FALSE\n3        Tlx3 ENSMUSG00000040610 Neurons Peripheral sensory neurons  FALSE\n4      Mrgprd ENSMUSG00000051207 Neurons Peripheral sensory neurons  FALSE\n5        Otoa ENSMUSG00000034990 Neurons Peripheral sensory neurons   TRUE\n6     Mrgpra3 ENSMUSG00000078698 Neurons Peripheral sensory neurons  FALSE\n  nominates total_nominated exclusion_dismisses inclusion_ambiguates\n1        NA              NA                  NA                   NA\n2        NA              NA                  NA                   NA\n3        NA              NA                  NA                   NA\n4        NA              NA                  NA                   NA\n5         1             275                   0                    0\n6        NA              NA                  NA                   NA\n  most_overlap ambiguity marker_score    summary\n1         <NA>        NA           NA  Not in db\n2         <NA>        NA           NA  Not in db\n3         <NA>        NA           NA Not in CDS\n4         <NA>        NA           NA Not in CDS\n5         <NA>         0    0.3636364         Ok\n6         <NA>        NA           NA Not in CDS\n```\n\n\n:::\n:::\n\n\nI also have to head off an error about parent cell types referred to in the parent field of other entries not being present by doing a recursive semi_join. See the error copied below:\n`Error in check_markers(koala_umap_cds, marker_file_path, db = org.Mm.eg.db, :\nSubtype Telencephalon inhibitory interneurons is not defined in marker file.Subtype Cerebellum neurons is not defined in marker file.Subtype root is not defined in marker file.Subtype Di- and mesencephalon excitatory neurons is not defined in marker file.Subtype Dentate gyrus granule neurons is not defined in marker file.Subtype Oligodendrocytes is not defined in marker file.Subtype Immature neural is not defined in marker file.Subtype Olfactory inhibitory neurons is not defined in marker file.Subtype Hindbrain neurons is not defined in marker file.`\n\n**2023-05-29 14:36 PM** __Where I left off: Marker checks are writing to disk and are parsing. But missing parents (orphaned cell types) are still in the marker .txt specs, and I have misplaced the dataframes that actually contain the gene info.__\n\n#### write new marker file to disk\nThe basic structure of the Garnett marker file is a series of entries, each describing elements of a cell type. After the cell name, each additional line will be a descriptor, which begins with a keyword, followed by a colon (':'). After the colon, a series of specifications can be added, separated by commas (','). Descriptors may spill onto following lines so long as you do not split a specification across multiple lines (i.e. if breaking up a long descriptor across multiple lines, all but the last line should end with a comma). Each new descriptor should begin on a new line. A generic cell type entry looks like this:\n\n“' > cell type name descriptor: spec1, spec2, spec3, spec4 descriptor2: spec1 “'\n\n#### define new writer function\nThe joy of for loops\n\n::: {.cell}\n\n```{.r .cell-code}\nwrite_garnett_marker_file <- function(marker_df, filename){\n  \n  marker_df <- marker_df %>%\n  dplyr::select(cell_type, parent, marker_gene) %>%\n  summarize(\"marker_gene\" = paste(marker_gene, collapse = \", \"),\n            .by = c(cell_type, parent))\n  \n  marker_file_lines = c()\n  for (rowNum in 1:nrow(marker_df)){\n    marker_file_lines = c(marker_file_lines, as.character(paste0(\">\", marker_df[rowNum, \"cell_type\"], sep = \"\")))\n    \n      if(is.na(marker_df[rowNum, \"parent\"])) {\n        \n      } else if(marker_df[rowNum, \"parent\"] == \"root\") {\n        \n      } else if(!is.na(marker_df[rowNum, \"parent\"])) {\n        marker_file_lines = c(marker_file_lines, as.character(paste(\"subtype of:\", marker_df[rowNum, \"parent\"], sep = \" \")))\n      }\n    \n    marker_file_lines = c(marker_file_lines, as.character(paste(\"expressed:\", marker_df[rowNum, \"marker_gene\"], sep = \" \")))\n    marker_file_lines = c(marker_file_lines, \"\")\n  }\n  \n  fileConn <- file(filename)\n  writeLines(marker_file_lines, fileConn)\n  close(fileConn)\n}\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nwrite_garnett_marker_file(marker_df_filtered_orph_rem, \"mmBrain_markers_filtered.txt\")\n```\n:::\n\n\n### Prepare trained classified from heirarchical marker gene file\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(org.Mm.eg.db)\n\nmarker_file_path <- \"mmBrain_markers_filtered.txt\"\n\nmarker_check <- check_markers(koala_umap_cds, marker_file_path,\n                              db = org.Mm.eg.db,\n                              cds_gene_id_type = \"SYMBOL\",\n                              marker_file_gene_id_type = \"SYMBOL\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThere are 13 cell type definitions\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmarker_check_plot <- plot_markers(marker_check)\n```\n:::\n\n\nThe marker plot is too large to be viewed in R or in the Rmarkdown output. (It errors). Please view \"mmBrain_markers_check_plot.png\" in the google drive filesystem. It is exported with manually-found dimensions that work for display and do not error.\n\n::: {.cell}\n\n```{.r .cell-code}\nggsave(\"mmBrain_markers_check_plot.png\", marker_check_plot, width = 10, height = 20, limitsize = FALSE)\n```\n:::\n\n\nBasically, this is a really big model.\n\n### Train the classifier\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# import previoously trained classifier\nmmBrain_classifier <- readRDS(\"../../pdcherry_github_data/scRNAseq/2023_06_03-13_cell_def_mmBrain_classifier.Rds\")\n```\n:::\n\n\n### Perform garnett classify\n\n::: {.cell}\n\n```{.r .cell-code}\nkoala_features_classified <- classify_cells(koala_umap_cds, mmBrain_classifier,\n                                            db = org.Mm.eg.db,\n                                            cluster_extend = TRUE,\n                                            cds_gene_id_type = \"SYMBOL\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThis graph was created by an old(er) igraph version.\n  Call upgrade_graph() on it to use with the current igraph version\n  For now we convert it on the fly...\n```\n\n\n:::\n\n```{.r .cell-code}\nkoala_features_classified\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nCellDataSet (storageMode: environment)\nassayData: 17426 features, 1410 samples \n  element names: exprs \nprotocolData: none\nphenoData\n  sampleNames: ATGGCTGTCGATTTGA-1 GGTACAAAGTTCCTGC-1 ...\n    TCGCCCATCTAATTGG-1 (1410 total)\n  varLabels: orig.ident nCount_RNA ... cluster_ext_type (9 total)\n  varMetadata: labelDescription\nfeatureData\n  featureNames: Xkr4 Rp1 ... AC149090.1 (17426 total)\n  fvarLabels: vf_vst_counts_mean vf_vst_counts_variance ...\n    gene_short_name (9 total)\n  fvarMetadata: labelDescription\nexperimentData: use 'experimentData(object)'\nAnnotation:  \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsuppressPackageStartupMessages(library(tidyverse))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\npData(koala_features_classified) %>%\n  count(cell_type)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n                          cell_type   n\n1                        Astrocytes  89\n2              Astroependymal cells  33\n3                          CNS glia 111\n4     Di- and mesencephalon neurons  35\n5            Neural crest-like glia  34\n6                           Neurons  83\n7        Peripheral sensory neurons  57\n8  Telencephalon projecting neurons 126\n9                           Unknown 830\n10                   Vascular cells  12\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\npData(koala_features_classified) %>%\n  count(cluster_ext_type)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n                   cluster_ext_type   n\n1                        Astrocytes 645\n2              Astroependymal cells  16\n3                          CNS glia  46\n4     Di- and mesencephalon neurons  22\n5            Neural crest-like glia  32\n6                           Neurons  35\n7        Peripheral sensory neurons  17\n8  Telencephalon projecting neurons  96\n9                           Unknown 490\n10                   Vascular cells  11\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nkoala_features_classified_df <- inner_join(\n  rownames_to_column(as.data.frame(pData(koala_features_classified))),\n  rownames_to_column(as.data.frame(koala_features_classified@reducedDimS)),\n  by = \"rowname\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nclassified_umap_plot <- ggplot(koala_features_classified_df) +\n  geom_point(aes(x = umap_1, y = umap_2, color = cluster_ext_type), alpha = 0.5) +\n  theme_bw() +\n  scale_color_viridis_d(option = \"H\")\nclassified_umap_plot\n```\n\n::: {.cell-output-display}\n![](2024_01_22-scRNA-seq_files/figure-html/unnamed-chunk-65-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nclassified_umap_drop_unknowns_plot <-\n  koala_features_classified_df %>%\n  filter(cluster_ext_type != \"Unknown\") %>%\n  ggplot() +\n  geom_point(aes(x = umap_1, y = umap_2, color = cluster_ext_type), alpha = 0.5) +\n  theme_bw() +\n  scale_color_viridis_d(option = \"H\")\nclassified_umap_drop_unknowns_plot\n```\n\n::: {.cell-output-display}\n![](2024_01_22-scRNA-seq_files/figure-html/unnamed-chunk-66-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nclassified_umap_drop_unknowns_plot <-\n  koala_features_classified_df %>%\n  filter(cell_type != \"Unknown\") %>%\n  ggplot() +\n  geom_point(aes(x = umap_1, y = umap_2, color = cell_type), alpha = 0.5) +\n  theme_bw() +\n  scale_color_viridis_d(option = \"H\")\nclassified_umap_drop_unknowns_plot\n```\n\n::: {.cell-output-display}\n![](2024_01_22-scRNA-seq_files/figure-html/unnamed-chunk-67-1.png){width=672}\n:::\n:::\n\n\n\n\n\n\n\n\n## HTP GO Anlaysis for all 10 clusters\n\n::: {.cell}\n\n```{.r .cell-code}\nkoala_umap_markers_for_GO <- koala_umap_markers %>%\n  group_by(cluster) %>% slice_max(n = 20, order_by = avg_log2FC)\nkoala_umap_markers_for_GO %>% ungroup() %>% dplyr::select(\"gene\") %>% slice_tail(n = 167) %>% dput()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nstructure(list(gene = c(\"Plpp1\", \"Kdr\", \"Flt4\", \"F8\", \"Fgd5\", \n\"Fcgr2b\", \"Adgrl4\", \"Gm35696\", \"Uroc1\", \"Cxcl1\", \"Tedc2\", \"Hal\", \n\"Grm8\", \"Gldc\", \"Hsd17b13\", \"Gcnt2\", \"BC024386\", \"Itih3\", \"Noct\", \n\"Ftcd\", \"Osgin1\", \"Amdhd1\", \"Gls2\", \"Ctcflos\", \"Gm50136\", \"Gramd1c\", \n\"Serpina10\", \"Vtn\", \"mt-Co1\", \"mt-Nd4\", \"Gm48099\", \"mt-Co2\", \n\"mt-Nd1\", \"mt-Cytb\", \"Serpina1c\", \"Il31ra\", \"Ces1c\", \"Lars2\", \n\"mt-Nd3\", \"mt-Atp6\", \"mt-Nd2\", \"Serpinf2\", \"Cmss1\", \"Cdk8\", \"Gm15564\", \n\"mt-Co3\", \"Serpina1e\", \"Nr1h5\", \"Mamdc2\", \"Arvcf\", \"Ngf\", \"Ank3\", \n\"Gpc6\", \"Pde3a\", \"Cacna2d1\", \"Bmp5\", \"Nrxn1\", \"Gucy1a1\", \"Fendrr\", \n\"Abcc9\", \"Ntm\", \"Reln\", \"Pde1a\", \"Col5a1\", \"Carmn\", \"Nkain2\", \n\"Lhfp\", \"Mup17\", \"mt-Cytb\", \"Il31ra\", \"mt-Atp8\", \"mt-Nd2\", \"mt-Nd4\", \n\"mt-Co2\", \"Apoe\", \"Ppfia2\", \"mt-Co3\", \"mt-Atp6\", \"Pgrmc1\", \"Plxnc1\", \n\"mt-Co1\", \"Dab2\", \"Erg\", \"mt-Nd5\", \"Chchd2\", \"Serpina3k\", \"Fcgr2b\", \n\"Cyp2c38\", \"Gm13775\", \"Lhpp\", \"Slc1a2\", \"Rnf43\", \"Prodh\", \"Atf3\", \n\"Glt1d1\", \"Cyp3a59\", \"Serpina6\", \"Glul\", \"Tox\", \"Slc16a10\", \"Klb\", \n\"Slc25a25\", \"Irs1\", \"Tenm3\", \"Kank1\", \"Nr0b2\", \"Hnf4aos\", \"Adgre4\", \n\"Fam129a\", \"Cd5l\", \"Adgb\", \"Bank1\", \"E230029C05Rik\", \"Clec4f\", \n\"Slc8a1\", \"Entpd1\", \"Abr\", \"Fyb\", \"Gm26740\", \"Hdac9\", \"Madd\", \n\"Unc93b1\", \"Elmo1\", \"Runx1\", \"Ctsc\", \"Slc40a1\", \"Cadm1\", \"Nuak1\", \n\"Wnt9b\", \"Vwf\", \"Dnm3\", \"Mecom\", \"Eln\", \"Thsd7a\", \"Rspo3\", \"Pgm5\", \n\"Unc13b\", \"Ptpn14\", \"Fbn1\", \"Zfp521\", \"Jam2\", \"Heg1\", \"Pecam1\", \n\"Plxna4\", \"March3\", \"Myo1d\", \"Tbc1d4\", \"Bcl11b\", \"Atp8a2\", \"Gm2682\", \n\"Themis\", \"Cd226\", \"Itk\", \"Skap1\", \"Ms4a4b\", \"Grap2\", \"Satb1\", \n\"Kcnq5\", \"Ptpn22\", \"Pde7a\", \"Arhgap15\", \"Dock2\", \"Inpp4b\", \"Epsti1\", \n\"Itgal\", \"Pik3cd\", \"Ripor2\")), row.names = c(NA, -167L), class = c(\"tbl_df\", \n\"tbl\", \"data.frame\"))\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nSeurat::FeaturePlot(koala_umap, features = c(\"Ptprb\", \"Stab2\", \"Lrmda\", \"Prkg1\"), ncol = 2)\n```\n\n::: {.cell-output-display}\n![](2024_01_22-scRNA-seq_files/figure-html/unnamed-chunk-69-1.png){width=672}\n:::\n:::\n\n\n<!-- ```{r} -->\n<!-- (koala_umap_GOs <- topGOtable(DEgenes = c(\"Hal\", \"Grm8\", \"Hsd17b13\", \"Sds\", \"Gm35696\", -->\n<!--                                           \"Ncam2\", \"Chrm3\", \"Acaca\", \"Gldc\", \"Aox3\"), -->\n<!--                               BGgenes = bg_gene_vector, -->\n<!--                                 #koala_js@assays$RNA@var.features, -->\n<!--                               ontology = \"BP\", geneID = \"symbol\", addGeneToTerms = TRUE)) -->\n<!-- ``` -->\n",
    "supporting": [
      "2024_01_22-scRNA-seq_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}
{
  "hash": "1666b14991563399e0ca3ed7c9bfa0e2",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"CITE-seq analysis proof-of-concept\"\nauthor: \"Patrick Cherry\"\ndate: \"June 20, 2024\"\ncategories:\n  - multi-modal analysis\n  - CITE-seq\n  - scRNA-seq\n  - code\n  - data\nimage: \"2024_06_20-CITE-seq/tsne_rna_adtClusters.png\"\nformat:\n  html:\n    df-print: kable\nexecute:\n  freeze: TRUE\n  echo: TRUE\neditor_options: \n  chunk_output_type: inline\n---\n\n\n\n## Intro\nCITE-seq using data from Stoeckius, et al (Nat Methods 14, 865â€“868 (2017) 10.1038/nmeth.4380) in GSE100866\n\nSeurat multi-modal clustering\n\n<!-- https://cran.r-project.org/web/packages/dsb/vignettes/end_to_end_workflow.html -->\n<!-- https://broadinstitute.github.io/2020_scWorkshop/cite-seq.html -->\n\n### Methods Intro\nFrom [Supplementary Figure 1 CITE-seq library preparation](https://www.nature.com/articles/nmeth.4380#Sec18):\n\n > Illustration of the DNA-barcoded antibodies used in CITE-seq. (b) Antibody-oligonucleotide complexes appear as a high-molecular-weight smear when run on an agarose gel (1). Cleavage of the oligo from the antibody by reduction of the disulfide bond collapses the smear to oligo length (2). (c) Drop-seq beads are microparticles with conjugated oligonucleotides comprising a common PCR handle, a cell barcode, followed by a unique molecular identifier (UMI) and a polyT tail. (d) Schematic illustration of CITE-seq library prep in Drop-seq (downstream of Fig. 1b). Reverse transcription and template switch is performed in bulk after emulsion breakage. After amplification, full length cDNA and antibody-oligo products can be separated by size and amplified independently (also shown in d) (e) Reverse transcription and amplification produces two product populations with distinct sizes (left panel). These can be size separated and amplified independently to obtain full length cDNAs (top panel, capillary electrophoresis trace) and ADTs (bottom panel, capillary electrophoresis trace).\n\n\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nfs::dir_ls(data_dir) |> fs::path_file()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"GSE100866_CBMC_8K_13AB_10X-ADT_clr-transformed.csv.gz\"\n[2] \"GSE100866_CBMC_8K_13AB_10X-ADT_umi.csv.gz\"            \n[3] \"GSE100866_CBMC_8K_13AB_10X-RNA_umi.csv.gz\"            \n[4] \"GSE100866_CD8_merged-ADT_clr-transformed.csv.gz\"      \n[5] \"GSE100866_CD8_merged-ADT_umi.csv.gz\"                  \n[6] \"GSE100866_CD8_merged-RNA_umi.csv.gz\"                  \n[7] \"GSE100866_PBMC_vs_flow_10X-ADT_clr-transformed.csv.gz\"\n[8] \"GSE100866_PBMC_vs_flow_10X-ADT_umi.csv.gz\"            \n[9] \"GSE100866_PBMC_vs_flow_10X-RNA_umi.csv.gz\"            \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\npath(out_path, file_prefix)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n/Users/patrick/pdcherry_github_io/posts/2024_06_20-CITE-seq/CITE-seq\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsource(\"CITE-seq_data_fetch.R\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncat(readLines(fs::path(out_path, \"CITE-seq_data_fetch.R\")), sep = \"\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nif(!require(GEOquery)){BiocManager::install(\"GEOquery\")}\nlibrary(GEOquery)\nlibrary(fs)\n\n# https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSE100866\n# https://www.nature.com/articles/nmeth.4380#article-info\n\ngse_id <- \"GSE100866\"\n\ngse <- getGEO(gse_id, GSEMatrix = TRUE)\nshow(gse)\n\nfilePaths <- getGEOSuppFiles(gse_id)\n\nfs::file_delete(fs::path(\"data\", gse_id, fs::path_file(fs::dir_ls(gse_id))))\nfs::file_move(fs::path(gse_id), \"data\")\n```\n\n\n:::\n:::\n\n\n\n## Read in data\n### count data\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncbmc_rna <-\n  as.sparse(\n    read.csv(\n      path(data_dir, \"GSE100866_CBMC_8K_13AB_10X-RNA_umi.csv.gz\"),\n      sep = \",\", header = TRUE, row.names = 1))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndim(cbmc_rna)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 36280  8617\n```\n\n\n:::\n:::\n\n\n\n`dim()` outputs (columns, rows); the CBMC matrix (cord blood mononuclear cells) contains 36280 features and 8617 samples (single cell droplets).\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncbmc_rna <- CollapseSpeciesExpressionMatrix(cbmc_rna,\n                                            prefix = \"HUMAN_\", controls = \"MOUSE_\",\n                                            ncontrols = 100)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndim(cbmc_rna)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 20501  8617\n```\n\n\n:::\n:::\n\n\n \n`CollapseSpeciesExpressionMatrix()` is a convenience function for slimming down a multi-species expression matrix, when only one species is primarily of interest. Given the default parameter of `ncontrols = 100`, this command keeps only the top 100 features detected from each species in each sample. This matrix went from 36280 to 20501 features, which is a 43% reduction.\n\n### ADT UMI matrix\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncbmc_adt <-\n  as.sparse(\n    read.csv(\n      path(data_dir, \"GSE100866_CBMC_8K_13AB_10X-ADT_umi.csv.gz\"),\n      sep = \",\", header = TRUE, row.names = 1))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndim(cbmc_adt)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1]   13 8617\n```\n\n\n:::\n:::\n\n\n\n#### Quick matrix QC\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntestthat::expect_equal(dim(cbmc_rna)[2] == dim(cbmc_adt)[2],\n                       TRUE)\n```\n:::\n\n\n\nThe number of rows (samples / UMIs) matches the RNA counts matrix; we have corresponding sample data.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlength(intersect(colnames(cbmc_rna), colnames(cbmc_adt))) /\n  length(union(colnames(cbmc_rna), colnames(cbmc_adt)))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 1\n```\n\n\n:::\n:::\n\n\n\nAnd the names of the samples all match.\n\n## Seurat object & cluster\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncbmc <- CreateSeuratObject(counts = cbmc_rna)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Feature names cannot have underscores ('_'), replacing with dashes\n('-')\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncbmc <- NormalizeData(cbmc)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nNormalizing layer: counts\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncbmc <- FindVariableFeatures(cbmc)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nFinding variable features for layer counts\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncbmc <- ScaleData(cbmc)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nCentering and scaling data matrix\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncbmc <- RunPCA(cbmc, verbose = FALSE)\nElbowPlot(cbmc, ndims = 50)\n```\n\n::: {.cell-output-display}\n![Elbow plot of principle components computed from scRNA-seq counts](2024_06_20-CITE-seq_analysis_PoC_files/figure-html/elbowplot-1.png){width=672}\n:::\n:::\n\n\n\nThe elbow plot above shows some interesting PC influence behavior. There are some clusters PCs (like 4-7, 8-10, and 11-13) that make it less clear where the \"elbow\" of influence trend is. To be very safe, we can keep up to PC 25, where the trend approaches a horizontal line.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncbmc <- FindNeighbors(cbmc, dims = 1:25)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nComputing nearest neighbor graph\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nComputing SNN\n```\n\n\n:::\n\n```{.r .cell-code}\ncbmc <- FindClusters(cbmc, resolution = 0.8)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nModularity Optimizer version 1.3.0 by Ludo Waltman and Nees Jan van Eck\n\nNumber of nodes: 8617\nNumber of edges: 343912\n\nRunning Louvain algorithm...\nMaximum modularity in 10 random starts: 0.8613\nNumber of communities: 19\nElapsed time: 0 seconds\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncbmc <- RunTSNE(cbmc, dims = 1:25, method = \"FIt-SNE\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncbmc_rna_markers <-\n  FindAllMarkers(cbmc,\n                 max.cells.per.ident = 100, logfc.threshold = log(2),\n                 only.pos = TRUE, min.diff.pct = 0.3, verbose = FALSE)\n```\n:::\n\n\n\nThe following cluster identities are provided for us from the authors of the paper. A cell-type classifier would need to be run on the data to label the barcodes (droplets) with their identifiers.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnew.cluster.ids <- c(\"Memory CD4 T\", \"CD14+ Mono\", \"Naive CD4 T\", \"NK\", \"CD14+ Mono\",\n                    \"Mouse\", \"B\", \"CD8 T\", \"CD16+ Mono\", \"T/Mono doublets\", \"NK\", \"CD34+\",\n                    \"Multiplets\", \"Mouse\", \"Eryth\", \"Mk\", \"Mouse\", \"DC\", \"pDCs\")\nnames(new.cluster.ids) <- levels(cbmc)\ncbmc <- RenameIdents(cbmc, new.cluster.ids)\n```\n:::\n\n\n\n\n### Clustering t-SNE plot\n\n\n::: {.cell}\n\n```{.r .cell-code}\nDimPlot(cbmc, label = TRUE, reduction = \"tsne\")# + NoLegend()\n```\n\n::: {.cell-output-display}\n![t-SNE plot of scRNA-seq expression levels showing 18 clusters](2024_06_20-CITE-seq_analysis_PoC_files/figure-html/tsne-plot-rna-1.png){width=672}\n:::\n:::\n\n\n\n## Incorporate protein expression (antibody barcodes) to the Seurat object\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncbmc[[\"ADT\"]] <- CreateAssayObject(counts = cbmc_adt)\n```\n:::\n\n\n\nThe above code adds a new assay called \"ADT\" to the Seurat object `cmbc`. We can confirm it's added with the following `GetAssayData()` command.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nGetAssayData(cbmc, layer = \"counts\", assay = \"ADT\")[1:3,1:3]\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n3 x 3 sparse Matrix of class \"dgCMatrix\"\n    CTGTTTACACCGCTAG CTCTACGGTGTGGCTC AGCAGCCAGGCTCATT\nCD3               60               52               89\nCD4               72               49              112\nCD8               76               59               61\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nrownames(cbmc_adt)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"CD3\"    \"CD4\"    \"CD8\"    \"CD45RA\" \"CD56\"   \"CD16\"   \"CD10\"   \"CD11c\" \n [9] \"CD14\"   \"CD19\"   \"CD34\"   \"CCR5\"   \"CCR7\"  \n```\n\n\n:::\n:::\n\n\n\nNow we can repeat the pre-processing (normalization and scaling) steps that we typically run with RNA, but modifying the 'assay' argument.\n\n(For CITE-seq data, the Broad does not recommend typical LogNormalization. Instead, they use a centered log-ratio (CLR) normalization, computed independently for each feature. This is a slightly improved procedure from the original publication.)\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncbmc <- NormalizeData(cbmc, assay = \"ADT\", normalization.method = \"CLR\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nNormalizing across features\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncbmc <- ScaleData(cbmc, assay = \"ADT\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nCentering and scaling data matrix\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nDefaultAssay(cbmc) <- \"RNA\"\n```\n:::\n\n\n\n### Visualize protein levels on RNA clusters\n\n\n::: {.cell}\n\n```{.r .cell-code}\nFeaturePlot(cbmc, features = c(\"adt_CD3\", \"adt_CD11c\", \"adt_CD8\", \"adt_CD16\",\n                               \"CD3E\", \"ITGAX\", \"CD8A\", \"FCGR3A\"),\n            min.cutoff = \"q05\", max.cutoff = \"q95\", ncol = 4)\n```\n\n::: {.cell-output-display}\n![](2024_06_20-CITE-seq_analysis_PoC_files/figure-html/unnamed-chunk-28-1.png){width=1344}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Compare gene and protein expression levels for the other 6 antibodies.\nFeaturePlot(cbmc,\n            features = c(\"adt_CD4\", \"adt_CD45RA\", \"adt_CD56\",\n                         \"adt_CD14\", \"adt_CD19\", \"adt_CD34\",\n                         \"CD4\", \"PTPRC\", \"NCAM1\",\n                         \"CD14\", \"CD19\", \"CD34\"),\n            min.cutoff = \"q05\", max.cutoff = \"q95\", ncol = 6)\n```\n\n::: {.cell-output-display}\n![](2024_06_20-CITE-seq_analysis_PoC_files/figure-html/unnamed-chunk-29-1.png){width=1728}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nRidgePlot(cbmc, features = c(\"adt_CD3\", \"adt_CD11c\", \"adt_CD8\", \"adt_CD16\"), ncol = 2)\n```\n\n::: {.cell-output-display}\n![](2024_06_20-CITE-seq_analysis_PoC_files/figure-html/unnamed-chunk-30-1.png){width=720}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nFeatureScatter(cbmc, feature1 = \"adt_CD19\", feature2 = \"adt_CD3\")\n```\n\n::: {.cell-output-display}\n![](2024_06_20-CITE-seq_analysis_PoC_files/figure-html/unnamed-chunk-31-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nFeatureScatter(cbmc, feature1 = \"adt_CD3\", feature2 = \"CD3E\")\n```\n\n::: {.cell-output-display}\n![](2024_06_20-CITE-seq_analysis_PoC_files/figure-html/unnamed-chunk-32-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nFeatureScatter(cbmc, feature1 = \"adt_CD4\", feature2 = \"CD4\")\n```\n\n::: {.cell-output-display}\n![](2024_06_20-CITE-seq_analysis_PoC_files/figure-html/unnamed-chunk-33-1.png){width=672}\n:::\n:::\n\n\n\n### T-cell analysis\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntcells <- subset(cbmc, idents = c(\"Naive CD4 T\", \"Memory CD4 T\", \"CD8 T\"))\nFeatureScatter(tcells, feature1 = \"adt_CD4\", feature2 = \"adt_CD8\")\n```\n\n::: {.cell-output-display}\n![](2024_06_20-CITE-seq_analysis_PoC_files/figure-html/unnamed-chunk-34-1.png){width=672}\n:::\n:::\n\n\n\nThe pearson correlation of CD4 and CD8 antibody CITE-seq signal is -0.79, indicating these are signals are significantly anti-correlated, which is consistent with the immunology of T-cells.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nFeatureScatter(tcells, feature1 = \"adt_CD4\", feature2 = \"adt_CD8\", slot = \"counts\")\n```\n\n::: {.cell-output-display}\n![](2024_06_20-CITE-seq_analysis_PoC_files/figure-html/unnamed-chunk-35-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nFeatureScatter(tcells, feature1 = \"CD4\", feature2 = \"CD8A\");\n```\n\n::: {.cell-output-display}\n![](2024_06_20-CITE-seq_analysis_PoC_files/figure-html/unnamed-chunk-36-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nncol(subset(tcells, subset = CD4 == 0 & CD8A == 0)) / ncol(tcells)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.8285455\n```\n\n\n:::\n:::\n\n\n\nWow, when measured by RNA expression, 83% of the T-cells are double-negative for CD4 and CD8.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nDefaultAssay(tcells) <- \"ADT\"  # work with ADT count matrix\nFeatureScatter(tcells, feature1 = \"adt_CD4\", feature2 = \"adt_CD8\")\n```\n\n::: {.cell-output-display}\n![](2024_06_20-CITE-seq_analysis_PoC_files/figure-html/unnamed-chunk-38-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nncol(subset(tcells, subset = adt_CD4 < 1 & adt_CD8 < 1)) / ncol(tcells)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.009978833\n```\n\n\n:::\n:::\n\n\n\nHowever, for surface antigen detection in CITE-seq, only 0.997% are double negative for CD4 protein and CD8 protein.\n\n## differential protein levels between clusters\nHere, I sample 300 sells\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncbmc_subset <- subset(cbmc, downsample = 300)\n\n# Find protein markers for all clusters, and draw a heatmap\nadt_markers <- FindAllMarkers(cbmc_subset, assay = \"ADT\", only.pos = TRUE)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nCalculating cluster Memory CD4 T\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nCalculating cluster CD14+ Mono\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nCalculating cluster Naive CD4 T\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nCalculating cluster NK\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nCalculating cluster Mouse\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nCalculating cluster B\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nCalculating cluster CD8 T\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nCalculating cluster CD16+ Mono\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nCalculating cluster T/Mono doublets\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nCalculating cluster CD34+\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nCalculating cluster Multiplets\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nCalculating cluster Eryth\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in FindMarkers.default(object = data.use, cells.1 = cells.1, cells.2 =\ncells.2, : No features pass logfc.threshold threshold; returning empty\ndata.frame\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nCalculating cluster Mk\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nCalculating cluster DC\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nCalculating cluster pDCs\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nDoHeatmap(cbmc_subset,\n          features = unique(adt_markers$gene),\n          assay = \"ADT\", angle = 90, size = 4) +\n  #NoLegend() +\n  guides(color = \"none\") +\n  theme(axis.text.y = element_text(size = 14),\n        strip.text = element_text(size = 2))\n```\n\n::: {.cell-output-display}\n![](2024_06_20-CITE-seq_analysis_PoC_files/figure-html/unnamed-chunk-41-1.png){width=672}\n:::\n:::\n\n\n\n### Cluster directly on protein levels\nKeeping human cells only:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncbmc <- subset(cbmc, idents = c(\"Multiplets\", \"Mouse\"), invert = TRUE)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nDefaultAssay(cbmc) <- \"ADT\"\ncbmc <-\n  RunPCA(cbmc,\n         features = rownames(cbmc),\n         reduction.name = \"pca_adt\", reduction.key = \"pcaadt_\",\n         verbose = FALSE)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in irlba(A = t(x = object), nv = npcs, ...): You're computing too large\na percentage of total singular values, use a standard svd instead.\n```\n\n\n:::\n:::\n\n\n\nI'm using `reduction.name` and `reduction.key`, because this is the second PCA being run on this multi-modal Seurat object, and I don't want the names to collide with the scRNA-seq PCA.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nDimPlot(cbmc, reduction = \"pca_adt\")\n```\n\n::: {.cell-output-display}\n![](2024_06_20-CITE-seq_analysis_PoC_files/figure-html/unnamed-chunk-44-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nElbowPlot(cbmc)\n```\n\n::: {.cell-output-display}\n![](2024_06_20-CITE-seq_analysis_PoC_files/figure-html/unnamed-chunk-45-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nadt_data <- GetAssayData(cbmc, slot = \"data\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: The `slot` argument of `GetAssayData()` is deprecated as of SeuratObject 5.0.0.\nâ„¹ Please use the `layer` argument instead.\n```\n\n\n:::\n\n```{.r .cell-code}\nadt_dist <- dist(t(adt_data))\n\ncbmc[[\"rnaClusterID\"]] <- Idents(cbmc)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncbmc[[\"tsne_adt\"]] <- RunTSNE(adt_dist, assay = \"ADT\", reduction.key = \"adtTSNE_\")\ncbmc[[\"adt_snn\"]] <- FindNeighbors(adt_dist)$snn\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nBuilding SNN based on a provided distance matrix\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nComputing SNN\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncbmc <- FindClusters(cbmc, resolution = 0.2, graph.name = \"adt_snn\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nModularity Optimizer version 1.3.0 by Ludo Waltman and Nees Jan van Eck\n\nNumber of nodes: 7891\nNumber of edges: 274115\n\nRunning Louvain algorithm...\nMaximum modularity in 10 random starts: 0.9482\nNumber of communities: 12\nElapsed time: 0 seconds\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Adding a command log without an assay associated with it\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n( clustering_table <- table(Idents(cbmc), cbmc$rnaClusterID) )\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n    \n     Memory CD4 T CD14+ Mono Naive CD4 T   NK    B CD8 T CD16+ Mono\n  0          1416          0        1071    3    0    18          0\n  1             1       2198           0    5    0     0         36\n  2             6          0           3  887    2    10          0\n  3           273          0         194   26    0     6          0\n  4             0          4           0    3  313     0          1\n  5            23          0          18    4    1   247          0\n  6             1         23           3  153    2     2          9\n  7             3         59           4    0    0     0          9\n  8             0          7           0    4    0     0        175\n  9             3          4           0    1    0     1          0\n  10            0          0           1    0    0     0          0\n  11            1          0           2    0   24     0          0\n    \n     T/Mono doublets CD34+ Eryth   Mk   DC pDCs\n  0                3    45     2    8    0    1\n  1                3     0     3   24   55    1\n  2                0    45     2    7    2    1\n  3                2     7     4   16    1    1\n  4                7     2     0    3    0    0\n  5                0    10     0    2    0    0\n  6               59     7     1    9    6    2\n  7              118     2     0    1    0    0\n  8                0     0     0    1    0    0\n  9                2     5    92   17    5    1\n  10               0     0     0    0    1   42\n  11               3     0     0    0    0    0\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# new_cluster_ids <- c(\"CD4 T\", \"CD14+ Mono\", \"NK\", \"B\",\n#                      \"CD8 T\", \"NK\", \"CD34+\", \"T/Mono doublets\",\n#                      \"CD16+ Mono\", \"pDCs\", \"B\")\n\nnew_cluster_ids <- levels(unique(cbmc$rnaClusterID))\n\nnames(new_cluster_ids) <- levels(cbmc)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlevels(unique(cbmc$rnaClusterID))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"Memory CD4 T\"    \"CD14+ Mono\"      \"Naive CD4 T\"     \"NK\"             \n [5] \"B\"               \"CD8 T\"           \"CD16+ Mono\"      \"T/Mono doublets\"\n [9] \"CD34+\"           \"Eryth\"           \"Mk\"              \"DC\"             \n[13] \"pDCs\"           \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nnames(new_cluster_ids)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"0\"  \"1\"  \"2\"  \"3\"  \"4\"  \"5\"  \"6\"  \"7\"  \"8\"  \"9\"  \"10\" \"11\" NA  \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlevels(cbmc)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"0\"  \"1\"  \"2\"  \"3\"  \"4\"  \"5\"  \"6\"  \"7\"  \"8\"  \"9\"  \"10\" \"11\"\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncbmc <- RenameIdents(cbmc, new_cluster_ids)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Cannot find identity NA\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# using {patchwork} `wrap_plots` & `plot_annotation` to label sub-figures.\n\ntsne_rnaClusters <- DimPlot(cbmc, reduction = \"tsne_adt\", group.by = \"rnaClusterID\", pt.size = 0.5) +\n  NoLegend() +\n  ggtitle(\"Classification based on scRNA-seq\") +\n  theme(plot.title = element_text(size = 12, hjust = 0.5))\n\ntsne_rnaClusters <- LabelClusters(plot = tsne_rnaClusters, id = \"rnaClusterID\", size = 4)\n\ntsne_adtClusters <- DimPlot(cbmc, reduction = \"tsne_adt\", pt.size = 0.5) +\n  NoLegend() +\n  ggtitle(\"Classification based on ADT signal\") +\n  theme(plot.title = element_text(size = 12, hjust = 0.5))\n\ntsne_adtClusters <- LabelClusters(plot = tsne_adtClusters, id = \"ident\", size = 4)\n\n# Note: for this comparison, both the RNA and protein clustering are visualized on a tSNE\n# generated using the ADT distance matrix.\n( tsne_rna_adtClusters <- patchwork::wrap_plots(list(tsne_rnaClusters, tsne_adtClusters), ncol = 2) +\n  plot_annotation(tag_levels = 'a') )\n```\n\n::: {.cell-output-display}\n![Juxaposed tSNE plots of ADT (antibody) signal, colored and labeled by the data source indicated in the title (classification based on scRNA-seq in a; classification based on ADT signal in b).](2024_06_20-CITE-seq_analysis_PoC_files/figure-html/fig-pairedtSNE-1.png){#fig-pairedtSNE width=768}\n:::\n:::\n\n\n\n\n\nThe tSNE clustering in @fig-pairedtSNE above is based on the distance matrix ADT (antibody) signal, whereas the coloring and cluster labels are, on the scRNA-seq data.\n\nOverall, the ADT-driven clustering yields similar results. The compare / contrast are:\n\n  - ADT clustering is improves CD4/CD8 T cell group distinction, based on the robust ADT data for CD4, CD8, CD14, and CD45RA\n  - However, ADT-based clustering is worse for the Mk/Ery/DC cell-surface markers, and scRNA-seq distinguishes these populations better.\n  - Some of the clusters are likely doublets, which have low confidence classifier calls in both the scRNA-seq and ADT methods. (However, scRNA-seq could have more features for more confident doublet identification and removal.)\n\n",
    "supporting": [
      "2024_06_20-CITE-seq_analysis_PoC_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}
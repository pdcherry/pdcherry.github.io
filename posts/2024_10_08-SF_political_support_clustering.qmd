---
title: "San Francisco political support clustering"
author: "Patrick Cherry"
date: "2024-10-08"
categories:
  - politics
image: "2024_10_08-SF_political_support_data/2022_06_26-Pride_Lasers-057.jpg"
format:
  html:
    df-print: paged
execute:
  freeze: TRUE
  echo: FALSE
editor_options: 
  chunk_output_type: inline
---

```{r}
caption_def <- "2024-10-08 SF Political Alignments. by Patrick Cherry"
exp_imp_path <- "./2024_10_08-SF_political_support_data/"
```

![LGBTQ+ Pride light cannons project down Market Street at the Ferry Building, with a uterus projected onto the clock tower in the background. The ballot this November includes Prob. 3 to protect the right to marriage in the state constitution and Prop. O to protect reproductive health rights and privacy in San Francisco.](2024_10_08-SF_political_support_data/2022_06_26-Pride_Lasers-057.jpg)

# Introduction
In the spirit of [last March's primary election recommendations analysis](2024_03_02-SF_political_support_data.qmd), by popular demand, I am again running clustering analysis on the ballot measure and political race recommendations by the various political organizations in San Francisco that issue endorsements of issues and candidates.

San Francisco (and much of the Bay Area) has a curious political idiosyncrasy where brand-name **R**epublican candidates and issues get so little traction among voters so as to be considered irrelevant. Yet, many **r**epublican ideals and beliefs do receive substantial support from locals.

This dynamic causes practically republican organizations to outwardly re-code and re-brand as something—anything—other than GOP. Popular self-descriptions include Moderate or middle-of-the-road Democrat. However, this analysis is motivated by ignoring these pretenses and looking exclusively at indicated issue recommendations / endorsements, and understanding how similar vs. how different each political organization is acting (a behaviorist / empirical approach).

## Notes on approach
The website [sfendorsements.com](https://sfendorsements.com/) has collected and cataloged many of the city's politically active groups' (often Political Action Committees, or PACs) positions on ballot measures and election races for local positions. I hypothesize that these can be used to deduce the true alignment of these organizations.

Peter Xu [make the code available](https://gitlab.com/peterxu/sf-endorsements), and has has previously made [google sheets](https://docs.google.com/spreadsheets/d/1f3cGgXjI912nA8e1_iTlEhJ7XpxjpSKZdT7wX3ryztg/edit#gid=1545354255) available for the endorsement data, but those are for 2022.

For this analysis, I will scrape the 2024 data, tidy it up, and analyze it.

```{r, setup, echo = FALSE, message = FALSE}
library(readr)                  # for reading and writing csvs
library(fs)                     # for filesystem navigation in R
library(dplyr)                  # for dataframe manipulation
library(tidyr)                  # for munging and tidying data
library(purrr)                  # for functional programming on vectors
library(googlesheets4)          # for importing data directly from google sheets
library(kableExtra)             # for pretty html tables
library(DT)                     # for scrollable, filterable tables
library(corrr)                  # for tidy correlation matrices
library(nomclust)               # for nominal hierarchical clustering
library(stringr)                # for efficient string manipulation
library(magrittr)               # for enhanced pipes
library(forcats)                # for factor manipulation
library(ggplot2)                # for additional plotting features
theme_set(theme_bw())           # set the default ggplot theme to be clear & cartooney
```

## Import and tidy data
```{r eval = FALSE}
source(path(exp_imp_path, "2024_03_02-SF_political_support_scrape_script.R"))
```

```{r message = FALSE}
endorsements_import <- read_csv(path(exp_imp_path,"2024_03_03-props_table.csv"),
                                show_col_types = FALSE)

endorsements_tidy <- endorsements_import %>%
  mutate(across(everything(), ~ enc2utf8(.x)))
  #pivot_longer(cols = !1, names_to = "names") %>%
  #pivot_wider(id_cols = names, names_from = 1) %>%
  #type_convert()
```

Great, the data are now tidy, where each row is an observation (a political group), and each column is a variable (race / measure).

```{r include = FALSE, eval = FALSE}
write_csv(endorsements_tidy, path(exp_imp_path, "2024_03_02-SF_endorsements_tidy.csv"), na = "")
write_csv(former_endorsements_import, path(exp_imp_path, "2024_03_02-2022_SF_endorsements_import.csv"), na = "")
```

### What are the propositions?
```{r}
#| label: tbl-props
#| tbl-cap: "Table of proposition names, titles, and descriptive summary"

read_csv(path(exp_imp_path, "2024_03_03-2024_ballot_measures_desc.csv"),
         show_col_types = FALSE) %>%
  ## replace any non UTF-8 by ''
  ## non-UTF-8 characters may have been introduced when I was copying text from SF's website
  mutate(across(everything(), ~ iconv(.x, "UTF-8", "UTF-8",sub=''))) %>%
  mutate("Prop" = cell_spec(Prop, format = "html", link = link, escape = TRUE)) %>%
  select (Prop, Title, "Description" = Desc) %>%
  kable(format = "html", escape = FALSE)
```

## Analyze by ballot measures
```{r}
prop_data <-
  endorsements_tidy %>%
  select(Organization, contains("Prop")) %>%
  mutate(across(!Organization, ~ as_factor(replace_na(.x, "No comment")) )) %>%
  as.data.frame()

rownames(prop_data) <- prop_data$Organization
prop_data <- select(prop_data, !Organization)

prop_clust <- nomclust(prop_data, measure = "iof", prox = TRUE)
prop_prox_quant <- as_tibble(as.data.frame(as.matrix(prop_clust$prox)), rownames = "org")
```

### Who is recommending what?
```{r}
contrast <- function(colour) {
  out   <- rep("black", length(colour))
  light <- farver::get_channel(colour, "l", space = "hcl")
  out[light < 50] <- "white"
  out
}
autocontrast <- aes(colour = after_scale(contrast(fill)))
```

```{r, warning = FALSE}
prop_yesno <-
  endorsements_tidy %>%
  select(Organization, contains("Prop")) %>%
  mutate("Organization" = fct_relevel(as_factor(Organization),prop_clust$dend$order.lab)) %>%
  arrange(Organization) %>%
  pivot_longer(cols = !Organization, names_to = "prop", values_to = "rec")

prop_yesno_plot <- prop_yesno %>%
  ggplot(aes(x = prop, y = fct_rev(Organization), fill = rec)) +
  geom_tile() +
  geom_text(aes(label = rec, !!!autocontrast), size = 2.5) +
  scale_fill_viridis_d(option = "D", begin = .1, end = .8) +
  scale_x_discrete(position = "top") +
  labs(subtitle = "Summary of ballot measure endorsements by organization",
  fill = "Endorsement",
  caption = caption_def) +
  theme(axis.text.x = element_text(angle = 45, vjust = 0, hjust = 0),
        axis.title = element_blank())
prop_yesno_plot
```

Visually, we can see from this plot that there is significant variation across political organizations on endorsements for props C, E, F, G, and to a lesser extent B; whereas ballot measures 1, A, and D show less variation among political organizations. Also, interestingly, some organizations that offer endorsements did not endorse any position for some (or even most) propositions on the March 5 ballot.

However, for the above plot, the variation is easier to see than if the political organizations were sorted alphabetically because I cheated: I pre-sorted these based on their clustering order. So let's explore the clustering result.

### Nominal clustering
Clustering is typically a quantitative method, so special accommodations have to be taken for clustering nominal / factor data like these (where there are discrete values that do not have an order over one another). Luckily, we can use the [`nomclust`](https://cran.r-project.org/web/packages/nomclust/index.html) package ([paper](https://link.springer.com/article/10.1007/s00180-022-01209-4)), which handles the details as a purpose-built package for hierarchical clustering of nominal (categorical) variables.

One weakness of this clustering analysis is that it weights all ballot measures and races as the same. For an individual voter, some topics and races may have more salience or effect, and this analysis cannot take that into account.

```{r}
#| fig-width: 7
#| fig-height: 8

dend.plot(prop_clust, main = "Categorical heirarchical clustering based on proposition guidance"); mtext(side = 1,
  line = 2, at = 20, caption_def)
```

::: {.callout-note}
The underlying data have been updated since the original publication. The clustering is meaningfully different than previously displayed.
:::

Generally speaking, the agglomerative coefficient of a clustering analysis describes the strength of the clustering structure that has been obtained by group average linkage. The coefficient takes values from 0 to 1, and is calculated as the mean of the normalized lengths at which the clusters are formed, _e.g._ the uniformity lengths displayed on the dendrogram. The more evenly and gradually the categories get broken down into different clusters, the closer to 1 the agglomerative coefficient will be.

Very tellingly, we see three broad clusters:

 - On the left (in red), the fist cluster is the largest cluster (in terms of number of organizations). It contains some heavy hitters, like the San Francisco Chronicle, the Harvey Milk LGBTQ Democratic Club, and the San Francisco Democratic Party.  
 - Next, in the middle (in green), this cluster is defined by SPUR and the YIMBY Action / Sierra Club / SF League of Conservation Voters (the latter three having identical ballot measure endorsements).
 - On the right (in blue) is the cluster defined by the SF Republican Party. It also contains many low-distance neighborhood Democratic Clubs, and [GrowSF](https://growsf.org/), a nominally non-partisan and [well-funded](https://missionlocal.org/2024/02/explore-big-money-san-francisco-growsf-togethersf-neighbors-larsen-moritz-tan-web/) local 501(c)(4) political advocacy group.

#### Political organization distance heat map
I can also make a heat map of the clustering distance, or dissimilarity.

```{r}
#| fig-width: 7
#| fig-height: 7

prop_prox_quant_long <- pivot_longer(prop_prox_quant, !org, names_to = "org2", values_to = "proximity") %>%
  mutate(across(contains("org"), ~ fct_relevel(as_factor(.x),prop_clust$dend$order.lab)  ))

prop_prox_quant_plot <- prop_prox_quant_long %>%
  ggplot(aes(x = org, y = fct_rev(org2), fill = proximity)) +
  geom_tile() +
  scale_fill_viridis_c() +
  labs(subtitle = "Dendrogram distance of SF political organizations by ballot measures",
       fill = "Distance",
       caption = caption_def) +
  theme(axis.text.x = element_text(angle = 90, vjust = .5, hjust = 1),
        axis.title = element_blank())
prop_prox_quant_plot
```

The heat map shows darker, purple-er coloring for pairs of organizations whose set of endorsements are more similar, and lighter, yellow-er colors for organizations with very different endorsements.

#### Political organization distance table
```{r}
#| label: tbl-org-dis
#| tbl-cap: "Table of unique political organization pairs, sorted by clustering proximity"

unq_org_dist_tbl <- prop_prox_quant_long %>%
  arrange(desc(proximity)) %>%
  rowwise() %>%
  mutate("org_sort_pair_list" = map2(org, org2, ~ (sort(c(as.character(.x),
                                                          as.character(.y))))),
         "org_sort_pair_chr" = paste(org_sort_pair_list, collapse = "_"),
         "proximity" = signif(proximity, digits = 3)) %>%
  ungroup() %>%
  arrange(org_sort_pair_chr) %>%
  distinct(org_sort_pair_list, .keep_all = TRUE)

DT::datatable(select(unq_org_dist_tbl, !c("org_sort_pair_list", "org_sort_pair_chr")),
         extensions = c('FixedColumns', "FixedHeader"),
          options = list(scrollX = TRUE, 
                         paging = TRUE,
                         fixedHeader = TRUE,
                         fixedHeight = TRUE))
```

<!-- ```{r} -->
<!-- unq_org_dist_tbl %>% -->
<!--   filter(str_detect(org_sort_pair_chr, "YIMBY Action") & -->
<!--            org != org2) %>% -->
<!--   mutate("non_fil_term" = if_else(org != "YIMBY Action", org, org2)) %>% -->
<!--   arrange(proximity) %>% -->
<!--   left_join(endorsements_tidy, by = c("non_fil_term" = "Organization")) %>% -->
<!--   filter(`Prop A` == "Yes" & `Prop C` == "Yes" & (`Prop E` == "No" | `Prop F` == "No")) %>% -->
<!--   select(!c("org_sort_pair_list", "org_sort_pair_chr")) -->
<!-- ``` -->

Some notable large-distance pairs jump out, like:

 - Green Party (SF) vs SF Housing Action Coalition (distance = 4.3)
 - The Green Party (SF) versus the middle cluster (Sierra Club, YIMBY Action, SF League of Conservation Voters) (distance = 4.11)
 - Harvey Milk LGBTQ Democratic Club vs Chinese American Democratic Club and the United Democratic Club (distance = 2.89)
 - SF Labor Council vs Chinese American Democratic Club (distance = 2.75)

The least-distant org to the SF Republican Party (aside from itself) is GrowSF (distance = 0.238)

### Remarks on clustering by ballot measure
We can see from a reasonably well-fitting categorical clustering model that many political organizations have high similarity with the SF Republican Party's positions on ballot measures, despite having "Democratic" in their name. This result supports the idea that an empirical approach can reveal more about the character of an organization that the words in its name.

## Aanlyze by candidate endorsement
```{r message = FALSE}
candidates_import <- read_csv(path(exp_imp_path, "2024_03_03-cand_table.csv"),
                                show_col_types = FALSE)

candidates_tidy <- candidates_import %>%
  mutate("President" = as.character(President),
         across(everything(), ~ enc2utf8(.x)),
         across(!Organization, ~ as_factor(.x)))
```

Great, the data are now tidy, where each row is an observation (a political group), and each column is a variable (race).

```{r include = FALSE, eval = FALSE}
write_csv(candidates_tidy, path(exp_imp_path, "2024_03_02-SF_candidates_tidy.csv"), na = "")
```

### Who is recommending whom?
```{r precompute clustering order}
candidate_data <-
  candidates_tidy %>%
  mutate(across(!Organization, ~ replace_na(
                                            as.character(.x),
                                            "No comment")) ) %>%
  as.data.frame()

rownames(candidate_data) <- candidate_data$Organization
candidate_data <- select(candidate_data, !Organization)

candidate_clust <- nomclust(candidate_data, measure = "of", prox = TRUE)
candidate_prox_quant <- as_tibble(as.data.frame(as.matrix(candidate_clust$prox)), rownames = "org")
```

```{r}
#| label: tbl-cand-recs
#| tbl-cap: "Table of organization endorsements of candidates for races"

candidates_display <- candidates_tidy %>%
  mutate("Organization" = fct_relevel(as_factor(Organization),candidate_clust$dend$order.lab)) %>%
  arrange(Organization) %>%
  mutate(across(everything(), ~ as.character(.x)),
         across(everything(), ~ replace_na(.x, "")))
  ## replace any non UTF-8 by ''
  ## non-UTF-8 characters may have been introduced when I was copying text from SF's website
  #mutate(across(everything(), ~ iconv(.x, "UTF-8", "UTF-8",sub=''))) %>%

kable(candidates_display, format = "html", escape = FALSE)
```

I've cheated again and pre-arranged this table of candidate endorsements by the clustering order. It makes it pretty clear there are a few block. I'll also do a distance heat map below (which doesn't say the endorsement names, but shows similarity more clearly.)

```{r}
#| label: tbl-cand-recs-uniq-count
#| tbl-cap: "Unique options per race"

candidates_display %>%
  summarize(across(.cols = !Organization,
                   .fns = list("number of candidates" = ~ n_distinct(.x)),
                   .names = "{.col}")) %>%
  kable(format = "html", escape = FALSE)
```

Note that races have one to four options among the endorsements made by these political organizations. This is different than the ballot measures (where options were Yes / No / NA). This increase in the number of levels of each factor can affect the clustering.

```{r}
#| label: tbl-cand-recs-na-count
#| tbl-cap: "Races where one or more organizations did not endorse anyone (binary: Yes / No)"

candidates_display %>%
  summarize(across(.cols = !Organization,
                   .fns = list("contains an NA" = ~ if_else(
                     sum((.x == "")) >0, "Yes", "No")),
                   .names = "{.col}")) %>%
  kable(format = "html", escape = FALSE)
```

Also note that, in every race, there is one option that is the organization declining to endorse anyone. Thus, the number of _candidates_ endorsed is `n - 1` the value represented in the table.

This means that no organization made any endorsements for President. This fact is not true of any other race.

### Nominal clustering
Very tellingly, we see two broad clusters and two narrow clusters:

```{r}
#| fig-width: 8
#| fig-height: 8

dend.plot(candidate_clust,
          main = "Categorical heirarchical clustering based on candidate endorsement"); mtext(side = 1,
      line = 2, at = 20, caption_def)
```

 - On the left (in red), the fist cluster is contains some heavy hitters, like the San Francisco Chronicle and the San Francisco Bay Guardian
 - Next, in the middle-left (in green), this large cluster contains some notable members, like the San Francisco Democratic Party, the Harvey Milk LGBTQ Democratic Club, GrowSF, and the Sierra Club.
 - On the right (in cyan and purple) are the two clusters for the SF Young Republicans and the SF Republican Party. It is curious these two organizations cluster apart (their fork is pretty high in distance), but looking to the endorsements table can shed light on why: their only common endorsement is for Yvette Corkrean for State Senate 11, and all others are disparate. All these endorsements are so divergent from the other organizations as to earn them their own clusters.

#### Political organization distance heat map
I can also make a heat map of the clustering distance, or dissimilarity.

```{r}
#| fig-width: 7.5
#| fig-height: 7

cand_prox_quant_long <- pivot_longer(candidate_prox_quant, !org, names_to = "org2", values_to = "proximity") %>%
  mutate(across(contains("org"), ~ fct_relevel(as_factor(.x),candidate_clust$dend$order.lab)  ))

prop_prox_quant_plot <- cand_prox_quant_long %>%
  ggplot(aes(x = org, y = fct_rev(org2), fill = proximity)) +
  geom_tile() +
  scale_fill_viridis_c() +
  labs(subtitle = "Dendrogram distance of SF political org. by candidate endorsements",
       fill = "Distance",
       caption = caption_def) +
  theme(axis.text.x = element_text(angle = 90, vjust = .5, hjust = 1),
        axis.title = element_blank())
prop_prox_quant_plot
```

For the two large clusters in the dendrogram, this heat maps show two large squares of low-distance coloring (purple to dark blue) along the diagonal downward and to the right. These square blocks of proximity indicate clusters similarity among the organizations.

Interesting, there is visually a third square of low distance that suggests the YIMBY Action, Sierra Club, and SF Housing Action Coalition (and cluster relatives) are in a slightly different set than the SF Democratic Party, The Harvey Milk LGBTQ Democratic Club, and GrowSF.

Also clearly shown on this heatmap is how divergent the SF Young Republicans and the SF Republican Party are from any other organization analyzed. For example, the NOE Valley Democratic Club is closer (in clustering distance) to the SF Young Republicans and the SF Republican Party than the latter two are to each other.

#### Political organization distance table (for candidate recs)
Use the table below to filer, sort, and rank the clustering model's distance to make your own comparisons.

```{r}
#| label: tbl-org-cand-dis
#| tbl-cap: "Table of unique political organization pairs, sorted by clustering proximity on endorsement"

unq_cand_org_dist_tbl <- cand_prox_quant_long %>%
  arrange(desc(proximity)) %>%
  rowwise() %>%
  mutate("org_sort_pair_list" = map2(org, org2, ~ (sort(c(as.character(.x),
                                                          as.character(.y))))),
         "org_sort_pair_chr" = paste(org_sort_pair_list, collapse = "_"),
         "proximity" = signif(proximity, digits = 3)) %>%
  ungroup() %>%
  arrange(org_sort_pair_chr) %>%
  distinct(org_sort_pair_list, .keep_all = TRUE)

DT::datatable(select(unq_cand_org_dist_tbl, !c("org_sort_pair_list", "org_sort_pair_chr")),
         extensions = c('FixedColumns', "FixedHeader"),
          options = list(scrollX = TRUE,
                         paging = TRUE,
                         fixedHeader = TRUE,
                         fixedHeight = TRUE))
```

### Remarks on clustering by candidate endorsement
The race endorsements data set contains more options in general, allowing each organization for vary significantly in its character. We see this born out in the clustering dendrogram with more divergent clusters than seen in the ballot measure analysis.

While the candidate endorsement clustering didn't reveal any surprising similarities (in the author's opinion), it did show how divergent the SF Republican Party and the SF Young Republicans are from the rest of the organizations, in terms of candidate endorsements.

## Conclusions
The nominal clustering analysis worked well at identifying similar groups and quanifying relative similarity. One weakness of this clustering analysis is that it weights all ballot measures and races as the same. For an individual voter, some topics and races may have more salience or effect, and this analysis cannot take that into account.

Broadly, these result support the idea that an empirical approach can reveal more about the character of an organization that the words in its name, and that this analysis is useful for determining action-based political alignment.

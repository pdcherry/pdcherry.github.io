---
title: "San Francisco political support data shows true alignment"
author: "Patrick Cherry"
date: "2024-03-03"
categories:
  - politics
image: "2024_03_02-San_Francisco_and_Bay.jpg"
format:
  html:
    df-print: paged
execute:
  freeze: TRUE
  echo: FALSE
editor_options: 
  chunk_output_type: inline
---

```{r}
caption_def <- "2024-03-02 SF Political Alignment. by Patrick Cherry"
```

![View of northern San Francisco at dusk](2024_03_02-San_Francisco_and_Bay.jpg)

# Introduction
The saying goes "all politics are local," and San Francisco is no exception.

San Francisco (and much of the Bay Area) has a curious political idiosyncrasy where brand-name **R**epublican candidates and issues get so little traction among voters so as to be considered irrelevant. Yet, many **r**epublican ideals and beliefs do receive substantial support from locals.

This dynamic causes practically republican organizations to outwardly re-code and re-brand as something—anything—other than GOP. Popular self-descriptions include Moderate or middle-of-the-road Democrat. However, this analysis is motivated by ignoring these pretenses and looking exclusively at indicated issue recommendations / endorsements, and understanding how similar vs. how different each political organization is acting (a behaviorist / empirical approach).

## Notes on approach
The website [sfendorsements.com](https://sfendorsements.com/) has collected and cataloged many of the city's politically active groups' (often Political Action Committees, or PACs) positions on ballot measures and election races for local positions. I hypothesize that these can be used to deduce the true alignment of these organizations.

Peter Xu has been nice enough to [make the code available](https://gitlab.com/peterxu/sf-endorsements) for sfendorsements.com, and hosts the data in a [google sheet](https://docs.google.com/spreadsheets/d/1f3cGgXjI912nA8e1_iTlEhJ7XpxjpSKZdT7wX3ryztg/edit#gid=1545354255) that we can easily import for analysis. Marvelous!

```{r, setup, echo = FALSE, message = FALSE}
library(readr)                  # for reading and writing csvs
library(fs)                     # for filesystem navigation in R
library(dplyr)                  # for dataframe manipulation
library(googlesheets4)          # for importing data directly from google sheets
library(kableExtra)             # for pretty html tables
library(DT)                     # for scrollable, filterable tables
library(corrr)                  # for tidy correlation matrices
library(nomclust)               # for nominal hierarchical clustering
library(tidyr)                  # for dataframe group nesting and manipulation
library(purrr)                  # for functional programming, including on nested dataframes
library(stringr)                # for efficient string manipulation
library(magrittr)               # for enhanced pipes
library(broom)                  # for model manipulation
library(forcats)                # for factor manipulation
library(ggplot2)                # for additional plotting features
theme_set(theme_bw())           # set the default ggplot theme to be clear & cartooney
```

## Import and tidy data
```{r, eval = FALSE}
source("2024_03_02-SF_political_support_scrape_script.R")
```

<!-- ```{r, message = FALSE} -->
<!-- former_endorsements_import <- googlesheets4::read_sheet(ss = "1f3cGgXjI912nA8e1_iTlEhJ7XpxjpSKZdT7wX3ryztg", -->
<!--                                                  sheet = "Endorsements", -->
<!--                                                  col_types = "c") %>% -->
<!--   select(!Instructions) -->

<!-- endorsements_tidy <- endorsements_import %>% -->
<!--   pivot_longer(cols = !1, names_to = "names") %>% -->
<!--   pivot_wider(id_cols = names, names_from = 1) %>% -->
<!--   type_convert() -->

<!-- slice_head(endorsements_import, n = 5) %>% select(1:3, 5) -->
<!-- ``` -->

```{r message = FALSE}
endorsements_import <- read_csv("2024_03_03-props_table.csv", show_col_types = FALSE)

endorsements_tidy <- endorsements_import #%>% glimpse()
  #pivot_longer(cols = !1, names_to = "names") %>%
  #pivot_wider(id_cols = names, names_from = 1) %>%
  #type_convert()
```

Great, the data are now tidy, where each row is an observation (a political group), and each column is a variable (race / measure).

```{r, include = FALSE, eval = FALSE}
write_csv(endorsements_tidy, "2024_03_02-SF_endorsements_tidy.csv")
write_csv(former_endorsements_import, "2024_03_02-2022_SF_endorsements_import.csv")
```

### What are the propositions?
```{r}
#| label: tbl-props
#| tbl-cap: "Table of proposition names, titles, and descriptive summary"

read_csv("2024_03_03-2024_ballot_measures_desc.csv", show_col_types = FALSE) %>%
  ## replace any non UTF-8 by ''
  mutate(across(everything(), ~ iconv(.x, "UTF-8", "UTF-8",sub=''))) %>%
  #mutate(Prop = paste0("<a href=\"", link, "\">", Prop, "</a>")) %>% glimpse()
  mutate("Prop" = cell_spec(Prop, format = "html", link = link, escape = TRUE)) %>%
  select (Prop, Title, "Description" = Desc) %>%
  kable(format = "html", escape = FALSE)
```

## Analyze organizations by ballot measures
```{r}
#| fig-width: 7
#| fig-height: 6

prop_data <-
  endorsements_tidy %>%
  select(Organization, contains("Prop")) %>%
  mutate(across(!Organization, ~ as_factor(replace_na(.x, "No comment")) )) %>%
  as.data.frame()

rownames(prop_data) <- prop_data$Organization
prop_data <- select(prop_data, !Organization)

prop_clust <- nomclust(prop_data, measure = "lin", prox = 100)
prop_prox_quant <- as_tibble(as.data.frame(as.matrix(prop_clust$prox)), rownames = "org")
```

### Who is recommending what?
```{r}
contrast <- function(colour) {
  out   <- rep("black", length(colour))
  light <- farver::get_channel(colour, "l", space = "hcl")
  out[light < 50] <- "white"
  out
}
autocontrast <- aes(colour = after_scale(contrast(fill)))
```

```{r, warning = FALSE}
prop_yesno <-
  endorsements_tidy %>%
  select(Organization, contains("Prop")) %>%
  mutate("Organization" = fct_relevel(as_factor(Organization),prop_clust$dend$order.lab)) %>%
  arrange(Organization) %>%
  pivot_longer(cols = !Organization, names_to = "prop", values_to = "rec")

prop_yesno_plot <- prop_yesno %>%
  ggplot(aes(x = prop, y = fct_rev(Organization), fill = rec)) +
  geom_tile() +
  geom_text(aes(label = rec, !!!autocontrast), size = 2.5) +
  scale_fill_viridis_d(option = "D", begin = .1, end = .8) +
  scale_x_discrete(position = "top") +
  labs(subtitle = "Summary of ballot measure endorsements by organization",
  fill = "Endorsement",
  caption = caption_def) +
  theme(axis.text.x = element_text(angle = 45, vjust = 0, hjust = 0),
        axis.title = element_blank())
prop_yesno_plot
```

Visually, we can see from this plot that there is significant variation across political organization on endorsements for props C, E, F, G, and to a lesser extent B; whereas ballot measures 1, A, and D show less variation among political organizations. Also, interestingly, some organizations that offer endorsements did not endorse any position for some (or even most) propositions on the March 5 ballot.

However, for the above plot, the variation is easier to see than if the political organizations were sorted alphabetically because I cheated: I pre-sorted these based on their clustering order. So let's explore the clustering result.

### Nominal clustering
Clustering is typically a quantitative method, so special accommodations have to be taken for clustering nominal / factor data like these (where there are discrete values that do not have an order over one another). Luckily, we can use the [`nomclust`](https://cran.r-project.org/web/packages/nomclust/index.html) package ([paper](https://link.springer.com/article/10.1007/s00180-022-01209-4)), which handles the details as a purpose-built package for hierarchical clustering of nominal (categorical) variables.

```{r}
#| fig-width: 7
#| fig-height: 8

dend.plot(prop_clust, main = "Categorical heirarchical clustering based on proposition guidance"); mtext(side = 1,
  line = 2, at = 20, caption_def)
```

Generally speaking, the agglomerative coefficient of a clustering analysis describes the strength of the clustering structure that has been obtained by group average linkage. The coefficient takes values from 0 to 1, and is calculated as the mean of the normalized lengths at which the clusters are formed, _e.g._ the uniformity lengths displayed on the dendrogram. The more evenly and gradually the categories get broken down into different clusters, the closer to 1 the agglomerative coefficient will be.

Very tellingly, we see three broad clusters:

 - On the left (in red), the fist cluster contains heavy hitters like the San Francisco Chronicle. It also contains the SF Republican Party, many neighborhood Democratic Clubs, and [GrowSF](https://growsf.org/), a nominally non-partisan and [well-funded](https://missionlocal.org/2024/02/explore-big-money-san-francisco-growsf-togethersf-neighbors-larsen-moritz-tan-web/) local 501(c)(4) political advocacy group.
 - Next, in the middle (in blue), this cluster is defined by SPUR and the YIMBY Action / Sierra Club / SF League of Conservation Voters (the latter three having identical ballot measure endorsements).
 - On the right, in green, the largest cluster (in terms or organizations) is defined by the Harvey Milk LGBTQ Democratic Club, and the San Francisco Democratic Party.

#### Political organization distance heat map
I can also make a heat map of the clustering distance, or dissimilarity.

```{r}
#| fig-width: 8
#| fig-height: 8

prop_prox_quant_long <- pivot_longer(prop_prox_quant, !org, names_to = "org2", values_to = "proximity") %>%
  mutate(across(contains("org"), ~ fct_relevel(as_factor(.x),prop_clust$dend$order.lab)  ))

prop_prox_quant_plot <- prop_prox_quant_long %>%
  ggplot(aes(x = org, y = fct_rev(org2), fill = proximity)) +
  geom_tile() +
  scale_fill_viridis_c() +
  labs(subtitle = "Dendrogram distance of SF political organizations by ballot measures",
       fill = "Distance",
       caption = caption_def) +
  theme(axis.text.x = element_text(angle = 90, vjust = .5, hjust = 1),
        axis.title = element_blank())
prop_prox_quant_plot
```

The heat map shows darker, purple-er coloring for pairs of organizations whose set of endorsements are more similar, and lighter, yellow-er colors for organizations with very different endorsements.

#### Political organization distance table
```{r}
#| label: tbl-org-dis
#| tbl-cap: "Table of unique political organization pairs, sorted by clustering proximity"

unq_org_dist_tbl <- prop_prox_quant_long %>%
  arrange(desc(proximity)) %>%
  mutate("org_sort_pair" = map2(org, org2, ~ (sort(c(.x, .y)))),
         "proximity" = signif(proximity, digits = 3)) %>%
  distinct(org_sort_pair, .keep_all = TRUE) %>%
  select(!org_sort_pair)

DT::datatable(unq_org_dist_tbl, 
         extensions = c('FixedColumns', "FixedHeader"),
          options = list(scrollX = TRUE, 
                         paging = TRUE,
                         fixedHeader = TRUE,
                         fixedHeight = TRUE))
```

Some notable large-distance pairs jump out, like:

 - Harvey Milk LGBTQ Democratic Club vs Chinese American Democratic Club (distance = 5.18)
 - SF Labor Council vs Chinese American Democratic Club (distance = 5.05)
 - Green Party (SF) vs SF Housing Action Coalition (distance = 4.35)

## Conclusions
We can see from a reasonably well-fitting categorical clustering model that many political organizations have high similarity with the SF Republican Party' positions on ballot measures, despite having "Democratic" in their name. This result supports the idea that a empirical approach can reveal more about the character of an organization that the words in it's name.
